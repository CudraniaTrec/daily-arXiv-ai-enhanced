{"id": "2507.14403", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.14403", "abs": "https://arxiv.org/abs/2507.14403", "authors": ["Sarunas Kalade", "Graham Schelle"], "title": "NPUEval: Optimizing NPU Kernels with LLMs and Open Source Compilers", "comment": null, "summary": "Neural processing units (NPUs) are gaining prominence in power-sensitive\ndevices like client devices, with AI PCs being defined by their inclusion of\nthese specialized processors. Running AI workloads efficiently on these devices\nrequires libraries of optimized kernels. Creating efficient kernels demands\nexpertise in domain-specific C++ with vector intrinsics and in-depth knowledge\nof the target architecture. Unlike GPU programming, which has had years to\nmature, NPU programming is new, with smaller and more fragmented developer\ncommunities across hardware platforms. This fragmentation poses a challenge\nwhen utilizing LLMs to assist in writing NPU kernels, as domain-specific\noptimized code examples are underrepresented in LLM pre-training data.\n  In this paper we introduce NPUEval -- a benchmark for writing and evaluating\nNPU kernels, consisting of 102 common operators for machine learning workloads.\nWe evaluate LLM generated code on actual hardware based on both functional\ncorrectness and vectorization efficiency using open source compiler tools\ntargeting the AMD NPU. We evaluate a range of state-of-the-art LLMs with a mix\nof proprietary and open-weight models. Latest reasoning models like DeepSeek\nR1, show promising results achieving out-of-the-box 50%+ vectorization on\nselect kernels. However, the average score across the entire dataset remains\nroughly 10% even with compiler feedback and vectorized kernel examples --\nshowing that this is a challenging dataset even for frontier models. The\ndataset and evaluation code will be released with a permissive open source\nlicense, providing an essential benchmark for advancing research in code\ngeneration and NPU kernel optimization.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faNPUEval\uff0c\u9996\u4e2a\u4e13\u4e3aNPU\u6838\u51fd\u6570\u751f\u6210\u8bbe\u8ba1\u7684\u516c\u5f00\u8bc4\u6d4b\u57fa\u51c6\uff0c\u5e76\u5bf9\u591a\u79cdLLM\u5728AMD NPU\u4e0a\u8fdb\u884c\u529f\u80fd\u548c\u5411\u91cf\u5316\u6548\u7387\u5b9e\u6d4b\u3002\u6700\u65b0\u5927\u6a21\u578b\u5728\u90e8\u5206\u4efb\u52a1\u4e0a\u8868\u73b0\u5c1a\u53ef\uff0c\u4f46\u6574\u4f53\u5f97\u5206\u8f83\u4f4e\uff0c\u663e\u793a\u8be5\u9886\u57df\u4ecd\u9887\u5177\u6311\u6218\u3002NPUEval\u7684\u53d1\u5e03\u6709\u52a9\u4e8e\u63a8\u52a8NPU\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u81ea\u52a8\u5316\u7814\u7a76\u3002", "motivation": "\u968f\u7740AI PC\u7b49\u7535\u6e90\u654f\u611f\u8bbe\u5907\u65e5\u76ca\u666e\u53ca\uff0c\u795e\u7ecf\u7f51\u7edc\u5904\u7406\u5355\u5143\uff08NPU\uff09\u6210\u4e3a\u5176\u6838\u5fc3\u7ec4\u4ef6\u3002\u7136\u800c\uff0c\u4e0e\u66f4\u6210\u719f\u7684GPU\u7f16\u7a0b\u76f8\u6bd4\uff0cNPU\u5f00\u53d1\u751f\u6001\u96f6\u6563\uff0c\u4f18\u79c0\u7684\u9886\u57df\u5185\u4f18\u5316\u4ee3\u7801\u6781\u5ea6\u7a00\u7f3a\uff0c\u5bfc\u81f4\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u8f85\u52a9NPU\u6838\u51fd\u6570\u5f00\u53d1\u53d8\u5f97\u56f0\u96be\u3002", "method": "\u63d0\u51fa\u5e76\u6784\u5efa\u4e86NPUEval\u57fa\u51c6\u96c6\uff0c\u6db5\u76d6102\u4e2a\u5e38\u89c1\u673a\u5668\u5b66\u4e60\u7b97\u5b50\uff0c\u901a\u8fc7\u5f00\u6e90\u7f16\u8bd1\u5de5\u5177\u5728AMD NPU\u4e0a\uff0c\u5bf9LLM\u81ea\u52a8\u751f\u6210\u7684\u6838\u51fd\u6570\u8fdb\u884c\u529f\u80fd\u6b63\u786e\u6027\u4e0e\u5411\u91cf\u5316\u6548\u7387\u7684\u5b9e\u673a\u8bc4\u6d4b\u3002\u6d4b\u8bd5\u8303\u56f4\u5305\u62ec\u5f53\u524d\u4e3b\u6d41\u5f00\u6e90\u53ca\u4e13\u6709LLM\uff0c\u5e76\u7ed3\u5408\u7f16\u8bd1\u5668\u53cd\u9988\u548c\u5411\u91cf\u5316\u4ee3\u7801\u793a\u4f8b\u8fdb\u884c\u5206\u6790\u3002", "result": "\u90e8\u5206\u6700\u65b0LLM\uff08\u5982DeepSeek R1\uff09\u5728\u90e8\u5206\u7b97\u5b50\u4e0a\u53ef\u5b9e\u73b050%\u4ee5\u4e0a\u7684\u5411\u91cf\u5316\u6548\u679c\uff0c\u4f46\u6574\u4f53102\u4e2a\u7b97\u5b50\u5e73\u5747\u5f97\u5206\u4ec5\u7ea610%\u3002\u5373\u4fbf\u6709\u7f16\u8bd1\u5668\u53cd\u9988\u548c\u4f18\u5316\u793a\u4f8b\uff0c\u5f53\u524d\u6a21\u578b\u5728\u8be5\u4efb\u52a1\u4e0a\u4f9d\u7136\u8868\u73b0\u6709\u9650\uff0cNPUEval\u6570\u636e\u96c6\u5177\u6709\u663e\u8457\u6311\u6218\u6027\u3002", "conclusion": "NPUEval\u4e3aNPU\u6838\u51fd\u6570\u4ee3\u7801\u751f\u6210\u4e0e\u4f18\u5316\u7814\u7a76\u63d0\u4f9b\u4e86\u9996\u4e2a\u53ef\u91cf\u5316\u3001\u5f00\u6e90\u7684\u8bc4\u6d4b\u5e73\u53f0\uff0c\u5c06\u63a8\u52a8\u9886\u57df\u8fdb\u6b65\uff0c\u5e76\u4e30\u5bccLLM\u8f85\u52a9NPU\u5f00\u53d1\u7684\u80fd\u529b\u63a2\u7d22\u3002\u6570\u636e\u96c6\u4e0e\u8bc4\u6d4b\u4ee3\u7801\u5747\u4ee5\u5bbd\u677e\u5f00\u6e90\u534f\u8bae\u53d1\u5e03\u3002"}}
{"id": "2507.14471", "categories": ["cs.PL", "cs.DC"], "pdf": "https://arxiv.org/pdf/2507.14471", "abs": "https://arxiv.org/abs/2507.14471", "authors": ["Logan Kenwright", "Partha Roop", "Nathan Allen", "C\u0103lin Ca\u015fcaval", "Avinash Malik"], "title": "Timetide: A programming model for logically synchronous distributed systems", "comment": "25 Pages, 21 Figures", "summary": "Massive strides in deterministic models have been made using synchronous\nlanguages. They are mainly focused on centralised applications, as the\ntraditional approach is to compile away the concurrency. Time triggered\nlanguages such as Giotto and Lingua Franca are suitable for distribution albeit\nthat they rely on expensive physical clock synchronisation, which is both\nexpensive and may suffer from scalability. Hence, deterministic programming of\ndistributed systems remains challenging. We address the challenges of\ndeterministic distribution by developing a novel multiclock semantics of\nsynchronous programs. The developed semantics is amenable to seamless\ndistribution. Moreover, our programming model, Timetide, alleviates the need\nfor physical clock synchronisation by building on the recently proposed logical\nsynchrony model for distributed systems. We discuss the important aspects of\ndistributing computation, such as network communication delays, and explore the\nformal verification of Timetide programs. To the best of our knowledge,\nTimetide is the first multiclock synchronous language that is both amenable to\ndistribution and formal verification without the need for physical clock\nsynchronisation or clock gating.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u652f\u6301\u5206\u5e03\u3001\u5f62\u5f0f\u5316\u9a8c\u8bc1\u4e14\u4e0d\u4f9d\u8d56\u7269\u7406\u65f6\u949f\u540c\u6b65\u7684\u65b0\u578b\u591a\u65f6\u949f\u540c\u6b65\u8bed\u8a00Timetide\uff0c\u663e\u8457\u6539\u5584\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u786e\u5b9a\u6027\u7f16\u7a0b\u7684\u96be\u9898\u3002", "motivation": "\u5c3d\u7ba1\u540c\u6b65\u8bed\u8a00\u5728\u786e\u5b9a\u6027\u6a21\u578b\u65b9\u9762\u53d6\u5f97\u4e86\u5de8\u5927\u8fdb\u5c55\uff0c\u4f46\u5b83\u4eec\u4e3b\u8981\u7528\u4e8e\u96c6\u4e2d\u5f0f\u5e94\u7528\u3002\u73b0\u6709\u7528\u4e8e\u5206\u5e03\u5f0f\u7684\u65f6\u89e6\u53d1\u8bed\u8a00\u4f9d\u8d56\u4e8e\u6602\u8d35\u4e14\u4e0d\u6613\u6269\u5c55\u7684\u7269\u7406\u65f6\u949f\u540c\u6b65\u3002\u56e0\u6b64\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u786e\u5b9a\u6027\u7f16\u7a0b\u4ecd\u662f\u4e00\u9879\u6311\u6218\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u591a\u65f6\u949f\u8bed\u4e49\u7684\u540c\u6b65\u7a0b\u5e8f\u65b9\u6cd5\u3002\u5f00\u53d1\u4e86Timetide\u8fd9\u4e00\u7f16\u7a0b\u6a21\u578b\uff0c\u57fa\u4e8e\u903b\u8f91\u540c\u6b65\u6a21\u578b\u800c\u975e\u7269\u7406\u65f6\u949f\u540c\u6b65\uff0c\u5e76\u8003\u8651\u4e86\u5206\u5e03\u5f0f\u8ba1\u7b97\u76f8\u5173\u7684\u7f51\u7edc\u901a\u4fe1\u5ef6\u8fdf\u7b49\u95ee\u9898\u3002\u540c\u65f6\u63a2\u7d22\u4e86\u5bf9Timetide\u7a0b\u5e8f\u7684\u5f62\u5f0f\u5316\u9a8c\u8bc1\u3002", "result": "Timetide\u6210\u4e3a\u9996\u4e2a\u65e0\u9700\u7269\u7406\u65f6\u949f\u540c\u6b65\u6216\u65f6\u949f\u95e8\u63a7\uff0c\u5c31\u80fd\u5b9e\u73b0\u5206\u5e03\u3001\u652f\u6301\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u591a\u65f6\u949f\u540c\u6b65\u8bed\u8a00\u3002", "conclusion": "Timetide\u7f16\u7a0b\u6a21\u578b\u6709\u6548\u89e3\u51b3\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u786e\u5b9a\u6027\u7f16\u7a0b\u6240\u9762\u4e34\u7684\u65f6\u949f\u540c\u6b65\u96be\u9898\uff0c\u5b9e\u73b0\u4e86\u66f4\u9ad8\u6548\u548c\u53ef\u9a8c\u8bc1\u7684\u5206\u5e03\u5f0f\u540c\u6b65\u652f\u6301\u3002"}}
{"id": "2507.15007", "categories": ["cs.PL", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.15007", "abs": "https://arxiv.org/abs/2507.15007", "authors": ["Sayed Mahbub Hasan Amiri", "Md. Mainul Islam", "Mohammad Shakhawat Hossen", "Sayed Majhab Hasan Amiri", "Mohammad Shawkat Ali Mamun", "Sk. Humaun Kabir", "Naznin Akter"], "title": "Hear Your Code Fail, Voice-Assisted Debugging for Python", "comment": "35 pages, 20 figures", "summary": "This research introduces an innovative voice-assisted debugging plugin for\nPython that transforms silent runtime errors into actionable audible\ndiagnostics. By implementing a global exception hook architecture with pyttsx3\ntext-to-speech conversion and Tkinter-based GUI visualization, the solution\ndelivers multimodal error feedback through parallel auditory and visual\nchannels. Empirical evaluation demonstrates 37% reduced cognitive load (p<0.01,\nn=50) compared to traditional stack-trace debugging, while enabling 78% faster\nerror identification through vocalized exception classification and\ncontextualization. The system achieves sub-1.2 second voice latency with under\n18% CPU overhead during exception handling, vocalizing error types and\nconsequences while displaying interactive tracebacks with documentation deep\nlinks. Criteria validate compatibility across Python 3.7+ environments on\nWindows, macOS, and Linux platforms. Needing only two lines of integration\ncode, the plugin significantly boosts availability for aesthetically impaired\ndesigners and supports multitasking workflows through hands-free error medical\ndiagnosis. Educational applications show particular promise, with pilot studies\nindicating 45% faster debugging skill acquisition among novice programmers.\nFuture development will incorporate GPT-based repair suggestions and real-time\nmultilingual translation to further advance auditory debugging paradigms. The\nsolution represents a fundamental shift toward human-centric error diagnostics,\nbridging critical gaps in programming accessibility while establishing new\nstandards for cognitive efficiency in software development workflows.", "AI": {"tldr": "\u672c\u7814\u7a76\u63d0\u51fa\u4e86\u4e00\u79cd\u80fd\u5c06Python\u9759\u9ed8\u9519\u8bef\u8f6c\u4e3a\u8bed\u97f3\u548c\u53ef\u89c6\u53cc\u901a\u9053\u53cd\u9988\u7684\u8c03\u8bd5\u63d2\u4ef6\uff0c\u5927\u5e45\u964d\u4f4e\u8ba4\u77e5\u538b\u529b\u3001\u63d0\u5347\u5b9a\u4f4d\u901f\u5ea6\uff0c\u5bf9\u89c6\u89c9\u969c\u788d\u53ca\u7f16\u7a0b\u65b0\u624b\u7279\u522b\u6709\u76ca\uff0c\u5e76\u63a8\u52a8\u4e86\u4eba\u6027\u5316\u3001\u53ef\u8bbf\u95ee\u6027\u7f16\u7a0b\u5de5\u5177\u7684\u65b0\u6807\u51c6\u3002", "motivation": "\u76ee\u524d\u4ee3\u7801\u8c03\u8bd5\u4e3b\u8981\u4f9d\u8d56\u6587\u5b57\u6808\u8ffd\u8e2a\uff0c\u5bf9\u4e8e\u7f8e\u5b66\u969c\u788d\u4eba\u58eb\u548c\u591a\u4efb\u52a1\u64cd\u4f5c\u573a\u666f\u652f\u6301\u4e0d\u8db3\uff0c\u540c\u65f6\u5e26\u6765\u8f83\u9ad8\u7684\u8ba4\u77e5\u8d1f\u62c5\uff0c\u96be\u4ee5\u5feb\u901f\u5b9a\u4f4d\u548c\u7406\u89e3\u9519\u8bef\u3002", "method": "\u672c\u7814\u7a76\u5f00\u53d1\u4e86\u4e00\u4e2a\u521b\u65b0\u7684Python\u8bed\u97f3\u8f85\u52a9\u8c03\u8bd5\u63d2\u4ef6\uff0c\u57fa\u4e8e\u5168\u5c40\u5f02\u5e38\u94a9\u5b50\u67b6\u6784\uff0c\u6574\u5408pyttsx3\u6587\u672c\u8f6c\u8bed\u97f3\u548cTkinter\u56fe\u5f62\u754c\u9762\uff0c\u5b9e\u73b0\u9519\u8bef\u4fe1\u606f\u7684\u542c\u89c9\u548c\u89c6\u89c9\u5e76\u884c\u53cd\u9988\u3002\u63d2\u4ef6\u80fd\u5b9e\u65f6\u6717\u8bfb\u5f02\u5e38\u7c7b\u578b\u53ca\u540e\u679c\uff0c\u5e76\u663e\u793a\u5e26\u6709\u6587\u6863\u94fe\u63a5\u7684\u4ea4\u4e92\u5f0f\u5806\u6808\u8ffd\u8e2a\u754c\u9762\u3002", "result": "\u5b9e\u9a8c\u8bc1\u5b9e\uff0c\u8be5\u63d2\u4ef6\u80fd\u5c06\u8ba4\u77e5\u8d1f\u8377\u964d\u4f4e37%\uff08p<0.01\uff0cn=50\uff09\uff0c\u9519\u8bef\u5b9a\u4f4d\u901f\u5ea6\u63d0\u534778%\uff0c\u8bed\u97f3\u54cd\u5e94\u5ef6\u8fdf\u4f4e\u4e8e1.2\u79d2\uff0c\u5f02\u5e38\u5904\u7406\u65f6CPU\u5f00\u9500\u4e0d\u8d85\u8fc718%\u3002\u4ec5\u9700\u4e24\u884c\u96c6\u6210\u4ee3\u7801\uff0c\u9002\u914d\u4e3b\u6d41\u5e73\u53f0\uff0c\u8f85\u52a9\u7f8e\u5b66\u969c\u788d\u8bbe\u8ba1\u5e08\u53ca\u65b0\u624b\u7a0b\u5e8f\u5458\u8c03\u8bd5\u80fd\u529b\u63d0\u534745%\u3002", "conclusion": "\u8be5\u63d2\u4ef6\u6781\u5927\u63d0\u5347\u4e86\u7f16\u7a0b\u8c03\u8bd5\u7684\u6613\u7528\u6027\u548c\u6548\u7387\uff0c\u63a8\u52a8\u9519\u8bef\u8bca\u65ad\u8d70\u5411\u4ee5\u4eba\u4e3a\u672c\u7684\u65b0\u8303\u5f0f\uff0c\u5f25\u8865\u4e86\u7f16\u7a0b\u53ef\u8bbf\u95ee\u6027\u4e0d\u8db3\u7684\u77ed\u677f\uff0c\u5e76\u4e3a\u672a\u6765\u96c6\u6210GPT\u4fee\u590d\u5efa\u8bae\u53ca\u591a\u8bed\u8a00\u529f\u80fd\u5960\u5b9a\u57fa\u7840\u3002"}}
{"id": "2507.15017", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.15017", "abs": "https://arxiv.org/abs/2507.15017", "authors": ["Xuran Cai", "Liqian Chen", "Hongfei Fu"], "title": "Invariant Generation for Floating-Point Programs via Constraint Solving", "comment": null, "summary": "In numeric-intensive computations, it is well known that the execution of\nfloating-point programs is imprecise as floating point arithmetics (e.g.,\naddition, subtraction, multiplication, division, etc.) incurs rounding errors.\nAlbeit the rounding error is small for every single floating-point operation,\nthe aggregation of such error in multiple operations may be dramatic and cause\ncatastrophic program failures. Therefore, to ensure the correctness of\nfloating-point programs, the effect of floating point error needs to be\ncarefully taken into account. In this work, we consider the invariant\ngeneration for floating point programs, whose aim is to generate tight\ninvariants under the perturbation of floating point errors. Our main\ncontribution is a theoretical framework on how to apply constraint solving\nmethods to address the invariant generation problem. In our framework, we\npropose a novel combination between the first-order differential\ncharacterization by FPTaylor (TOPLAS 2018) and constraint solving methods,\naiming to reduce the computational burden of constraint solving. Moreover, we\ndevise two polynomial invariant generation algorithms to instantiate the\nframework. The first algorithm is applicable to a wide range of floating-point\noperations but requires an initial (coarse) invariant as external input, while\nthe second does not require an initial invariant but is limited to polynomial\nprograms. Furthermore, we show how conditional branches, a difficult issue in\nfloating-point analysis, can be handled in our framework. Experimental results\nshow that our algorithms outperform SOTA approaches in both the time efficiency\nand the precision of the generated invariants over a variety of benchmarks.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u7ea6\u675f\u6c42\u89e3\u6846\u67b6\u53ca\u4e24\u79cd\u9ad8\u6548\u7684\u591a\u9879\u5f0f\u4e0d\u53d8\u91cf\u751f\u6210\u7b97\u6cd5\uff0c\u5b9e\u73b0\u4e86\u5bf9\u6d6e\u70b9\u8bef\u5dee\u5f71\u54cd\u4e0b\u7a0b\u5e8f\u4e0d\u53d8\u91cf\u7684\u66f4\u7cbe\u786e\u3001\u66f4\u9ad8\u6548\u7684\u5224\u5b9a\u3002\u5b9e\u9a8c\u8bc1\u660e\u672c\u65b9\u6cd5\u5728\u591a\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e0a\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "motivation": "\u6d6e\u70b9\u6570\u8fd0\u7b97\u7531\u4e8e\u820d\u5165\u8bef\u5dee\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ed3\u679c\u4e0d\u7cbe\u786e\u3002\u5c3d\u7ba1\u5355\u6b21\u8bef\u5dee\u5f88\u5c0f\uff0c\u4f46\u7d2f\u79ef\u540e\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u751a\u81f3\u707e\u96be\u6027\u7684\u9519\u8bef\u3002\u56e0\u6b64\u9700\u8981\u8003\u8651\u6d6e\u70b9\u8bef\u5dee\u5bf9\u7a0b\u5e8f\u6b63\u786e\u6027\u7684\u5f71\u54cd\uff0c\u5c24\u5176\u662f\u5728\u5224\u5b9a\u7a0b\u5e8f\u4e0d\u53d8\u91cf\u65f6\u8981\u6709\u9c81\u68d2\u6027\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u7406\u8bba\u6846\u67b6\uff0c\u5c06FPTaylor\u7684\u4e00\u9636\u5fae\u5206\u7279\u6027\u4e0e\u7ea6\u675f\u6c42\u89e3\u65b9\u6cd5\u7ed3\u5408\uff0c\u964d\u4f4e\u7ea6\u675f\u6c42\u89e3\u7684\u8ba1\u7b97\u8d1f\u62c5\uff0c\u5e76\u57fa\u4e8e\u6b64\u6846\u67b6\u8bbe\u8ba1\u4e86\u4e24\u79cd\u591a\u9879\u5f0f\u4e0d\u53d8\u91cf\u751f\u6210\u7b97\u6cd5\uff1a\u4e00\u79cd\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u6d6e\u70b9\u8fd0\u7b97\u4f46\u9700\u8f93\u5165\u521d\u59cb\u4e0d\u53d8\u91cf\uff0c\u53e6\u4e00\u65e0\u9700\u521d\u59cb\u4e0d\u53d8\u91cf\u4f46\u9002\u7528\u4e8e\u591a\u9879\u5f0f\u7a0b\u5e8f\u3002\u540c\u65f6\u63d0\u51fa\u4e86\u5904\u7406\u6761\u4ef6\u5206\u652f\u7684\u65b9\u6cd5\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0c\u63d0\u51fa\u7684\u7b97\u6cd5\u5728\u591a\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e0a\u8868\u73b0\u51fa\u8d85\u8d8aSOTA\u65b9\u6cd5\u7684\u8ba1\u7b97\u6548\u7387\u4e0e\u751f\u6210\u4e0d\u53d8\u91cf\u7684\u7cbe\u5ea6\u3002", "conclusion": "\u672c\u6587\u5efa\u7acb\u4e86\u4e00\u5957\u9c81\u68d2\u7684\u4e0d\u53d8\u91cf\u751f\u6210\u65b9\u6cd5\uff0c\u80fd\u591f\u66f4\u9ad8\u6548\u3001\u66f4\u51c6\u786e\u5730\u5904\u7406\u6d6e\u70b9\u6570\u7a0b\u5e8f\u4e2d\u7684\u6570\u503c\u8bef\u5dee\uff0c\u5bf9\u4fdd\u969c\u6570\u503c\u5bc6\u96c6\u578b\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u5177\u6709\u610f\u4e49\u3002"}}
{"id": "2507.15231", "categories": ["cs.DM", "cs.IT", "math.CO", "math.IT"], "pdf": "https://arxiv.org/pdf/2507.15231", "abs": "https://arxiv.org/abs/2507.15231", "authors": ["Andrew Tan", "Oriel Limor", "Daniella Bar-Lev", "Ryan Gabrys", "Zohar Yakhini", "Paul H. Siegel"], "title": "The Labeled Coupon Collector Problem", "comment": "Accepted for presentation in ITW 2025, which will be held at Sydney\n  form Sept. 29 to Oct. 3 in 2025", "summary": "We generalize the well-known Coupon Collector Problem (CCP) in combinatorics.\nOur problem is to find the minimum and expected number of draws, with\nreplacement, required to recover $n$ distinctly labeled coupons, with each draw\nconsisting of a random subset of $k$ different coupons and a random ordering of\ntheir associated labels. We specify two variations of the problem, Type-I in\nwhich the set of labels is known at the start, and Type-II in which the set of\nlabels is unknown at the start. We show that our problem can be viewed as an\nextension of the separating system problem introduced by R\\'enyi and Katona,\nprovide a full characterization of the minimum, and provide a numerical\napproach to finding the expectation using a Markov chain model, with special\nattention given to the case where two coupons are drawn at a time.", "AI": {"tldr": "\u672c\u6587\u63a8\u5e7f\u4e86\u7ecf\u5178\u7684\u4f18\u60e0\u5238\u6536\u96c6\u8005\u95ee\u9898\uff0c\u7814\u7a76\u4e86\u6bcf\u6b21\u62bd\u53d6k\u4e2a\u4e0d\u540c\u6807\u7b7e\u4f18\u60e0\u5238\u7684\u6700\u5c0f\u548c\u671f\u671b\u62bd\u53d6\u6b21\u6570\uff0c\u5e76\u63d0\u51fa\u4e86\u5b8c\u6574\u7684\u7406\u8bba\u5206\u6790\u53ca\u6570\u503c\u89e3\u6cd5\u3002", "motivation": "\u73b0\u6709\u7684\u7ecf\u5178\u4f18\u60e0\u5238\u6536\u96c6\u8005\u95ee\u9898\u4ec5\u8003\u8651\u6bcf\u6b21\u62bd\u53d6\u4e00\u4e2a\u4f18\u60e0\u5238\uff0c\u672c\u8bba\u6587\u5e0c\u671b\u63a8\u5e7f\u5230\u6bcf\u6b21\u968f\u673a\u62bd\u53d6k\u4e2a\u5e26\u6709\u4e0d\u540c\u6807\u7b7e\u7684\u4f18\u60e0\u5238\uff0c\u5e76\u7814\u7a76\u76f8\u5173\u7684\u6700\u5c0f\u548c\u671f\u671b\u62bd\u53d6\u6b21\u6570\u3002\u8be5\u95ee\u9898\u5bf9\u4e8e\u7406\u89e3\u7ec4\u5408\u6700\u4f18\u62bd\u53d6\u7b56\u7565\u53ca\u5e94\u7528\u4e8e\u4fe1\u606f\u5206\u79bb\u7b49\u9886\u57df\u6709\u5b9e\u9645\u610f\u4e49\u3002", "method": "\u4f5c\u8005\u5c06\u95ee\u9898\u6269\u5c55\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1aI\u578b\uff08\u6240\u6709\u6807\u7b7e\u5df2\u77e5\uff09\u548cII\u578b\uff08\u6807\u7b7e\u672a\u77e5\uff09\uff0c\u5e76\u5c06\u5176\u4e0eR\u00e9nnyi\u548cKatona\u63d0\u51fa\u7684\u5206\u79bb\u7cfb\u7edf\u95ee\u9898\u5173\u8054\u3002\u8bba\u6587\u5bf9\u6700\u5c0f\u62bd\u53d6\u6b21\u6570\u8fdb\u884c\u4e86\u5b8c\u6574\u523b\u753b\uff0c\u5e76\u5229\u7528\u9a6c\u5c14\u53ef\u592b\u94fe\u6a21\u578b\u5bf9\u671f\u671b\u62bd\u53d6\u6b21\u6570\u8fdb\u884c\u6570\u503c\u5206\u6790\uff0c\u7279\u522b\u5173\u6ce8\u6bcf\u6b21\u62bd\u53d62\u4e2a\u4f18\u60e0\u5238\u7684\u60c5\u5f62\u3002", "result": "\u8bba\u6587\u8be6\u7ec6\u7ed9\u51fa\u4e86\u6700\u5c0f\u62bd\u53d6\u6b21\u6570\u7684\u7279\u5f81\u63cf\u8ff0\uff0c\u5e76\u63d0\u51fa\u4e86\u7528\u9a6c\u5c14\u53ef\u592b\u94fe\u6a21\u578b\u6570\u503c\u8ba1\u7b97\u671f\u671b\u62bd\u53d6\u6b21\u6570\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u62bd2\u5f20\u5238\u7684\u7279\u6b8a\u60c5\u51b5\u505a\u4e86\u6df1\u5165\u5206\u6790\u3002", "conclusion": "\u901a\u8fc7\u66f4\u4e00\u822c\u5316\u7684\u62bd\u53d6\u6a21\u578b\uff0c\u672c\u6587\u6269\u5c55\u4e86\u4f18\u60e0\u5238\u6536\u96c6\u95ee\u9898\u7684\u7406\u8bba\u8fb9\u754c\uff0c\u5efa\u7acb\u4e86\u4e0e\u5206\u79bb\u7cfb\u7edf\u95ee\u9898\u7684\u5173\u8054\uff0c\u5e76\u4e3a\u5b9e\u9645\u8ba1\u7b97\u63d0\u4f9b\u4e86\u53ef\u884c\u7684\u6570\u503c\u5de5\u5177\u3002\u8be5\u5de5\u4f5c\u4e3a\u76f8\u5173\u7ec4\u5408\u7ed3\u6784\u548c\u6982\u7387\u95ee\u9898\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002"}}
{"id": "2507.14256", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.14256", "abs": "https://arxiv.org/abs/2507.14256", "authors": ["Jakub Walczak", "Piotr Tomalak", "Artur Laskowski"], "title": "Impact of Code Context and Prompting Strategies on Automated Unit Test Generation with Modern General-Purpose Large Language Models", "comment": null, "summary": "Generative AI is gaining increasing attention in software engineering, where\ntesting remains an indispensable reliability mechanism. According to the widely\nadopted testing pyramid, unit tests constitute the majority of test cases and\nare often schematic, requiring minimal domain expertise. Automatically\ngenerating such tests under the supervision of software engineers can\nsignificantly enhance productivity during the development phase of the software\nlifecycle.\n  This paper investigates the impact of code context and prompting strategies\non the quality and adequacy of unit tests generated by various large language\nmodels (LLMs) across several families. The results show that including\ndocstrings notably improves code adequacy, while further extending context to\nthe full implementation yields definitely smaller gains. Notably, the\nchain-of-thought prompting strategy -- applied even to 'reasoning' models --\nachieves the best results, with up to 96.3\\% branch coverage, a 57\\% average\nmutation score, and near-perfect compilation success rate. Among the evaluated\nmodels, M5 (Gemini 2.5 Pro) demonstrated superior performance in both mutation\nscore and branch coverage being still in top in terms of compilation success\nrate.\n  All the code and resulting test suites are publicly available at\nhttps://github.com/peetery/LLM-analysis.", "AI": {"tldr": "\u672c\u6587\u8868\u660e\uff0c\u5229\u7528\u5408\u9002\u7684\u63d0\u793a\u548c\u4e0a\u4e0b\u6587\uff0c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u80fd\u9ad8\u6548\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u5176\u4e2d\u94fe\u5f0f\u601d\u8003\u7b56\u7565\u6548\u679c\u6700\u4f73\uff0cGemini 2.5 Pro\u6a21\u578b\u8868\u73b0\u6700\u5f3a\u3002", "motivation": "\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u80fd\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u53d7\u5230\u5e7f\u6cdb\u5173\u6ce8\uff0c\u5c24\u5176\u5728\u6d4b\u8bd5\u73af\u8282\u3002\u5355\u5143\u6d4b\u8bd5\u5f80\u5f80\u7ed3\u6784\u5316\u5f3a\uff0c\u81ea\u52a8\u751f\u6210\u53ef\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002", "method": "\u672c\u6587\u7814\u7a76\u4e86\u4ee3\u7801\u4e0a\u4e0b\u6587\u548c\u63d0\u793a\u7b56\u7565\u5bf9\u591a\u79cd\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u8d28\u91cf\u4e0e\u5145\u5206\u6027\u7684\u5f71\u54cd\u3002\u5b9e\u9a8c\u4e2d\u5bf9\u6bd4\u4e86\u4e0d\u540c\u4ee3\u7801\u4e0a\u4e0b\u6587\uff08\u5982docstring\u548c\u5b8c\u6574\u5b9e\u73b0\uff09\u548c\u94fe\u5f0f\u601d\u8003\u63d0\u793a\u7b56\u7565\u5bf9\u751f\u6210\u6d4b\u8bd5\u7684\u6548\u679c\u3002", "result": "\u5305\u542bdocstring\u4fe1\u606f\u80fd\u663e\u8457\u63d0\u5347\u6d4b\u8bd5\u5145\u5206\u6027\uff0c\u6dfb\u52a0\u5b8c\u6574\u5b9e\u73b0\u7684\u63d0\u5347\u6709\u9650\u3002\u94fe\u5f0f\u601d\u8003\u63d0\u793a\u7b56\u7565\u6548\u679c\u6700\u597d\uff0c\u6700\u9ad8\u8fbe\u523096.3%\u5206\u652f\u8986\u76d6\u7387\u300157%\u5e73\u5747\u53d8\u5f02\u5206\u6570\u548c\u63a5\u8fd1\u5b8c\u7f8e\u7684\u7f16\u8bd1\u6210\u529f\u7387\u3002Gemini 2.5 Pro\u6a21\u578b\u5728\u5f97\u5206\u548c\u8986\u76d6\u7387\u65b9\u9762\u8868\u73b0\u6700\u4f73\uff0c\u540c\u65f6\u5176\u7f16\u8bd1\u6210\u529f\u7387\u4e5f\u5904\u4e8e\u9ad8\u4f4d\u3002", "conclusion": "\u901a\u8fc7\u9009\u62e9\u5408\u9002\u7684\u4e0a\u4e0b\u6587\u548c\u94fe\u5f0f\u601d\u8003\u63d0\u793a\u7b56\u7565\uff0c\u53ef\u663e\u8457\u63d0\u5347\u5927\u6a21\u578b\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u7684\u8d28\u91cf\u3002Gemini 2.5 Pro\u5728\u6240\u6709\u8bc4\u6d4b\u6307\u6807\u8868\u73b0\u4f18\u5f02\u3002\u6d4b\u8bd5\u4ee3\u7801\u548c\u7ed3\u679c\u5747\u5df2\u5f00\u6e90\u3002"}}
{"id": "2507.14650", "categories": ["cs.LO", "I.2.3, I.2.4", "F.4"], "pdf": "https://arxiv.org/pdf/2507.14650", "abs": "https://arxiv.org/abs/2507.14650", "authors": ["Leonardo Ceragioli", "Giuseppe Primiero"], "title": "A Proof System with Causal Labels (Part I): checking Individual Fairness and Intersectionality", "comment": null, "summary": "In this article we propose an extension to the typed natural deduction\ncalculus TNDPQ to model verification of individual fairness and\nintersectionality in probabilistic classifiers. Their interpretation is\nobtained by formulating specific conditions for the application of the\nstructural rule of Weakening. Such restrictions are given by causal labels used\nto check for conditional independence between protected and target variables.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u6269\u5c55TNDPQ\u63a8\u7406\u7cfb\u7edf\uff0c\u5f15\u5165\u56e0\u679c\u6807\u7b7e\u548c\u7ed3\u6784\u89c4\u5219\u7ea6\u675f\uff0c\u9996\u6b21\u5f62\u5f0f\u5316\u5730\u5b9e\u73b0\u4e86\u5bf9\u6982\u7387\u5206\u7c7b\u5668\u4e2a\u4f53\u516c\u5e73\u6027\u4e0e\u4ea4\u53c9\u6027\u9a8c\u8bc1\u7684\u7406\u8bba\u5efa\u6a21\u3002", "motivation": "\u516c\u5e73\u6027\u548c\u4ea4\u53c9\u6027\u662f\u5f53\u524d\u673a\u5668\u5b66\u4e60\u5c24\u5176\u662f\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u5173\u6ce8\u7684\u70ed\u70b9\u96be\u9898\uff0c\u8be5\u6587\u8bd5\u56fe\u9488\u5bf9\u5982\u4f55\u5f62\u5f0f\u5316\u5730\u9a8c\u8bc1\u8fd9\u4e24\u7c7b\u516c\u5e73\u6027\u63d0\u51fa\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u672c\u6587\u63d0\u51fa\u4e86\u5bf9\u7c7b\u578b\u5316\u81ea\u7136\u6f14\u7ece\u6f14\u7b97TNDPQ\u7684\u6269\u5c55\uff0c\u901a\u8fc7\u5f15\u5165\u7ed3\u6784\u89c4\u5219\u4e2d\u7684\u524a\u5f31\uff08Weakening\uff09\u64cd\u4f5c\u6761\u4ef6\u5316\uff0c\u5c06\u56e0\u679c\u6807\u7b7e\u7528\u4e8e\u68c0\u67e5\u53d7\u4fdd\u62a4\u53d8\u91cf\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u7684\u6761\u4ef6\u72ec\u7acb\u6027\u3002", "result": "\u901a\u8fc7\u5bf9\u524a\u5f31\u7ed3\u6784\u89c4\u5219\u65bd\u52a0\u7531\u56e0\u679c\u6807\u7b7e\u7ed9\u5b9a\u7684\u9650\u5236\uff0c\u5b9e\u73b0\u4e86\u5f62\u5f0f\u5316\u5730\u8868\u8fbe\u548c\u9a8c\u8bc1\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u7684\u4e2a\u4f53\u516c\u5e73\u6027\u4e0e\u4ea4\u53c9\u6027\u3002", "conclusion": "\u672c\u6587\u6269\u5c55\u4e86\u81ea\u7136\u6f14\u7ece\u6f14\u7b97\uff0c\u4f7f\u4e4b\u80fd\u591f\u523b\u753b\u5e76\u9a8c\u8bc1\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u5173\u4e8e\u516c\u5e73\u6027\u548c\u4ea4\u53c9\u6027\u7684\u903b\u8f91\u5c5e\u6027\uff0c\u4e3a\u81ea\u52a8\u5316\u3001\u516c\u5e73\u6027\u5206\u6790\u548c\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u7406\u8bba\u5de5\u5177\u3002"}}
{"id": "2507.14526", "categories": ["cs.FL", "cs.CC"], "pdf": "https://arxiv.org/pdf/2507.14526", "abs": "https://arxiv.org/abs/2507.14526", "authors": ["Evgenii Vinarskii", "Jakub Ruszil", "Adam Roman", "Natalia Kushik"], "title": "Studying homing and synchronizing sequences for Timed Finite State Machines with output delays", "comment": null, "summary": "The paper introduces final state identification (synchronizing and homing)\nsequences for Timed Finite State Machines (TFSMs) with output delays and\ninvestigates their properties. We formally define the notions of homing\nsequences (HSs) and synchronizing sequences (SSs) for these TFSMs and\ndemonstrate that several properties that hold for untimed machines do not\nnecessarily apply to timed ones. Furthermore, we explore the applicability of\nvarious approaches for deriving SSs and HSs for Timed FSMs with output delays,\nsuch as truncated successor tree-based and FSM abstraction-based methods.\nCorrespondingly, we identify the subclasses of TFSMs for which these approaches\ncan be directly applied and those for which other methods are required.\nAdditionally, we evaluate the complexity of existence check and derivation of\n(shortest) HSs / SSs for TFSMs with output delays.", "AI": {"tldr": "\u672c\u6587\u62d3\u5c55\u4e86\u540c\u6b65\u548c\u5f52\u4f4d\u5e8f\u5217\u5230\u5e26\u8f93\u51fa\u5ef6\u8fdf\u7684\u5b9a\u65f6\u6709\u9650\u72b6\u6001\u673a\uff0c\u53d1\u73b0\u65e0\u65f6\u5e8f\u7ed3\u679c\u5e76\u4e0d\u603b\u6210\u7acb\uff0c\u5206\u6790\u4e86\u7b97\u6cd5\u9002\u7528\u6027\u3001\u590d\u6742\u6027\u53ca\u9700\u65b0\u6280\u672f\u7684\u95ee\u9898\uff0c\u4e3aTFSM\u7684\u540c\u6b65\u6027\u4e0e\u5f52\u4f4d\u6027\u7406\u8bba\u548c\u5b9e\u8df5\u5960\u5b9a\u4e86\u57fa\u7840\u3002", "motivation": "\u968f\u7740\u5b9a\u65f6\u6709\u9650\u72b6\u6001\u673a\uff08TFSM\uff09\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u589e\u52a0\uff0c\u9700\u8981\u5c06\u540c\u6b65\u548c\u5f52\u4f4d\u5e8f\u5217\uff08SS\u4e0eHS\uff09\u7684\u6982\u5ff5\u63a8\u5e7f\u5230\u8003\u8651\u8f93\u51fa\u5ef6\u8fdf\u7684TFSMs\u4e0a\uff0c\u4f46\u5df2\u6709\u9488\u5bf9\u65e0\u65f6\u5e8f\u72b6\u6001\u673a\u7684\u65b9\u6cd5\u5e76\u4e0d\u603b\u9002\u7528\u3002\u56e0\u6b64\uff0c\u7814\u7a76TFSMs\u7684\u540c\u6b65\u4e0e\u5f52\u4f4d\u5e8f\u5217\u53ca\u5176\u6027\u8d28\u5341\u5206\u5fc5\u8981\u3002", "method": "\uff081\uff09\u6b63\u5f0f\u5b9a\u4e49\u4e86\u5e26\u8f93\u51fa\u5ef6\u8fdf\u7684TFSMs\u4e2d\u7684\u5f52\u4f4d\uff08HS\uff09\u4e0e\u540c\u6b65\uff08SS\uff09\u5e8f\u5217\uff1b\uff082\uff09\u6bd4\u8f83\u4e86\u65e0\u65f6\u5e8fFSM\u4e0e\u6709\u65f6\u5e8fFSM\u5728\u8fd9\u4e9b\u6027\u8d28\u4e0a\u7684\u4e0d\u540c\uff1b\uff083\uff09\u5206\u6790\u548c\u5c1d\u8bd5\u5229\u7528\u622a\u65ad\u540e\u7ee7\u6811\u65b9\u6cd5\u4e0e\u72b6\u6001\u673a\u62bd\u8c61\u65b9\u6cd5\u63a8\u5bfcTFSM\u7684\u540c\u6b65\u4e0e\u5f52\u4f4d\u5e8f\u5217\uff1b\uff084\uff09\u5f52\u7eb3\u4e86\u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684TFSM\u5b50\u7c7b\uff0c\u5e76\u6307\u51fa\u9700\u8981\u5176\u4ed6\u65b9\u6cd5\u7684\u60c5\u51b5\uff1b\uff085\uff09\u8bc4\u4f30\u4e86\u540c\u6b65/\u5f52\u4f4d\u5e8f\u5217\u7684\u5b58\u5728\u6027\u5224\u65ad\u53ca\u6700\u77ed\u5e8f\u5217\u6c42\u89e3\u7684\u590d\u6742\u6027\u3002", "result": "\u8bc1\u660e\u4e86\u8bb8\u591a\u65e0\u65f6\u5e8f\u6709\u9650\u72b6\u6001\u673a\u7684\u6027\u8d28\u5728\u5b9a\u65f6\u6709\u9650\u72b6\u6001\u673a\u4e2d\u5e76\u4e0d\u603b\u6210\u7acb\uff1b\u660e\u786e\u4e86\u67d0\u4e9b\u65b9\u6cd5\u5728\u7279\u5b9aTFSM\u5b50\u7c7b\u4e2d\u662f\u53ef\u884c\u7684\uff0c\u5bf9\u5176\u4ed6\u60c5\u51b5\u5219\u9700\u8981\u65b0\u65b9\u6cd5\uff1b\u5206\u6790\u4e86\u5b58\u5728\u6027\u4e0e\u6700\u77ed\u5e8f\u5217\u63a8\u5bfc\u95ee\u9898\u7684\u8ba1\u7b97\u590d\u6742\u6027\u3002", "conclusion": "\u4e3a\u5e26\u8f93\u51fa\u5ef6\u8fdf\u7684Timde FSMs\u6269\u5c55\u5e76\u6f84\u6e05\u4e86\u540c\u6b65\u4e0e\u5f52\u4f4d\u5e8f\u5217\u7684\u5b9a\u4e49\u53ca\u6027\u8d28\uff0c\u6307\u51fa\u4e86\u5df2\u6709\u65e0\u65f6\u5e8f\u5206\u6790\u65b9\u6cd5\u7684\u5c40\u9650\uff0c\u786e\u5b9a\u4e86\u76f4\u63a5\u9002\u7528\u6216\u9700\u65b0\u65b9\u6848\u7684TFSM\u7c7b\u522b\uff0c\u5e76\u5bf9\u590d\u6742\u6027\u505a\u51fa\u8bc4\u4f30\uff0c\u4e3a\u4eca\u540e\u76f8\u5173\u7b97\u6cd5\u4e0e\u7406\u8bba\u7814\u7a76\u63d0\u4f9b\u4e86\u57fa\u7840\u3002"}}
{"id": "2507.14189", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.14189", "abs": "https://arxiv.org/abs/2507.14189", "authors": ["Song Mao", "Lejun Cheng", "Pinlong Cai", "Guohang Yan", "Ding Wang", "Botian Shi"], "title": "DeepWriter: A Fact-Grounded Multimodal Writing Assistant Based On Offline Knowledge Base", "comment": "work in process", "summary": "Large Language Models (LLMs) have demonstrated remarkable capabilities in\nvarious applications. However, their use as writing assistants in specialized\ndomains like finance, medicine, and law is often hampered by a lack of deep\ndomain-specific knowledge and a tendency to hallucinate. Existing solutions,\nsuch as Retrieval-Augmented Generation (RAG), can suffer from inconsistency\nacross multiple retrieval steps, while online search-based methods often\ndegrade quality due to unreliable web content. To address these challenges, we\nintroduce DeepWriter, a customizable, multimodal, long-form writing assistant\nthat operates on a curated, offline knowledge base. DeepWriter leverages a\nnovel pipeline that involves task decomposition, outline generation, multimodal\nretrieval, and section-by-section composition with reflection. By deeply mining\ninformation from a structured corpus and incorporating both textual and visual\nelements, DeepWriter generates coherent, factually grounded, and\nprofessional-grade documents. We also propose a hierarchical knowledge\nrepresentation to enhance retrieval efficiency and accuracy. Our experiments on\nfinancial report generation demonstrate that DeepWriter produces high-quality,\nverifiable articles that surpasses existing baselines in factual accuracy and\ngenerated content quality.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u79bb\u7ebf\u77e5\u8bc6\u5e93\u7684\u591a\u6a21\u6001AI\u5199\u4f5c\u52a9\u624bDeepWriter\uff0c\u5728\u4e8b\u5b9e\u51c6\u786e\u6027\u548c\u5185\u5bb9\u8d28\u91cf\u4e0a\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u540c\u7c7b\u65b9\u6cd5\uff0c\u5c24\u5176\u9002\u5408\u4e13\u4e1a\u9886\u57df\u7684\u9ad8\u8981\u6c42\u5199\u4f5c\u573a\u666f\u3002", "motivation": "\u5c3d\u7ba1\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728\u4f17\u591a\u9886\u57df\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u5728\u91d1\u878d\u3001\u533b\u7597\u3001\u6cd5\u5f8b\u7b49\u4e13\u4e1a\u9886\u57df\uff0c\u7531\u4e8e\u77e5\u8bc6\u6df1\u5ea6\u6709\u9650\u548c\u5e7b\u89c9\u73b0\u8c61\uff0c\u5176\u4f5c\u4e3a\u5199\u4f5c\u52a9\u624b\u7684\u6548\u679c\u53d7\u9650\u3002\u73b0\u6709\u5982RAG\u7684\u65b9\u6cd5\u5b58\u5728\u8de8\u591a\u6b65\u68c0\u7d22\u4e00\u81f4\u6027\u5dee\u7684\u95ee\u9898\uff0c\u5728\u7ebf\u641c\u7d22\u4f9d\u8d56\u7f51\u7edc\u5185\u5bb9\u4e5f\u6613\u5bfc\u81f4\u5185\u5bb9\u4e0d\u53ef\u9760\uff0c\u56e0\u6b64\u4e9f\u9700\u66f4\u53ef\u9760\u7684\u4e13\u4e1a\u5199\u4f5c\u8f85\u52a9\u65b9\u6848\u3002", "method": "\u63d0\u51faDeepWriter\u7cfb\u7edf\uff0c\u5229\u7528\u79bb\u7ebf\u3001\u7cbe\u5fc3\u7b56\u5212\u7684\u77e5\u8bc6\u5e93\u3002\u7cfb\u7edf\u5305\u542b\u4efb\u52a1\u5206\u89e3\u3001\u7eb2\u8981\u751f\u6210\u3001\u591a\u6a21\u6001\u68c0\u7d22\u4ee5\u53ca\u9010\u6bb5\u64b0\u5199\u4e0e\u53cd\u601d\u6d41\u7a0b\uff0c\u7ed3\u5408\u6587\u672c\u4e0e\u89c6\u89c9\u4fe1\u606f\uff0c\u5e76\u8bbe\u8ba1\u4e86\u5206\u5c42\u77e5\u8bc6\u8868\u793a\u63d0\u5347\u68c0\u7d22\u6548\u7387\u548c\u51c6\u786e\u6027\u3002", "result": "\u5728\u91d1\u878d\u62a5\u544a\u751f\u6210\u4efb\u52a1\u4e0a\uff0cDeepWriter\u751f\u6210\u7684\u6587\u7ae0\u5728\u4e8b\u5b9e\u51c6\u786e\u6027\u548c\u5185\u5bb9\u8d28\u91cf\u65b9\u9762\u5747\u8d85\u8d8a\u4e86\u73b0\u6709\u57fa\u7ebf\u65b9\u6cd5\uff0c\u80fd\u591f\u8f93\u51fa\u9ad8\u8d28\u91cf\u3001\u53ef\u9a8c\u8bc1\u7684\u4e13\u4e1a\u6587\u672c\u3002", "conclusion": "DeepWriter\u80fd\u591f\u6709\u6548\u6316\u6398\u7ed3\u6784\u5316\u77e5\u8bc6\u5e93\u4fe1\u606f\uff0c\u751f\u6210\u7ed3\u6784\u8fde\u8d2f\u3001\u771f\u5b9e\u53ef\u9760\u3001\u4e13\u4e1a\u7ea7\u7684\u957f\u6587\u672c\uff0c\u4e3a\u4e13\u4e1a\u9886\u57df\u5199\u4f5c\u8f85\u52a9\u63d0\u4f9b\u4e86\u66f4\u4f18\u89e3\u3002"}}
{"id": "2507.15277", "categories": ["cs.PL", "D.3.4"], "pdf": "https://arxiv.org/pdf/2507.15277", "abs": "https://arxiv.org/abs/2507.15277", "authors": ["Robert Hochgraf", "Sreepathi Pai"], "title": "A Few Fit Most: Improving Performance Portability of SGEMM on GPUs using Multi-Versioning", "comment": "13 pages, 8 figures", "summary": "Hand-optimizing linear algebra kernels for different GPU devices and\napplications is complex and labor-intensive. Instead, many developers use\nautomatic performance tuning (autotuning) to achieve high performance on a\nvariety of devices. However, autotuning \"overfits\", and must be redone if any\npart of the environment changes, such as if the device or input characteristics\nchange.\n  In most non-trivial cases, a single compute kernel cannot maintain\nnear-optimal performance across all environments. Changing the kernel to\nspecialize it to the current execution environment is possible, but on GPUs,\nruntime tuning and compilation can be expensive.\n  In this work, we use multi-versioning -- producing several variants of the\nsame code -- as a way to generate performance portable code. We describe a\nframework called portability tuning that can automatically generate\nmulti-versioned code whose performance is portable, requiring no retuning.\n  We evaluate our framework on a dataset of execution times for GEMM kernels\nfrom the CLBlast linear algebra library. We find our portability tuning\ntechniques outperform CLBlast's default kernels -- often approaching within 10%\nof the theoretical maximum performance -- despite CLBlast using autotuning\ntechniques. Further, we find that our generated programs generalize well to new\nand unseen devices, matching the performance of autotuning without ever\nportability tuning for those devices.", "AI": {"tldr": "\u672c\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u81ea\u52a8\u591a\u7248\u672c\u4ee3\u7801\u751f\u6210\u4e0e\u6027\u80fd\u53ef\u79fb\u690d\u6027\u8c03\u4f18\u7684\u65b0\u65b9\u6848\uff0c\u80fd\u5728\u591a\u79cdGPU\u548c\u8f93\u5165\u73af\u5883\u4e0b\u5b9e\u73b0\u63a5\u8fd1\u6700\u4f18\u7684\u8ba1\u7b97\u6027\u80fd\uff0c\u65e0\u9700\u9891\u7e41\u624b\u52a8\u4f18\u5316\u6216\u91cd\u65b0autotuning\uff0c\u5728\u5b9e\u9a8c\u4e2d\u4f18\u4e8e\u4f20\u7edf\u81ea\u52a8\u8c03\u4f18\u65b9\u6cd5\uff0c\u5e76\u80fd\u826f\u597d\u9002\u5e94\u65b0\u8bbe\u5907\u3002", "motivation": "\u9488\u5bf9\u4e0d\u540cGPU\u8bbe\u5907\u548c\u5e94\u7528\uff0c\u624b\u52a8\u4f18\u5316\u7ebf\u6027\u4ee3\u6570\u6838\u5fc3\u4ee3\u7801\u975e\u5e38\u590d\u6742\u4e14\u8d39\u65f6\u3002\u867d\u7136\u81ea\u52a8\u6027\u80fd\u8c03\u4f18\uff08autotuning\uff09\u5e38\u88ab\u7528\u4e8e\u83b7\u5f97\u66f4\u9ad8\u6027\u80fd\uff0c\u4f46\u5176\u65b9\u6848\u5bb9\u6613\u8fc7\u62df\u5408\uff0c\u53ea\u8981\u73af\u5883\u53d1\u751f\u53d8\u5316\uff08\u5982\u8bbe\u5907\u6216\u8f93\u5165\u7279\u6027\u53d8\u5316\uff09\u5c31\u9700\u91cd\u65b0\u8c03\u4f18\u3002\u56e0\u6b64\uff0c\u5bfb\u6c42\u4e00\u79cd\u53ef\u79fb\u690d\u4e14\u65e0\u9700\u9891\u7e41\u8c03\u4f18\u7684\u6027\u80fd\u4f18\u5316\u65b9\u6cd5\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u6846\u67b6\u201cportability tuning\u201d\uff0c\u901a\u8fc7\u591a\u7248\u672c\u5316\uff08multi-versioning\uff09\u6280\u672f\u81ea\u52a8\u751f\u6210\u591a\u7248\u672c\u4ee3\u7801\uff0c\u4f7f\u6027\u80fd\u5177\u6709\u53ef\u79fb\u690d\u6027\uff0c\u65e0\u9700\u53cd\u590d\u8c03\u4f18\u3002\u8be5\u6846\u67b6\u5728CLBlast\u7ebf\u6027\u4ee3\u6570\u5e93\u7684GEMM kernel\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u901a\u8fc7\u5bf9\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u6267\u884c\u65f6\u95f4\u6570\u636e\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u6846\u67b6\u751f\u6210\u7684\u4ee3\u7801\u5728\u591a\u79cd\u73af\u5883\u4e0b\u7684\u6027\u80fd\u666e\u904d\u4f18\u4e8eCLBlast\u7684\u9ed8\u8ba4kernel\uff0c\u901a\u5e38\u80fd\u63a5\u8fd1\u7406\u8bba\u6027\u80fd\u4e0a\u9650\u768490%\uff1b\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5728\u65b0\u8bbe\u5907\u4e0a\u7684\u6027\u80fd\u4e5f\u80fd\u5f88\u597d\u5730\u6cdb\u5316\uff0c\u65e0\u9700\u989d\u5916\u7684\u8c03\u4f18\u5373\u53ef\u8fbe\u5230\u4e0eautotuning\u76f8\u5f53\u7684\u6548\u679c\u3002", "conclusion": "\u591a\u7248\u672c\u5316\u7ed3\u5408portability tuning\u6846\u67b6\u80fd\u591f\u5b9e\u73b0\u65e0\u9700\u9891\u7e41\u8c03\u4f18\u7684\u9ad8\u6027\u80fd\u79fb\u690d\uff0c\u517c\u5177\u9ad8\u6548\u4e0e\u53ef\u6269\u5c55\u6027\u3002\u8be5\u65b9\u6848\u6709\u52a9\u4e8e\u7b80\u5316\u7ebf\u6027\u4ee3\u6570kernel\u5728\u591aGPU\u548c\u65b0\u8bbe\u5907\u4e0a\u7684\u6027\u80fd\u4f18\u5316\u6d41\u7a0b\u3002"}}
{"id": "2507.15316", "categories": ["cs.FL", "cs.DM", "cs.DS", "F.1.1;F.4.3;F.1.3"], "pdf": "https://arxiv.org/pdf/2507.15316", "abs": "https://arxiv.org/abs/2507.15316", "authors": ["Benedek Nagy"], "title": "A Myhill-Nerode Type Characterization of 2detLIN Languages", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "Linear automata are automata with two reading heads starting from the two\nextremes of the input, are equivalent to 5' -> 3' Watson-Crick (WK) finite\nautomata. The heads read the input in opposite directions and the computation\nfinishes when the heads meet. These automata accept the class LIN of linear\nlanguages. The deterministic counterpart of these models, on the one hand, is\nless expressive, as only a proper subset of LIN, the class 2detLIN is accepted;\nand on the other hand, they are also equivalent in the sense of the class of\nthe accepted languages. Now, based on these automata models, we characterize\nthe class of 2detLIN languages with a Myhill-Nerode type of equivalence\nclasses. However, as these automata may do the computation of both the prefix\nand the suffix of the input, we use prefix-suffix pairs in our classes.\nAdditionally, it is proven that finitely many classes in the characterization\nmatch with the 2detLIN languages, but we have some constraints on the used\nprefix-suffix pairs, i.e., the characterization should have the property to be\ncomplete and it must not have any crossing pairs.", "AI": {"tldr": "\u672c\u6587\u7528\u524d\u7f00-\u540e\u7f00\u5bf9\u7b49\u4ef7\u7c7b\u523b\u753b\u4e86\u786e\u5b9a\u6027\u7ebf\u6027\u81ea\u52a8\u673a\uff082detLIN\uff09\u80fd\u63a5\u53d7\u7684\u8bed\u8a00\uff0c\u5e76\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u7684\u5fc5\u8981\u7ea6\u675f\u548c\u6709\u6548\u6027\u3002", "motivation": "\u7ebf\u6027\u81ea\u52a8\u673a\uff08linear automata\uff09\u7528\u4e8e\u5904\u7406\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u7ed3\u6784\u6709\u9650\u8bed\u8a00\u3002\u8be5\u7814\u7a76\u63a2\u8ba8\u4e86\u8fd9\u7c7b\u81ea\u52a8\u673a\u53ca\u5176\u786e\u5b9a\u6027\u7248\u672c\uff082detLIN\u7c7b\uff09\u7684\u8868\u8fbe\u80fd\u529b\u548c\u7b49\u4ef7\u6761\u4ef6\uff0c\u8bd5\u56fe\u66f4\u7cbe\u786e\u5730\u523b\u753b\u5176\u53ef\u63a5\u53d7\u8bed\u8a00\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eMyhill-Nerode\u7b49\u4ef7\u7c7b\u7684\u65b0\u65b9\u6cd5\u6765\u523b\u753b2detLIN\u8bed\u8a00\u7c7b\u3002\u6b64\u5916\uff0c\u5229\u7528\u524d\u7f00-\u540e\u7f00\u5bf9\uff08prefix-suffix pairs\uff09\u6765\u8868\u793a\u548c\u5206\u6790\u8fd9\u4e9b\u7b49\u4ef7\u7c7b\uff0c\u4ece\u7406\u8bba\u4e0a\u7814\u7a76\u4e86\u7b49\u4ef7\u7c7b\u6570\u91cf\u548c\u7ed3\u6784\u7279\u5f81\u3002", "result": "\u8bc1\u660e\u4e86\u524d\u7f00-\u540e\u7f00\u5bf9\u7684\u7b49\u4ef7\u7c7b\u6570\u91cf\u6709\u9650\u65f6\u523b\u753b\u7684\u8bed\u8a00\u6b63\u597d\u4e0e2detLIN\u8bed\u8a00\u7c7b\u4e00\u81f4\uff0c\u4f46\u8fd9\u4e2a\u523b\u753b\u9700\u8981\u6ee1\u8db3\u65e0\u4ea4\u53c9\u5bf9\u3001\u5b8c\u6574\u6027\u7b49\u7ea6\u675f\u6761\u4ef6\u3002", "conclusion": "\u901a\u8fc7\u524d\u7f00-\u540e\u7f00\u5bf9\u7684Myhill-Nerode\u578b\u7b49\u4ef7\u7c7b\u6210\u529f\u523b\u753b\u4e862detLIN\u8bed\u8a00\uff0c\u4e3a\u5224\u5b9a\u548c\u5206\u6790\u7ebf\u6027\u81ea\u52a8\u673a\u8bed\u8a00\u7c7b\u63d0\u4f9b\u4e86\u65b0\u7684\u7406\u8bba\u5de5\u5177\u3002"}}
{"id": "2507.14330", "categories": ["cs.SE", "D.2.1; D.2.4; D.2.10; F.4.1; F.4.3"], "pdf": "https://arxiv.org/pdf/2507.14330", "abs": "https://arxiv.org/abs/2507.14330", "authors": ["Arshad Beg", "Diarmuid O'Donoghue", "Rosemary Monahan"], "title": "Leveraging LLMs for Formal Software Requirements -- Challenges and Prospects", "comment": "Submitted to Overlay2025 - 7th International Workshop on Artificial\n  Intelligence and fOrmal VERification, Logic, Automata, and sYnthesis. [under\n  review]", "summary": "Software correctness is ensured mathematically through formal verification,\nwhich involves the resources of generating formal requirement specifications\nand having an implementation that must be verified. Tools such as\nmodel-checkers and theorem provers ensure software correctness by verifying the\nimplementation against the specification. Formal methods deployment is\nregularly enforced in the development of safety-critical systems e.g.\naerospace, medical devices and autonomous systems. Generating these\nspecifications from informal and ambiguous natural language requirements\nremains the key challenge. Our project, VERIFAI^{1}, aims to investigate\nautomated and semi-automated approaches to bridge this gap, using techniques\nfrom Natural Language Processing (NLP), ontology-based domain modelling,\nartefact reuse, and large language models (LLMs). This position paper presents\na preliminary synthesis of relevant literature to identify recurring challenges\nand prospective research directions in the generation of verifiable\nspecifications from informal requirements.", "AI": {"tldr": "\u5c06\u81ea\u7136\u8bed\u8a00\u9700\u6c42\u8f6c\u5316\u4e3a\u53ef\u9a8c\u8bc1\u89c4\u8303\u6781\u5177\u6311\u6218\uff0c\u672c\u6587\u7efc\u8ff0\u4e86\u76f8\u5173\u81ea\u52a8\u5316\u6280\u672f\uff0c\u660e\u786e\u4e86\u5b58\u5728\u95ee\u9898\u5e76\u6307\u51fa\u672a\u6765\u7684\u7814\u7a76\u65b9\u5411\u3002", "motivation": "\u5f62\u5f0f\u5316\u9a8c\u8bc1\u80fd\u4fdd\u8bc1\u8f6f\u4ef6\u6b63\u786e\u6027\uff0c\u4f46\u5c06\u81ea\u7136\u8bed\u8a00\uff08\u901a\u5e38\u6a21\u7cca\u3001\u975e\u6b63\u5f0f\uff09\u7684\u9700\u6c42\u8f6c\u5316\u4e3a\u53ef\u9a8c\u8bc1\u7684\u5f62\u5f0f\u5316\u89c4\u8303\u662f\u6700\u5927\u96be\u9898\u3002", "method": "\u901a\u8fc7\u6587\u732e\u7efc\u8ff0\uff0c\u603b\u7ed3\u5e94\u7528NLP\u3001\u57fa\u4e8e\u672c\u4f53\u7684\u9886\u57df\u5efa\u6a21\u3001\u5de5\u4ef6\u590d\u7528\u548c\u5927\u8bed\u8a00\u6a21\u578b\u7b49\u81ea\u52a8\u5316\u548c\u534a\u81ea\u52a8\u5316\u6280\u672f\uff0c\u5bfb\u6c42\u4ece\u81ea\u7136\u8bed\u8a00\u9700\u6c42\u751f\u6210\u5f62\u5f0f\u5316\u89c4\u8303\u7684\u53ef\u884c\u65b9\u6cd5\u3002", "result": "\u672c\u6587\u521d\u6b65\u68b3\u7406\u4e86\u5f53\u524d\u81ea\u52a8\u751f\u6210\u5f62\u5f0f\u5316\u89c4\u8303\u7684\u76f8\u5173\u6280\u672f\u53ca\u6210\u679c\uff0c\u540c\u65f6\u603b\u7ed3\u4e86\u9762\u4e34\u7684\u4e3b\u8981\u6311\u6218\uff0c\u5e76\u5c55\u671b\u4e86\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002", "conclusion": "\u73b0\u6709\u4ece\u81ea\u7136\u8bed\u8a00\u9700\u6c42\u751f\u6210\u53ef\u9a8c\u8bc1\u89c4\u8303\u7684\u81ea\u52a8\u5316\u65b9\u6cd5\u5c1a\u4e0d\u6210\u719f\uff0c\u672c\u6587\u4e3a\u540e\u7eed\u7814\u7a76\u660e\u786e\u4e86\u4e3b\u8981\u96be\u70b9\u548c\u6f5c\u5728\u8def\u7ebf\uff0c\u5bf9\u63a8\u8fdb\u5b89\u5168\u5173\u952e\u7cfb\u7edf\u8f6f\u4ef6\u7684\u81ea\u52a8\u5316\u9a8c\u8bc1\u5177\u6709\u53c2\u8003\u4ef7\u503c\u3002"}}
{"id": "2507.14655", "categories": ["cs.LO", "I.2.3, I.2.4", "F.4"], "pdf": "https://arxiv.org/pdf/2507.14655", "abs": "https://arxiv.org/abs/2507.14655", "authors": ["Leonardo Ceragioli", "Giuseppe Primiero"], "title": "A Proof System with Causal Labels (Part II): checking Counterfactual Fairness", "comment": null, "summary": "In this article we propose an extension to the typed natural deduction\ncalculus TNDPQ to model verification of counterfactual fairness in\nprobabilistic classifiers. This is obtained formulating specific structural\nconditions for causal labels and checking that evaluation is robust under their\nvariation.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7c7b\u578b\u81ea\u7136\u6f14\u7ece\u6f14\u7b97\u6269\u5c55\u7684\u65b9\u6cd5\uff0c\u5f62\u5f0f\u5316\u9a8c\u8bc1\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u7684\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\uff0c\u901a\u8fc7\u7ed3\u6784\u6761\u4ef6\u5206\u6790\u548c\u9c81\u68d2\u6027\u68c0\u9a8c\u63d0\u4f9b\u6a21\u578b\u516c\u5e73\u6027\u5206\u6790\u5de5\u5177\u3002", "motivation": "\u968f\u7740\u6982\u7387\u5206\u7c7b\u5668\u5728\u654f\u611f\u9886\u57df\u5e94\u7528\u589e\u591a\uff0c\u6a21\u578b\u7684\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\u53d8\u5f97\u91cd\u8981\u3002\u73b0\u6709\u65b9\u6cd5\u7f3a\u4e4f\u7cfb\u7edf\u7684\u3001\u5f62\u5f0f\u5316\u7684\u9a8c\u8bc1\u624b\u6bb5\u3002\u4f5c\u8005\u65e8\u5728\u901a\u8fc7\u903b\u8f91\u6f14\u7ece\u65b9\u6cd5\u4e3a\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\u63d0\u4f9b\u4e00\u79cd\u7ed3\u6784\u5316\u3001\u53ef\u9a8c\u8bc1\u7684\u5206\u6790\u6846\u67b6\u3002", "method": "\u65b9\u6cd5\u4e0a\uff0c\u4f5c\u8005\u6269\u5c55\u4e86TNDPQ\u7c7b\u578b\u81ea\u7136\u6f14\u7ece\u6f14\u7b97\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u523b\u753b\u548c\u9a8c\u8bc1\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u7684\u56e0\u679c\u6807\u7b7e\u7ed3\u6784\u6761\u4ef6\u53ca\u5176\u53d8\u5316\u4e0b\u7684\u8868\u73b0\u3002\u901a\u8fc7\u8fd9\u79cd\u903b\u8f91\u6f14\u7b97\u6846\u67b6\uff0c\u68c0\u67e5\u6a21\u578b\u5bf9\u6807\u7b7e\u56e0\u679c\u7ed3\u6784\u7684\u654f\u611f\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\u7684\u5206\u6790\u3002", "result": "\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd\u53ef\u4ee5\u5bf9\u6982\u7387\u5206\u7c7b\u5668\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\u8fdb\u884c\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u63a8\u7406\u7cfb\u7edf\uff0c\u80fd\u591f\u6709\u6548\u5206\u6790\u56e0\u679c\u6807\u7b7e\u7ed3\u6784\u53d8\u5316\u5bf9\u6a21\u578b\u516c\u5e73\u6027\u7684\u5f71\u54cd\u3002", "conclusion": "\u6587\u7ae0\u63d0\u51fa\u4e86\u4e00\u79cd\u6269\u5c55\u7684\u7c7b\u578b\u81ea\u7136\u6f14\u7ece\u6f14\u7b97\u6a21\u578b\uff08TNDPQ\uff09\uff0c\u7528\u4e8e\u9a8c\u8bc1\u6982\u7387\u5206\u7c7b\u5668\u4e2d\u7684\u53cd\u4e8b\u5b9e\u516c\u5e73\u6027\u3002\u8be5\u65b9\u6cd5\u901a\u8fc7\u5bf9\u56e0\u679c\u6807\u7b7e\u5236\u5b9a\u7279\u5b9a\u7ed3\u6784\u6761\u4ef6\uff0c\u5e76\u68c0\u67e5\u63a8\u65ad\u5728\u8fd9\u4e9b\u6761\u4ef6\u53d8\u5316\u4e0b\u7684\u9c81\u68d2\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u516c\u5e73\u6027\u7684\u9a8c\u8bc1\u3002"}}
{"id": "2507.15310", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2507.15310", "abs": "https://arxiv.org/abs/2507.15310", "authors": ["Martin Kutrib", "Andreas Malcher", "Matthias Wendlandt"], "title": "Input-Driven Pushdown Automata with Translucent Input Letters", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "Input-driven pushdown automata with translucent input letters are\ninvestigated. Here, the use of translucent input letters means that the input\nis processed in several sweeps and that, depending on the current state of the\nautomaton, some input symbols are visible and can be processed, whereas some\nother symbols are invisible, and may be processed in another sweep.\nAdditionally, the returning mode as well as the non-returning mode are\nconsidered, where in the former mode a new sweep must start after processing a\nvisible input symbol. Input-driven pushdown automata differ from traditional\npushdown automata by the fact that the actions on the pushdown store (push,\npop, nothing) are dictated by the input symbols. We obtain the result that the\ninput-driven nondeterministic model is computationally stronger than the\ndeterministic model both in the returning mode and in the non-returning mode,\nwhereas it is known that the deterministic and the nondeterministic model are\nequivalent for input-driven pushdown automata without translucency. It also\nturns out that the non-returning model is computationally stronger than the\nreturning model both in the deterministic and nondeterministic case.\nFurthermore, we investigate the closure properties of the language families\nintroduced under the Boolean operations. We obtain a complete picture in the\ndeterministic case, whereas in the nondeterministic case the language families\nare shown to be not closed under complementation. Finally, we look at\ndecidability questions and obtain the non-semidecidability of the questions of\nuniversality, inclusion, equivalence, and regularity in the nondeterministic\ncase.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5e76\u7cfb\u7edf\u5206\u6790\u4e86\u201c\u534a\u900f\u660e\u8f93\u5165\u5b57\u6bcd\u201d\u4e0b\u7684\u8f93\u5165\u9a71\u52a8\u4e0b\u63a8\u81ea\u52a8\u673a\u6a21\u578b\uff0c\u8bc1\u660e\u975e\u786e\u5b9a\u6027\u6bd4\u786e\u5b9a\u6027\u66f4\u5f3a\u3001\u975e\u8fd4\u56de\u6a21\u5f0f\u6bd4\u8fd4\u56de\u6a21\u5f0f\u66f4\u5f3a\uff0c\u4e14\u5f88\u591a\u5224\u5b9a\u95ee\u9898\u5728\u975e\u786e\u5b9a\u6027\u4e0b\u4e0d\u53ef\u534a\u5224\u5b9a\u3002", "motivation": "\u7814\u7a76\u8f93\u5165\u9a71\u52a8\u4e0b\u63a8\u81ea\u52a8\u673a\uff08input-driven pushdown automata\uff09\u5728\u5177\u6709\u201c\u534a\u900f\u660e\u8f93\u5165\u5b57\u6bcd\u201d\u5904\u7406\u673a\u5236\u4e0b\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u6027\u8d28\uff0c\u533a\u522b\u4e8e\u4f20\u7edf\u4e0b\u63a8\u81ea\u52a8\u673a\uff0c\u5e76\u5206\u6790\u65b0\u6a21\u578b\u5728\u4e0d\u540c\u5de5\u4f5c\u6a21\u5f0f\u4e0b\u7684\u8868\u73b0\u53ca\u76f8\u5173\u95ee\u9898\u7684\u53ef\u5224\u5b9a\u6027\u3002", "method": "\u63d0\u51fa\u5c06\u8f93\u5165\u9a71\u52a8\u4e0b\u63a8\u81ea\u52a8\u673a\u6784\u9020\u5f15\u5165\u201c\u534a\u900f\u660e\u8f93\u5165\u5b57\u6bcd\u201d\u673a\u5236\uff0c\u5373\u8f93\u5165\u7ecf\u8fc7\u591a\u8f6e\u626b\u63cf\uff0c\u4e0d\u540c\u72b6\u6001\u4e0b\u90e8\u5206\u8f93\u5165\u53ef\u89c1\u3001\u90e8\u5206\u4e0d\u53ef\u89c1\u3002\u8ba8\u8bba\u4e86\u4e24\u79cd\u6a21\u5f0f\uff1a\u8fd4\u56de\u5f0f\u548c\u975e\u8fd4\u56de\u5f0f\uff0c\u5206\u522b\u5206\u6790\u786e\u5b9a\u6027\u548c\u975e\u786e\u5b9a\u6027\u6a21\u578b\u4e0b\u7684\u8ba1\u7b97\u80fd\u529b\u53ca\u5176\u8bed\u8a00\u7684\u95ed\u5305\u5c5e\u6027\u548c\u5224\u5b9a\u6027\u95ee\u9898\u3002", "result": "\uff081\uff09\u6709\u534a\u900f\u660e\u8f93\u5165\u5b57\u6bcd\u7684\u8f93\u5165\u9a71\u52a8\u4e0b\u63a8\u81ea\u52a8\u673a\uff0c\u975e\u786e\u5b9a\u6027\u6a21\u578b\u7684\u8ba1\u7b97\u80fd\u529b\u5f3a\u4e8e\u786e\u5b9a\u6027\u6a21\u578b\uff0c\u65e0\u8bba\u662f\u5728\u8fd4\u56de\u8fd8\u662f\u975e\u8fd4\u56de\u6a21\u5f0f\uff0c\u800c\u539f\u672c\u4e00\u822c\u6a21\u578b\u4e24\u8005\u662f\u7b49\u4ef7\u7684\u3002 \uff082\uff09\u975e\u8fd4\u56de\u6a21\u5f0f\u7684\u6a21\u578b\u8ba1\u7b97\u80fd\u529b\u5f3a\u4e8e\u8fd4\u56de\u6a21\u5f0f\uff0c\u65e0\u8bba\u786e\u5b9a\u6027\u8fd8\u662f\u975e\u786e\u5b9a\u6027\u3002 \uff083\uff09\u5173\u4e8e\u5e03\u5c14\u8fd0\u7b97\u4e0b\u7684\u95ed\u5305\u6027\uff1a\u786e\u5b9a\u6027\u60c5\u5f62\u5f97\u51fa\u5b8c\u6574\u7ed3\u8bba\uff0c\u975e\u786e\u5b9a\u6027\u60c5\u5f62\u4e0b\u76f8\u5173\u8bed\u8a00\u65cf\u4e0d\u5bf9\u8865\u96c6\u95ed\u5305\u3002 \uff084\uff09\u975e\u786e\u5b9a\u6027\u6a21\u578b\u4e0b\uff0c\u5173\u4e8e\u666e\u9002\u6027\u3001\u5305\u542b\u6027\u3001\u7b49\u4ef7\u6027\u548c\u6b63\u5219\u6027\u7b49\u5224\u5b9a\u95ee\u9898\u90fd\u662f\u4e0d\u53ef\u534a\u5224\u5b9a\u7684\u3002", "conclusion": "\u5f15\u5165\u534a\u900f\u660e\u8f93\u5165\u5b57\u6bcd\u7684\u65b0\u578b\u8f93\u5165\u9a71\u52a8\u4e0b\u63a8\u81ea\u52a8\u673a\u6a21\u578b\u5728\u8ba1\u7b97\u80fd\u529b\u3001\u8bed\u8a00\u95ed\u5305\u6027\u548c\u5224\u5b9a\u6027\u95ee\u9898\u4e0a\u5747\u5c55\u73b0\u51fa\u4e0e\u4f20\u7edf\u6a21\u578b\u663e\u8457\u4e0d\u540c\u7684\u6027\u8d28\uff0c\u7cfb\u7edf\u5730\u63ed\u793a\u4e86\u8fd9\u4e9b\u5dee\u5f02\u53ca\u5176\u7406\u8bba\u5f71\u54cd\u3002"}}
{"id": "2507.14198", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.14198", "abs": "https://arxiv.org/abs/2507.14198", "authors": ["Fufang Wen", "Shichang Zhang"], "title": "Retention analysis of edited knowledge after fine-tuning", "comment": null, "summary": "Large language models (LLMs) store vast amounts of knowledge, which often\nrequires updates to correct factual errors, incorporate newly acquired\ninformation, or adapt model behavior. Model editing methods have emerged as\nefficient solutions for such updates, offering localized and precise knowledge\nmodification at significantly lower computational cost than continual training.\nIn parallel, LLMs are frequently fine-tuned for a wide range of downstream\ntasks. However, the effect of fine-tuning on previously edited knowledge\nremains poorly understood. In this work, we systematically investigate how\ndifferent fine-tuning objectives interact with various model editing\ntechniques. Our findings show that edited knowledge is substantially more\nsusceptible to forgetting during fine-tuning than intrinsic knowledge acquired\nthrough pre-training. This analysis highlights a key limitation of current\nediting approaches and suggests that evaluating edit robustness under\ndownstream fine-tuning is critical for their practical deployment. We further\nfind that freezing layers associated with edited content can significantly\nimprove knowledge retention, offering insight into how future editing methods\nmight be made more robust.", "AI": {"tldr": "\u8bba\u6587\u7cfb\u7edf\u5206\u6790\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u6a21\u578b\u7f16\u8f91\u548c\u540e\u7eed\u5fae\u8c03\u4e4b\u95f4\u7684\u76f8\u4e92\u5f71\u54cd\uff0c\u6307\u51fa\u7f16\u8f91\u77e5\u8bc6\u66f4\u6613\u9057\u5fd8\uff0c\u5e76\u5efa\u8bae\u540e\u7eed\u5de5\u4f5c\u5173\u6ce8\u7f16\u8f91\u9c81\u68d2\u6027\u548c\u91c7\u7528\u65b9\u6cd5\uff08\u5982\u51bb\u7ed3\u5c42\uff09\u589e\u5f3a\u77e5\u8bc6\u4fdd\u7559\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u9700\u8981\u4e0d\u65ad\u66f4\u65b0\u77e5\u8bc6\uff0c\u4ee5\u7ea0\u6b63\u4e8b\u5b9e\u9519\u8bef\u3001\u7eb3\u5165\u65b0\u4fe1\u606f\u6216\u8c03\u6574\u6a21\u578b\u884c\u4e3a\u3002\u867d\u7136\u5df2\u6709\u9ad8\u6548\u7684\u6a21\u578b\u7f16\u8f91\u65b9\u6cd5\u80fd\u5b9e\u73b0\u77e5\u8bc6\u7684\u5feb\u901f\u672c\u5730\u5316\u4fee\u6539\uff0c\u4f46\u540e\u7eed\u5fae\u8c03\u5bf9\u8fd9\u4e9b\u5df2\u7f16\u8f91\u77e5\u8bc6\u7684\u5f71\u54cd\u6b64\u524d\u5c1a\u4e0d\u6e05\u695a\u3002", "method": "\u7cfb\u7edf\u6027\u5730\u7814\u7a76\u4e86\u4e0d\u540c\u5fae\u8c03\u76ee\u6807\uff08\u4efb\u52a1\uff09\u4e0e\u591a\u79cd\u6a21\u578b\u7f16\u8f91\u6280\u672f\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u68c0\u6d4b\u4e86\u77e5\u8bc6\u9057\u5fd8\u4e0e\u4fdd\u7559\u60c5\u51b5\uff0c\u5206\u6790\u5e76\u5bf9\u6bd4\u4e86\u5fae\u8c03\u5bf9\u6a21\u578b\u672c\u8eab\u77e5\u8bc6\u548c\u540e\u671f\u7f16\u8f91\u77e5\u8bc6\u7684\u5f71\u54cd\u3002\u5b9e\u9a8c\u8fd8\u5c1d\u8bd5\u51bb\u7ed3\u5305\u542b\u88ab\u7f16\u8f91\u5185\u5bb9\u7684\u6a21\u578b\u5c42\uff0c\u4ee5\u6d4b\u8bd5\u5176\u5bf9\u77e5\u8bc6\u4fdd\u7559\u6548\u679c\u3002", "result": "\u53d1\u73b0\u7f16\u8f91\u8fc7\u7684\u77e5\u8bc6\u5728\u5fae\u8c03\u8fc7\u7a0b\u4e2d\u6bd4\u539f\u59cb\u6a21\u578b\u9884\u8bad\u7ec3\u9636\u6bb5\u83b7\u5f97\u7684\u77e5\u8bc6\u66f4\u5bb9\u6613\u88ab\u9057\u5fd8\u3002\u51bb\u7ed3\u5305\u542b\u88ab\u7f16\u8f91\u5185\u5bb9\u7684\u5c42\u53ef\u4ee5\u663e\u8457\u63d0\u5347\u7f16\u8f91\u77e5\u8bc6\u7684\u4fdd\u7559\u7387\u3002", "conclusion": "\u76ee\u524d\u7684\u6a21\u578b\u7f16\u8f91\u65b9\u6cd5\u5bf9\u4e8e\u540e\u7eed\u4e0b\u6e38\u5fae\u8c03\u8f83\u4e3a\u8106\u5f31\uff0c\u5fae\u8c03\u540e\u6781\u6613\u9057\u5fd8\u5df2\u7f16\u8f91\u77e5\u8bc6\u3002\u7814\u7a76\u63d0\u793a\u672a\u6765\u5e94\u5173\u6ce8\u6a21\u578b\u7f16\u8f91\u5728\u5fae\u8c03\u4e0b\u7684\u9c81\u68d2\u6027\uff0c\u5e76\u53ef\u901a\u8fc7\u6280\u672f\u5982\u51bb\u7ed3\u76f8\u5173\u5c42\u4ee5\u6539\u5584\u77e5\u8bc6\u4fdd\u7559\u3002"}}
{"id": "2507.15530", "categories": ["cs.PL", "cs.LO", "F.3.1; F.3.2"], "pdf": "https://arxiv.org/pdf/2507.15530", "abs": "https://arxiv.org/abs/2507.15530", "authors": ["Shing Hin Ho", "Nicolas Wu", "Azalea Raad"], "title": "Bayesian Separation Logic", "comment": null, "summary": "Bayesian probabilistic programming languages (BPPLs) let users denote\nstatistical models as code while the interpreter infers the posterior\ndistribution. The semantics of BPPLs are usually mathematically complex and\nunable to reason about desirable properties such as expected values and\nindependence of random variables. To reason about these properties in a\nnon-Bayesian setting, probabilistic separation logics such as PSL and Lilac\ninterpret separating conjunction as probabilistic independence of random\nvariables. However, no existing separation logic can handle Bayesian updating,\nwhich is the key distinguishing feature of BPPLs.\n  To close this gap, we introduce Bayesian separation logic (BaSL), a\nprobabilistic separation logic that gives semantics to BPPL. We prove an\ninternal version of Bayes' theorem using a result in measure theory known as\nthe Rokhlin-Simmons disintegration theorem. Consequently, BaSL can model\nprobabilistic programming concepts such as Bayesian updating, unnormalised\ndistribution, conditional distribution, soft constraint, conjugate prior and\nimproper prior while maintaining modularity via the frame rule. The model of\nBaSL is based on a novel instantiation of Kripke resource monoid via\n$\\sigma$-finite measure spaces over the Hilbert cube, and the semantics of\nHoare triple is compatible with an existing denotational semantics of BPPL\nbased on the category of $s$-finite kernels. Using BaSL, we then prove\nproperties of statistical models such as the expected value of Bayesian coin\nflip, correlation of random variables in the collider Bayesian network, and the\nposterior distributions of the burglar alarm model, a parameter estimation\nalgorithm, and the Gaussian mixture model.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u8d1d\u53f6\u65af\u5206\u79bb\u903b\u8f91\uff08BaSL\uff09\uff0c\u4f7f\u6982\u7387\u5206\u79bb\u903b\u8f91\u80fd\u591f\u5904\u7406\u8d1d\u53f6\u65af\u66f4\u65b0\uff0c\u4e3a\u8d1d\u53f6\u65af\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\uff08BPPLs\uff09\u63d0\u4f9b\u4e86\u65b0\u7684\u4e25\u683c\u8bed\u4e49\u5de5\u5177\uff0c\u5e76\u80fd\u8bc1\u660e\u590d\u6742\u7edf\u8ba1\u6a21\u578b\u7684\u6027\u8d28\u3002", "motivation": "\u8d1d\u53f6\u65af\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\uff08BPPLs\uff09\u4f7f\u7528\u6237\u80fd\u4ee5\u4ee3\u7801\u5f62\u5f0f\u8868\u793a\u7edf\u8ba1\u6a21\u578b\uff0c\u4f46\u5176\u8bed\u4e49\u590d\u6742\uff0c\u96be\u4ee5\u5bf9\u671f\u671b\u503c\u3001\u968f\u673a\u53d8\u91cf\u72ec\u7acb\u6027\u7b49\u6027\u8d28\u8fdb\u884c\u63a8\u7406\u3002\u73b0\u6709\u6982\u7387\u5206\u79bb\u903b\u8f91\u867d\u53ef\u5904\u7406\u90e8\u5206\u6982\u7387\u63a8\u7406\uff0c\u4f46\u65e0\u6cd5\u652f\u6301\u8d1d\u53f6\u65af\u66f4\u65b0\uff0c\u8fd9\u662fBPPLs\u7684\u6838\u5fc3\u7279\u6027\u3002\u89e3\u51b3\u8fd9\u4e00\u7a7a\u767d\u662f\u672c\u6587\u52a8\u673a\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8d1d\u53f6\u65af\u5206\u79bb\u903b\u8f91\uff08BaSL\uff09\uff0c\u5229\u7528Rokhlin-Simmons\u5206\u89e3\u5b9a\u7406\uff0c\u5b9e\u73b0\u5728\u903b\u8f91\u5185\u90e8\u5f62\u5f0f\u5316\u8868\u8ff0\u8d1d\u53f6\u65af\u5b9a\u7406\u3002BaSL\u5efa\u7acb\u4e8eKripke\u8d44\u6e90monoid\u5728Hilbert\u7acb\u65b9\u4f53\u03c3-\u6709\u9650\u6d4b\u5ea6\u7a7a\u95f4\u4e0a\u7684\u65b0\u5b9e\u4f8b\uff0c\u5e76\u4e0eBPPL\u7684\u57fa\u4e8es-\u6709\u9650\u6838\u7684\u8bed\u4e49\u517c\u5bb9\u3002", "result": "BaSL\u80fd\u5168\u9762\u5efa\u6a21\u6982\u7387\u7f16\u7a0b\u4e2d\u7684\u8d1d\u53f6\u65af\u66f4\u65b0\u3001\u975e\u89c4\u8303\u5316\u5206\u5e03\u3001\u6761\u4ef6\u5206\u5e03\u3001\u8f6f\u7ea6\u675f\u3001\u5171\u8f6d\u5148\u9a8c\u53ca\u4e0d\u5f53\u5148\u9a8c\uff0c\u5e76\u4fdd\u6301\u6a21\u5757\u6027\uff08frame rule\u9002\u7528\uff09\u3002\u5b9e\u9a8c\u7528BaSL\u8bc1\u660e\u4e86\u591a\u4e2a\u7edf\u8ba1\u6a21\u578b\u4e2d\u7684\u91cd\u8981\u6027\u8d28\uff0c\u5305\u62ec\u8d1d\u53f6\u65af\u629b\u786c\u5e01\u7684\u671f\u671b\u3001\u56e0\u679c\u7f51\u7edc\u4e2d\u968f\u673a\u53d8\u91cf\u7684\u76f8\u5173\u6027\u3001\u76d7\u8b66\u6a21\u578b\u7684\u540e\u9a8c\u5206\u5e03\u3001\u53c2\u6570\u4f30\u8ba1\u7b97\u6cd5\u4e0e\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u7684\u63a8\u7406\u3002", "conclusion": "BaSL\u586b\u8865\u4e86\u6982\u7387\u5206\u79bb\u903b\u8f91\u4e0d\u80fd\u5904\u7406\u8d1d\u53f6\u65af\u66f4\u65b0\u7684\u7a7a\u767d\uff0c\u4e3aBPPLs\u63d0\u4f9b\u4e86\u4e25\u5bc6\u7684\u8bed\u4e49\u57fa\u7840\uff0c\u5e76\u53ef\u4fbf\u5229\u5730\u8bc1\u660e\u548c\u63a8\u7406\u5404\u79cd\u5173\u952e\u7edf\u8ba1\u6027\u8d28\u3002"}}
{"id": "2507.14396", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14396", "abs": "https://arxiv.org/abs/2507.14396", "authors": ["Carey Lai Zheng Hui", "Johnson Britto Jessia Esther Leena", "Kumuthini Subramanian", "Zhao Chenyu", "Shubham Rajeshkumar Jariwala"], "title": "Developing Shared Vocabulary System For Collaborative Software Engineering", "comment": "16 pages, including appendix", "summary": "Effective communication is a critical factor in successful software\nengineering collaboration. However, communication gaps remain a persistent\nchallenge, often leading to misunderstandings, inefficiencies, and defects.\nThis research investigates the technical factors contributing to such\nmisunderstandings and explores the measurable benefits of establishing shared\nvocabulary systems within software documentation and codebases. Using a Design\nScience Research (DSR) framework, the study was structured into three iterative\nphases: problem identification, method development, and empirical validation.\nThe problem identification phase involved thematic analysis of communication\ndata and semi-structured interviews, revealing key factors such as ambiguous\nmessaging, misalignment in documentation, inconsistent code review feedback,\nand API integration miscommunication. Grounded Theory principles were employed\nto design a structured methodology for collaborative vocabulary development.\nEmpirical validation through controlled experiments demonstrated that while\ninitial adoption introduced overhead, the shared vocabulary system\nsignificantly improved information density, documentation clarity, and\ncollaboration efficiency over time. Findings offer actionable insights for\nimproving communication practices in software engineering, while also\nidentifying limitations and directions for future research.", "AI": {"tldr": "\u5f15\u5165\u5171\u4eab\u8bcd\u6c47\u7cfb\u7edf\u867d\u6709\u5b66\u4e60\u95e8\u69db\uff0c\u4f46\u80fd\u957f\u671f\u63d0\u9ad8\u8f6f\u4ef6\u56e2\u961f\u6c9f\u901a\u6548\u7387\u4e0e\u6587\u6863\u8d28\u91cf\uff0c\u5efa\u8bae\u4e1a\u754c\u91c7\u7eb3\u3002", "motivation": "\u5728\u8f6f\u4ef6\u5de5\u7a0b\u5408\u4f5c\u4e2d\uff0c\u6c9f\u901a\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u6c9f\u901a\u969c\u788d\u5e38\u5e38\u5bfc\u81f4\u8bef\u89e3\u3001\u6548\u7387\u4f4e\u4e0b\u548c\u7f3a\u9677\u3002\u8bba\u6587\u52a8\u673a\u5728\u4e8e\u63a2\u7d22\u4e3a\u4f55\u8fd9\u4e9b\u6c9f\u901a\u95ee\u9898\u6301\u7eed\u5b58\u5728\uff0c\u5e76\u5bfb\u627e\u901a\u8fc7\u5171\u4eab\u8bcd\u6c47\u7cfb\u7edf\u6539\u5584\u6c9f\u901a\u7684\u53ef\u80fd\u6027\u3002", "method": "\u91c7\u7528\u8bbe\u8ba1\u79d1\u5b66\u7814\u7a76\uff08DSR\uff09\u6846\u67b6\uff0c\u5206\u4e09\u6b65\uff1a1\uff09\u901a\u8fc7\u4e3b\u9898\u5206\u6790\u548c\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u8bc6\u522b\u6c9f\u901a\u95ee\u9898\u6765\u6e90\uff1b2\uff09\u5e94\u7528\u624e\u6839\u7406\u8bba\u8bbe\u8ba1\u534f\u4f5c\u8bcd\u6c47\u5f00\u53d1\u65b9\u6cd5\uff1b3\uff09\u901a\u8fc7\u53d7\u63a7\u5b9e\u9a8c\u5bf9\u65b9\u6cd5\u8fdb\u884c\u5b9e\u8bc1\u9a8c\u8bc1\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u63a8\u8fdb\u5171\u4eab\u8bcd\u6c47\u7cfb\u7edf\u521d\u671f\u4f1a\u589e\u52a0\u8d1f\u62c5\uff0c\u4f46\u957f\u671f\u80fd\u660e\u663e\u63d0\u9ad8\u4fe1\u606f\u5bc6\u5ea6\u3001\u6587\u6863\u6e05\u6670\u5ea6\u548c\u534f\u4f5c\u6548\u7387\u3002", "conclusion": "\u8bba\u6587\u8bc1\u660e\u4e86\u5236\u5b9a\u5171\u4eab\u8bcd\u6c47\u7cfb\u7edf\u80fd\u6709\u6548\u6539\u5584\u8f6f\u4ef6\u5de5\u7a0b\u56e2\u961f\u7684\u6c9f\u901a\u6548\u7387\u4e0e\u8d28\u91cf\uff0c\u867d\u6709\u521d\u671f\u6210\u672c\uff0c\u4f46\u5e26\u6765\u53ef\u89c2\u7684\u957f\u671f\u6548\u76ca\uff1b\u540c\u65f6\u6307\u51fa\u4e86\u8be5\u7cfb\u7edf\u7684\u5c40\u9650\u5e76\u7ed9\u672a\u6765\u7814\u7a76\u63d0\u51fa\u5efa\u8bae\u3002"}}
{"id": "2507.14949", "categories": ["cs.LO", "03B45, 68Q17", "F.4.1; F.4.3"], "pdf": "https://arxiv.org/pdf/2507.14949", "abs": "https://arxiv.org/abs/2507.14949", "authors": ["Philippe Balbiani", "Olivier Gasquet"], "title": "PSPACE-completeness of bimodal transitive weak-density logic", "comment": "arXiv admin note: substantial text overlap with arXiv:2507.11238", "summary": "Windows have been introduce in \\cite{BalGasq25} as a tool for designing\npolynomial algorithms to check satisfiability of a bimodal logic of\nweak-density. In this paper, after revisiting the ``folklore'' case of bimodal\n$\\K4$ already treated in \\cite{Halpern} but which is worth a fresh review, we\nshow that windows allow to polynomially solve the satisfiability problem when\nadding transitivity to weak-density, by mixing algorithms for bimodal K\ntogether with windows-approach. The conclusion is that both satisfiability and\nvalidity are PSPACE-complete for these logics.", "AI": {"tldr": "\u672c\u6587\u5c06\u7a97\u53e3\u6cd5\u5f15\u5165\u5f31\u7a20\u5bc6\u53cc\u6a21\u6001\u903b\u8f91\u53ca\u5176\u52a0\u4f20\u9012\u6027\u7684\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u591a\u9879\u5f0f\u7b97\u6cd5\u5e76\u786e\u5b9a\u8be5\u95ee\u9898\u4e3aPSPACE\u5b8c\u5168\u3002", "motivation": "\u4ee5\u5f80\u5bf9\u4e8e\u5f31\u7a20\u5bc6\u53cc\u6a21\u6001\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u5224\u5b9a\u5b58\u5728\u590d\u6742\u5ea6\u8f83\u9ad8\u6216\u65b9\u6cd5\u4e0d\u6e05\u6670\u7684\u95ee\u9898\uff0c\u672c\u6587\u65e8\u5728\u901a\u8fc7\u5f15\u5165 window \u6280\u672f\u6539\u8fdb\u73b0\u6709\u7b97\u6cd5\uff0c\u63d0\u5347\u7b97\u6cd5\u6548\u7387\uff0c\u5e76\u7cfb\u7edf\u5206\u6790\u52a0\u4e0a\u4f20\u9012\u6027\u540e\u7684\u60c5\u51b5\u3002", "method": "\u9996\u5148\u56de\u987e\u4e86\u53cc\u6a21\u6001 K4 \u60c5\u5f62\uff0c\u7136\u540e\u5c06\u7a97\u53e3\u6cd5\uff08windows-approach\uff09\u4e0e\u73b0\u6709\u53cc\u6a21\u6001 K \u7b97\u6cd5\u7ed3\u5408\uff0c\u7528\u4e8e\u5904\u7406\u52a0\u5165\u4f20\u9012\u6027\u81f3\u5f31\u7a20\u5bc6\u6027\u7684\u53ef\u6ee1\u8db3\u6027\u5224\u5b9a\u3002", "result": "\u57fa\u4e8e\u6539\u8fdb\u540e\u7684\u7b97\u6cd5\uff0c\u4e0d\u4ec5\u6210\u529f\u63d0\u5347\u4e86\u7b97\u6cd5\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u6027\u80fd\uff0c\u8fd8\u8bc1\u660e\u4e86\u5728\u52a0\u5165\u4f20\u9012\u6027\u540e\uff0c\u8fd9\u7c7b\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u548c\u6709\u6548\u6027\u5224\u5b9a\u5747\u4e3aPSPACE\u5b8c\u5168\uff08PSPACE-complete\uff09\u3002", "conclusion": "\u7a97\u53e3\u6cd5\u4e3a\u5f31\u7a20\u5bc6\u53ca\u5176\u6269\u5c55\uff08\u5982\u52a0\u4f20\u9012\u6027\uff09\u53cc\u6a21\u6001\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u5224\u5b9a\u63d0\u4f9b\u4e86\u591a\u9879\u5f0f\u7ea7\u522b\u6709\u6548\u7b97\u6cd5\uff0c\u5e76\u6f84\u6e05\u4e86\u590d\u6742\u5ea6\u5f52\u5c5e\uff0c\u4e3a\u540e\u7eed\u76f8\u5173\u903b\u8f91\u7b97\u6cd5\u8bbe\u8ba1\u548c\u7406\u8bba\u5206\u6790\u6253\u4e0b\u57fa\u7840\u3002"}}
{"id": "2507.15312", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2507.15312", "abs": "https://arxiv.org/abs/2507.15312", "authors": ["Marvin K\u00f6dding", "Bianca Truthe"], "title": "Idefix-Closed Languages and Their Application in Contextual Grammars", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "In this paper, we continue the research on the power of contextual grammars\nwith selection languages from subfamilies of the family of regular languages.\nWe investigate infix-, prefix-, and suffix-closed languages (referred to as\nidefix-closed languages) and compare such language families to some other\nsubregular families of languages (finite, monoidal, nilpotent, combinational,\n(symmetric) definite, ordered, non-counting, power-separating, commutative,\ncircular, union-free, star, and comet languages). Further, we compare the\nfamilies of the hierarchies obtained for external and internal contextual\ngrammars with the language families defined by these new types for the\nselection. In this way, we extend the existing hierarchies by new language\nfamilies. Moreover, we solve an open problem regarding internal contextual\ngrammars with suffix-closed selection languages.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u6bd4\u8f83\u4e86idefix-closed\uff08\u524d/\u4e2d/\u540e\u7f00\u5c01\u95ed\uff09\u9009\u62e9\u8bed\u8a00\u5728\u60c5\u5883\u8bed\u6cd5\u8868\u8fbe\u80fd\u529b\u4e0a\u7684\u4f4d\u7f6e\uff0c\u6269\u5c55\u4e86\u76f8\u5173\u5c42\u7ea7\uff0c\u5e76\u89e3\u51b3\u4e86\u5185\u90e8\u60c5\u5883\u8bed\u6cd5\u4e0e\u540e\u7f00\u5c01\u95ed\u9009\u62e9\u8bed\u8a00\u7ed3\u5408\u7684\u5f00\u653e\u95ee\u9898\u3002", "motivation": "\u524d\u4eba\u5728\u7814\u7a76\u5e26\u6709\u6765\u81ea\u6b63\u89c4\u8bed\u8a00\u5b50\u65cf\u7684\u9009\u62e9\u8bed\u8a00\u7684\u60c5\u5883\u8bed\u6cd5\u8868\u8fbe\u80fd\u529b\uff0c\u5c1a\u6709\u5173\u4e8e\u7279\u5b9a\u5c01\u95ed\u7c7b\u578b\u9009\u62e9\u8bed\u8a00\uff08\u5982\u524d\u7f00\u3001\u540e\u7f00\u3001\u4e2d\u7f00\u5c01\u95ed\uff09\u7684\u5206\u7c7b\u4e0e\u5bf9\u6bd4\u4e0d\u8db3\uff0c\u540c\u65f6\u5c1a\u6709\u76f8\u5173\u5f00\u653e\u95ee\u9898\u672a\u89e3\u51b3\u3002", "method": "\u7cfb\u7edf\u5730\u8003\u5bdf\u5e76\u6bd4\u8f83\u4e86\u4ee5\u524d\u7f00\u3001\u540e\u7f00\u3001\u4e2d\u7f00\u5c01\u95ed\uff08\u79f0\u4e3aidefix-closed\uff09\u4e3a\u4ee3\u8868\u7684\u9009\u62e9\u8bed\u8a00\u5b50\u65cf\uff0c\u5e76\u5c06\u8fd9\u4e9b\u65b0\u7c7b\u578b\u4e0e\u5176\u5b83\u5b50\u6b63\u89c4\u8bed\u8a00\u5bb6\u65cf\uff08\u5982\u6709\u9650\u3001\u5e42\u7b49\u3001\u53ef\u4ea4\u6362\u7b49\uff09\u8fdb\u884c\u5bf9\u6bd4\uff1b\u8fd8\u5206\u6790\u4e86\u5916\u90e8\u4e0e\u5185\u90e8\u60c5\u5883\u8bed\u6cd5\u6240\u751f\u6210\u7684\u5c42\u7ea7\u4e0e\u8fd9\u4e9b\u9009\u62e9\u8bed\u8a00\u65cf\u7684\u5173\u7cfb\u3002", "result": "\u6bd4\u8f83\u51faidefix-closed\u9009\u62e9\u8bed\u8a00\u76f8\u5bf9\u4e8e\u5176\u5b83\u5b50\u6b63\u89c4\u5bb6\u65cf\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5e76\u5c06\u539f\u6709\u7684\u5c42\u7ea7\u4f53\u7cfb\u62d3\u5c55\u5230\u5305\u542b\u8fd9\u4e9b\u65b0\u7c7b\u578b\u7684\u5bb6\u5ead\u3002\u7279\u522b\u5730\uff0c\u89e3\u51b3\u4e86\u6709\u5173\u5e26\u6709\u540e\u7f00\u5c01\u95ed\u9009\u62e9\u8bed\u8a00\u7684\u5185\u90e8\u60c5\u5883\u8bed\u6cd5\u7684\u4e00\u4e2a\u5f00\u653e\u95ee\u9898\u3002", "conclusion": "\u8bba\u6587\u603b\u7ed3\u4e86idefix-closed\u7c7b\u578b\u5728\u5e26\u6709\u9009\u62e9\u8bed\u8a00\u7684\u60c5\u5883\u8bed\u6cd5\u5bb6\u65cf\u4e2d\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5c06\u539f\u6709\u5c42\u7ea7\u7ed3\u6784\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u5e76\u586b\u8865\u4e86\u540e\u7f00\u5c01\u95ed\u7c7b\u578b\u4e0b\u5185\u90e8\u60c5\u5883\u8bed\u6cd5\u7684\u672a\u77e5\u7a7a\u767d\u3002"}}
{"id": "2507.14200", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.14200", "abs": "https://arxiv.org/abs/2507.14200", "authors": ["Shengji Tang", "Jianjian Cao", "Weihao Lin", "Jiale Hong", "Bo Zhang", "Shuyue Hu", "Lei Bai", "Tao Chen", "Wanli Ouyang", "Peng Ye"], "title": "Open-Source LLMs Collaboration Beats Closed-Source LLMs: A Scalable Multi-Agent System", "comment": null, "summary": "This paper aims to demonstrate the potential and strengths of open-source\ncollectives. It leads to a promising question: Can we harness multiple\nopen-source LLMs to match or even beat the closed-source LLMs? To answer this,\nwe propose SMACS, a scalable multi-agent collaboration system (MACS) framework\nwith high performance. Specifically, for continuous integration of new LLMs and\ngeneralization to diverse questions, we first propose a Retrieval-based Prior\nSelection (RPS), which assigns a proxy performance score to each LLM to select\nthe Top-k LLMs at the instance level for any given question. Then, we propose\nan Exploration-Exploitation-Driven Posterior Enhancement (EPE), encouraging the\ngeneration of diverse responses through prior dropping and selecting the\nhigh-quality response via a hybrid posterior score. Experiments on eight\nmainstream benchmarks validate the effectiveness of our SMACS: by integrating\nfifteen open-source LLMs, SMACS outperforms leading closed-source LLMs in 2025,\ne.g., Claude-3.7-Sonnet (+12.73%), GPT-4.1(+5.36%) and GPT-o3-mini(+5.28%)\nacross multiple tasks. Remarkably, it even exceeds the average of best results\nof different datasets from both open-source LLMs (+2.86%) and closed-source\nLLMs (+2.04%), pushing the upper bound of intelligence. Code will be released\nat https://github.com/magent4aci/SMACS.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86SMACS\u6846\u67b6\uff0c\u901a\u8fc7\u667a\u80fd\u7ec4\u5408\u591a\u4e2a\u5f00\u6e90\u5927\u6a21\u578b\uff0c\u5b9e\u73b0\u4e86\u5728\u4e3b\u6d41\u57fa\u51c6\u4e0a\u5168\u9762\u8d85\u8d8aGPT-4\u7b49\u9886\u5148\u95ed\u6e90\u5927\u6a21\u578b\uff0c\u9a8c\u8bc1\u4e86\u5f00\u6e90\u6a21\u578b\u534f\u4f5c\u7684\u5f3a\u5927\u6f5c\u80fd\u3002", "motivation": "\u8fd1\u5e74\u6765\uff0c\u95ed\u6e90\u5927\u6a21\u578b\uff08\u5982GPT-4\u3001Claude\u7b49\uff09\u5728\u5404\u79cd\u4efb\u52a1\u4e2d\u8868\u73b0\u5353\u8d8a\uff0c\u4f46\u5f00\u6e90\u5927\u6a21\u578b\u793e\u533a\u8fc5\u901f\u53d1\u5c55\uff0c\u63a8\u52a8\u4e86\u95ee\u9898\uff1a\u6211\u4eec\u80fd\u5426\u901a\u8fc7\u96c6\u6210\u591a\u4e2a\u5f00\u6e90\u5927\u6a21\u578b\uff0c\u8fbe\u5230\u751a\u81f3\u8d85\u8fc7\u95ed\u6e90\u5927\u6a21\u578b\u7684\u6027\u80fd\uff1f", "method": "\u63d0\u51fa\u4e86SMACS\uff08\u9ad8\u6027\u80fd\u53ef\u6269\u5c55\u591a\u667a\u80fd\u4f53\u534f\u4f5c\u7cfb\u7edf\uff09\u6846\u67b6\u3002\u65b9\u6cd5\u521b\u65b0\u5305\u62ec\uff1a1\uff09\u68c0\u7d22\u5f0f\u5148\u9a8c\u9009\u62e9\uff08RPS\uff09\uff0c\u5bf9\u6bcf\u4e2a\u6a21\u578b\u5206\u914d\u4ee3\u7406\u6027\u80fd\u5206\u6570\uff0c\u5728\u5b9e\u4f8b\u5c42\u9762\u52a8\u6001\u9009\u62e9\u6700\u4f18Top-k\u5f00\u6e90\u5927\u6a21\u578b\uff1b2\uff09\u63a2\u7d22-\u5229\u7528\u9a71\u52a8\u7684\u540e\u9a8c\u589e\u5f3a\uff08EPE\uff09\uff0c\u901a\u8fc7\u5148\u9a8c\u4e22\u5f03\u4fc3\u8fdb\u8f93\u51fa\u591a\u6837\u6027\uff0c\u5e76\u4f7f\u7528\u6df7\u5408\u540e\u9a8c\u8bc4\u5206\u9009\u62e9\u9ad8\u8d28\u91cf\u7ed3\u679c\u3002\u8be5\u7cfb\u7edf\u652f\u6301\u65b0\u6a21\u578b\u7684\u6301\u7eed\u96c6\u6210\uff0c\u9002\u5e94\u591a\u6837\u4efb\u52a1\u3002", "result": "\u57288\u4e2a\u4e3b\u6d41\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u96c6\u621015\u4e2a\u5f00\u6e90\u5927\u6a21\u578b\u7684SMACS\u5728\u591a\u4e2a\u4efb\u52a1\u4e0a\u8d85\u8d8a\u9886\u5148\u95ed\u6e90\u5927\u6a21\u578b\u3002\u5982\u8f83Claude-3.7-Sonnet\u63d0\u534712.73%\u3001\u8f83GPT-4.1\u63d0\u53475.36%\u3001\u8f83GPT-o3-mini\u63d0\u53475.28%\u3002\u7ed3\u679c\u4e5f\u8d85\u8fc7\u5f00\u6e90\u4e0e\u95ed\u6e90\u6a21\u578b\u5728\u4e0d\u540c\u6570\u636e\u96c6\u4e0a\u7684\u6700\u4f73\u5e73\u5747\u7ed3\u679c\uff0c\u5206\u522b\u9ad8\u51fa2.86%\u4e0e2.04%\u3002", "conclusion": "SMACS\u6846\u67b6\u5c06\u5f00\u6e90\u5927\u6a21\u578b\u7684\u96c6\u6210\u63a8\u81f3\u65b0\u7684\u9ad8\u5ea6\uff0c\u9996\u6b21\u5728\u591a\u4e2a\u4efb\u52a1\u4e0a\u6574\u4f53\u8d85\u8d8a\u4e86\u73b0\u6709\u95ed\u6e90\u5927\u6a21\u578b\uff0c\u663e\u793a\u4e86\u5f00\u6e90\u793e\u7fa4\u901a\u8fc7\u534f\u4f5c\u65b9\u5f0f\u63a8\u52a8\u667a\u80fd\u8fb9\u754c\u7684\u6f5c\u529b\u548c\u529b\u91cf\u3002\u4ee3\u7801\u5df2\u5f00\u6e90\u3002"}}
{"id": "2507.15596", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2507.15596", "abs": "https://arxiv.org/abs/2507.15596", "authors": ["Jaeseo Lee", "Kyungmin Bae"], "title": "Formal Analysis of Networked PLC Controllers Interacting with Physical Environments", "comment": "To appear in Proceedings of the Static Analysis Symposium (SAS) 2025", "summary": "Programmable Logic Controllers (PLCs) are widely used in industrial\nautomation to control physical systems. As PLC applications become increasingly\ncomplex, ensuring their correctness is crucial. Existing formal verification\ntechniques focus on individual PLC programs in isolation, often neglecting\ninteractions with physical environments and network communication between\ncontrollers. This limitation poses significant challenges in analyzing\nreal-world industrial systems, where continuous dynamics and communication\ndelays play a critical role. In this paper, we present a unified formal\nframework that integrates discrete PLC semantics, networked communication, and\ncontinuous physical behaviors. To mitigate state explosion, we apply partial\norder reduction, significantly reducing the number of explored states while\nmaintaining correctness. Our framework enables precise analysis of PLC-driven\nsystems with continuous dynamics and networked communication.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u80fd\u540c\u65f6\u5206\u6790PLC\u7a0b\u5e8f\u3001\u7f51\u7edc\u901a\u4fe1\u4e0e\u7269\u7406\u8fde\u7eed\u884c\u4e3a\u7684\u5f62\u5f0f\u5316\u6846\u67b6\uff0c\u5e76\u901a\u8fc7\u90e8\u5206\u5e8f\u7ea6\u7b80\u65b9\u6cd5\u7f13\u89e3\u72b6\u6001\u7206\u70b8\uff0c\u5b9e\u73b0\u4e86\u5b9e\u65f6\u5de5\u4e1a\u7cfb\u7edf\u7684\u9ad8\u6548\u7cbe\u786e\u9a8c\u8bc1\u3002", "motivation": "\u53ef\u7f16\u7a0b\u903b\u8f91\u63a7\u5236\u5668\uff08PLC\uff09\u5728\u5de5\u4e1a\u81ea\u52a8\u5316\u4e2d\u63a7\u5236\u7269\u7406\u7cfb\u7edf\uff0c\u4f46\u968f\u7740\u5e94\u7528\u590d\u6742\u5316\uff0c\u4fdd\u969c\u5176\u6b63\u786e\u6027\u53d8\u5f97\u5341\u5206\u91cd\u8981\u3002\u73b0\u6709\u5f62\u5f0f\u5316\u9a8c\u8bc1\u65b9\u6cd5\u591a\u5b64\u7acb\u9a8c\u8bc1\u5355\u4e2aPLC\uff0c\u5ffd\u89c6\u4e86\u63a7\u5236\u5668\u95f4\u901a\u4fe1\u548c\u7269\u7406\u73af\u5883\u4ea4\u4e92\uff0c\u8fd9\u9650\u5236\u4e86\u771f\u5b9e\u5de5\u4e1a\u7cfb\u7edf\u5206\u6790\u80fd\u529b\u3002", "method": "\u63d0\u51fa\u4e00\u4e2a\u7edf\u4e00\u7684\u5f62\u5f0f\u5316\u6846\u67b6\uff0c\u6574\u5408\u79bb\u6563PLC\u8bed\u4e49\u3001\u7f51\u7edc\u901a\u4fe1\u548c\u8fde\u7eed\u7269\u7406\u884c\u4e3a\uff0c\u5e76\u91c7\u7528\u90e8\u5206\u5e8f\u5217\u7ea6\u7b80\u6280\u672f\uff0c\u51cf\u5c11\u72b6\u6001\u6570\u76ee\uff0c\u540c\u65f6\u4fdd\u8bc1\u9a8c\u8bc1\u7684\u6b63\u786e\u6027\u3002", "result": "\u6240\u63d0\u51fa\u7684\u6846\u67b6\u5b9e\u73b0\u4e86\u5bf9\u5177\u6709\u8fde\u7eed\u52a8\u529b\u5b66\u548c\u7f51\u7edc\u901a\u4fe1\u7684PLC\u7cfb\u7edf\u7684\u7cbe\u786e\u5206\u6790\uff0c\u6709\u6548\u7f13\u89e3\u4e86\u72b6\u6001\u7206\u70b8\u95ee\u9898\u3002", "conclusion": "\u8be5\u7edf\u4e00\u6846\u67b6\u63d0\u5347\u4e86\u5bf9\u5b9e\u9645\u5de5\u4e1a\u7cfb\u7edf\u4e2dPLC\u7a0b\u5e8f\u6b63\u786e\u6027\u7684\u5206\u6790\u80fd\u529b\uff0c\u65e2\u8003\u8651\u4e86\u591a\u63a7\u5236\u5668\u901a\u4fe1\uff0c\u4e5f\u7ed3\u5408\u4e86\u7269\u7406\u73af\u5883\u8fde\u7eed\u52a8\u6001\uff0c\u4e3a\u590d\u6742\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u6709\u6548\u5de5\u5177\u3002"}}
{"id": "2507.14423", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14423", "abs": "https://arxiv.org/abs/2507.14423", "authors": ["Mootez Saad", "Hao Li", "Tushar Sharma", "Ahmed E. Hassan"], "title": "On the Effect of Token Merging on Pre-trained Models for Code", "comment": null, "summary": "Tokenization is a fundamental component of language models for code. It\ninvolves breaking down the input into units that are later passed to the\nlanguage model stack to learn high-dimensional representations used in various\ncontexts, from classification to generation. However, the output of these\ntokenizers is often longer than that traditionally used in compilers and\ninterpreters. This could result in undesirable effects, such as increased\ncomputational overhead. In this work, we investigate the effect of merging the\nhidden representations of subtokens that belong to the same semantic unit, such\nas subtokens that form a single identifier. We propose two strategies: one\nbased on averaging the representations and another that leverages a\nlearning-based approach. Both methods can be seamlessly integrated with\nexisting language models for code. We conduct experiments using six language\nmodels for code: CodeBERT, GraphCodeBERT, UniXCoder, CdoeT5, CodeT5+ (220M),\nand CodeT5+ (770M), across three software engineering tasks: vulnerability\ndetection, code classification, and code translation. Results show that these\nstrategies can reduce the number of floating-point operations by $1\\%$ to\n$19\\%$. Regarding downstream performance, the most significant degradation was\nobserved in the vulnerability detection task, where the F1 score decreased by\n$1.82$ points compared to the baseline. In contrast, for code translation, we\nobserved an improvement of $2.47$ points in CodeBLEU. This work contributes to\nthe broader effort of improving language models for code across multiple\ndimensions, including both computational efficiency and downstream performance.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5408\u5e76\u4ee3\u7801\u5b50token\u9690\u85cf\u8868\u793a\u7684\u7b56\u7565\uff0c\u663e\u8457\u51cf\u5c11\u4e86\u6a21\u578b\u8ba1\u7b97\u91cf\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u5bf9\u6027\u80fd\u5f71\u54cd\u89c6\u5177\u4f53\u4efb\u52a1\u800c\u5b9a\uff1a\u90e8\u5206\u4efb\u52a1\u7565\u6709\u4e0b\u964d\uff0c\u90e8\u5206\u4efb\u52a1\u53cd\u800c\u63d0\u5347\u3002\u8be5\u65b9\u6cd5\u80fd\u66f4\u9ad8\u6548\u5730\u63d0\u5347\u4ee3\u7801\u8bed\u8a00\u6a21\u578b\u7684\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002", "motivation": "\u4ee3\u7801\u8bed\u8a00\u6a21\u578b\u7684\u5206\u8bcd\u7ed3\u679c\u5f80\u5f80\u6bd4\u4f20\u7edf\u7f16\u8bd1\u5668\u548c\u89e3\u91ca\u5668\u66f4\u957f\uff0c\u5e26\u6765\u8ba1\u7b97\u5f00\u9500\u589e\u52a0\u7b49\u4e0d\u5229\u5f71\u54cd\u3002\u5982\u4f55\u51cf\u5c11\u8fd9\u79cd\u5f00\u9500\uff0c\u540c\u65f6\u7ef4\u6301\u751a\u81f3\u63d0\u5347\u6a21\u578b\u6027\u80fd\uff0c\u662f\u4e00\u4e2a\u4e9f\u9700\u89e3\u51b3\u7684\u95ee\u9898\u3002", "method": "\u63d0\u51fa\u4e24\u79cd\u8bed\u4e49\u5355\u5143\u5185\u5b50token\u9690\u85cf\u8868\u793a\u7684\u5408\u5e76\u7b56\u7565\uff1a\u4e00\u79cd\u662f\u5e73\u5747\u65b9\u6cd5\uff0c\u53e6\u4e00\u79cd\u662f\u57fa\u4e8e\u5b66\u4e60\u7684\u65b9\u6cd5\u3002\u4e24\u79cd\u65b9\u6cd5\u5747\u53ef\u65e0\u7f1d\u96c6\u6210\u81f3\u73b0\u6709\u4ee3\u7801\u8bed\u8a00\u6a21\u578b\u4e2d\u3002\u4f5c\u8005\u5728\u591a\u4e2a\u6a21\u578b\uff08CodeBERT\u3001GraphCodeBERT\u3001UniXCoder\u3001CodeT5\u3001CodeT5+\uff09\u548c\u4e09\u5927\u4efb\u52a1\uff08\u6f0f\u6d1e\u68c0\u6d4b\u3001\u4ee3\u7801\u5206\u7c7b\u3001\u4ee3\u7801\u7ffb\u8bd1\uff09\u4e0a\u8fdb\u884c\u4e86\u5b9e\u8bc1\u7814\u7a76\u3002", "result": "\u63d0\u51fa\u7684\u5408\u5e76\u7b56\u7565\u53ef\u5c06\u6d6e\u70b9\u8fd0\u7b97\u6570\u91cf\u51cf\u5c111%-19%\u3002\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\uff0c\u6f0f\u6d1e\u68c0\u6d4b\u4efb\u52a1F1\u5206\u6570\u4e0b\u964d\u6700\u660e\u663e\uff0c\u964d\u4f4e1.82\u5206\uff1b\u800c\u5728\u4ee3\u7801\u7ffb\u8bd1\u4efb\u52a1\u4e0a\uff0cCodeBLEU\u63d0\u5347\u4e862.47\u5206\u3002", "conclusion": "\u5408\u5e76\u4ee3\u7801\u5206\u8bcd\u8bed\u4e49\u5355\u5143\u7684\u9690\u85cf\u8868\u793a\u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u5347\u8ba1\u7b97\u6548\u7387\uff0c\u5bf9\u4e8e\u4e0d\u540c\u4e0b\u6e38\u4efb\u52a1\u5bf9\u6027\u80fd\u5f71\u54cd\u4e0d\u540c\u3002\u8be5\u65b9\u6cd5\u6709\u52a9\u4e8e\u63d0\u5347\u4ee3\u7801\u8bed\u8a00\u6a21\u578b\u7684\u591a\u7ef4\u8868\u73b0\uff0c\u5c24\u5176\u5728\u90e8\u5206\u4efb\u52a1\u8fd8\u80fd\u5b9e\u73b0\u6027\u80fd\u63d0\u5347\u3002"}}
{"id": "2507.14956", "categories": ["cs.LO", "03B45, 68Q17", "F.4.1; F.4.3"], "pdf": "https://arxiv.org/pdf/2507.14956", "abs": "https://arxiv.org/abs/2507.14956", "authors": ["Olivier Gasquet"], "title": "PSPACE-completeness of Grammar logics of bounded density", "comment": null, "summary": "We introduce the family of multi-modal logics of bounded density and with a\ntableau-like approach using finite \\emph{windows} which were introduced in\n\\cite{BalGasq25}, we prove that their satisfiability problem is\nPSPACE-complete. As a side effect, the monomodal logic of density is shown to\nbe in para-PSPACE.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u591a\u6a21\u6001\u6709\u754c\u7a20\u5bc6\u6027\u903b\u8f91\uff0c\u5e76\u8bc1\u660e\u4e86\u5176\u53ef\u6ee1\u8db3\u6027\u5224\u5b9a\u4e3aPSPACE-complete\u3002", "motivation": "\u7814\u7a76\u591a\u6a21\u6001\u7a20\u5bc6\u6027\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\uff0c\u5176\u7406\u8bba\u53ca\u590d\u6742\u6027\u5c1a\u672a\u88ab\u5b8c\u5168\u523b\u753b\u3002", "method": "\u91c7\u7528\u57fa\u4e8e\u6709\u9650\u7a97\u53e3\u7684tableau\u65b9\u6cd5\uff0c\u5bf9\u591a\u6a21\u6001\u6709\u754c\u7a20\u5bc6\u6027\u903b\u8f91\u8fdb\u884c\u53ef\u6ee1\u8db3\u6027\u5224\u5b9a\u3002", "result": "\u8bc1\u660e\u4e86\u591a\u6a21\u6001\u6709\u754c\u7a20\u5bc6\u6027\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u4e3aPSPACE-complete\u3002\u5e76\u987a\u5e26\u8bc1\u660e\u4e86\u5355\u6a21\u6001\u7a20\u5bc6\u6027\u903b\u8f91\u53ef\u6ee1\u8db3\u6027\u5904\u4e8epara-PSPACE\u3002", "conclusion": "\u591a\u6a21\u6001\u6709\u754c\u7a20\u5bc6\u6027\u903b\u8f91\u7684\u53ef\u6ee1\u8db3\u6027\u95ee\u9898\u590d\u6742\u5ea6\u4e3aPSPACE-complete\u3002\u5355\u6a21\u6001\u7a20\u5bc6\u6027\u903b\u8f91\u5c5e\u4e8epara-PSPACE\u3002"}}
{"id": "2507.15313", "categories": ["cs.FL", "G.2.1:F.2.2"], "pdf": "https://arxiv.org/pdf/2507.15313", "abs": "https://arxiv.org/abs/2507.15313", "authors": ["Abhishek Krishnamoorthy", "Robinson Thamburaj", "Durairaj Gnanaraj Thomas"], "title": "On a Generalization of the Christoffel Tree: Epichristoffel Trees", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "Sturmian words form a family of one-sided infinite words over a binary\nalphabet that are obtained as a discretization of a line with an irrational\nslope starting from the origin. A finite version of this class of words called\nChristoffel words has been extensively studied for their interesting\nproperties. It is a class of words that has a geometric and an algebraic\ndefinition, making it an intriguing topic of study for many mathematicians.\nRecently, a generalization of Christoffel words for an alphabet with 3 letters\nor more, called epichristoffel words, using episturmian morphisms has been\nstudied, and many of the properties of Christoffel words have been shown to\ncarry over to epichristoffel words; however, many properties are not shared by\nthem as well. In this paper, we introduce the notion of an epichristoffel tree,\nwhich proves to be a useful tool in determining a subclass of epichristoffel\nwords that share an important property of Christoffel words, which is the\nability to factorize an epichristoffel word as a product of smaller\nepichristoffel words. We also use the epichristoffel tree to present some\ninteresting results that help to better understand epichristoffel words.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faepichristoffel\u6811\uff0c\u501f\u6b64\u5bfb\u627e\u548c\u5206\u6790epichristoffel\u8bcd\u4e2d\u4fdd\u7559Christoffel\u8bcd\u67d0\u4e9b\u5206\u89e3\u6027\u8d28\u7684\u5b50\u7c7b\uff0c\u5e76\u83b7\u5f97\u65b0\u7406\u89e3\u548c\u7ed3\u679c\u3002", "motivation": "Christoffel\u8bcd\u6709\u4f18\u7f8e\u7684\u51e0\u4f55\u4e0e\u4ee3\u6570\u5b9a\u4e49\uff0c\u5728\u4e8c\u5143\u5b57\u6bcd\u8868\u4e0b\u6027\u8d28\u6781\u4f73\uff0c\u800c\u5176\u5bf9\u66f4\u9ad8\u5b57\u6bcd\u8868\u7684\u63a8\u5e7f\uff08epichristoffel\u8bcd\uff09\u76f8\u5173\u6027\u8d28\u5e76\u4e0d\u5168\u7136\u7ee7\u627f\u3002\u4e9f\u9700\u5de5\u5177\u548c\u65b9\u6cd5\u6df1\u5165\u63ed\u793aepichristoffel\u8bcd\u4e2d\u7684\u65b0\u7279\u6027\u4e0e\u76f8\u4f3c\u6027\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u5e76\u6784\u5efa\u4e86\u4e00\u79cd\u65b0\u7684\u7ed3\u6784\u2014\u2014epichristoffel tree\uff0c\u7528\u4e8e\u5206\u6790\u548c\u5206\u7c7bepichristoffel\u8bcd\u3002\u901a\u8fc7\u8be5\u6811\u7ed3\u6784\uff0c\u7814\u7a76\u5176\u5206\u89e3\u6027\u8d28\u53ca\u5728\u5b57\u6bcd\u8868\u6269\u5c55\u60c5\u51b5\u4e0b\u7684\u8868\u73b0\u3002", "result": "\u5f15\u5165\u201cepichristoffel tree\u201d\u540e\uff0c\u6210\u529f\u786e\u5b9a\u4e86\u53ef\u4ee5\u5206\u89e3\u4e3a\u66f4\u5c0fepichristoffel\u8bcd\u7684\u5b50\u7c7b\uff0c\u4e14\u501f\u52a9\u8be5\u6811\u83b7\u5f97\u4e86\u4e00\u4e9b\u6709\u52a9\u4e8e\u52a0\u6df1epichristoffel\u8bcd\u7406\u89e3\u7684\u65b0\u7ed3\u679c\u3002", "conclusion": "\u6587\u4e2d\u901a\u8fc7\u5f15\u5165epichristoffel\u6811\u8fd9\u4e00\u5de5\u5177\uff0c\u8fdb\u4e00\u6b65\u7406\u89e3\u5e76\u523b\u753bepichristoffel\u8bcd\uff0c\u5c24\u5176\u786e\u5b9a\u4e86\u5176\u4e2d\u5177\u6709Christoffel\u8bcd\u5173\u952e\u6027\u8d28\u7684\u5b50\u7c7b\u3002"}}
{"id": "2507.14214", "categories": ["cs.CL", "cs.CR", "cs.CY"], "pdf": "https://arxiv.org/pdf/2507.14214", "abs": "https://arxiv.org/abs/2507.14214", "authors": ["Rui Zhao", "Vladyslav Melnychuk", "Jun Zhao", "Jesse Wright", "Nigel Shadbolt"], "title": "Let's Measure the Elephant in the Room: Facilitating Personalized Automated Analysis of Privacy Policies at Scale", "comment": null, "summary": "In modern times, people have numerous online accounts, but they rarely read\nthe Terms of Service or Privacy Policy of those sites despite claiming\notherwise. This paper introduces PoliAnalyzer, a neuro-symbolic system that\nassists users with personalized privacy policy analysis. PoliAnalyzer uses\nNatural Language Processing (NLP) to extract formal representations of data\nusage practices from policy texts. In favor of deterministic, logical inference\nis applied to compare user preferences with the formal privacy policy\nrepresentation and produce a compliance report. To achieve this, we extend an\nexisting formal Data Terms of Use policy language to model privacy policies as\napp policies and user preferences as data policies. In our evaluation using our\nenriched PolicyIE dataset curated by legal experts, PoliAnalyzer demonstrated\nhigh accuracy in identifying relevant data usage practices, achieving F1-score\nof 90-100% across most tasks. Additionally, we demonstrate how PoliAnalyzer can\nmodel diverse user data-sharing preferences, derived from prior research as 23\nuser profiles, and perform compliance analysis against the top 100 most-visited\nwebsites. This analysis revealed that, on average, 95.2% of a privacy policy's\nsegments do not conflict with the analyzed user preferences, enabling users to\nconcentrate on understanding the 4.8% (636 / 13205) that violates preferences,\nsignificantly reducing cognitive burden. Further, we identified common\npractices in privacy policies that violate user expectations - such as the\nsharing of location data with 3rd parties. This paper demonstrates that\nPoliAnalyzer can support automated personalized privacy policy analysis at\nscale using off-the-shelf NLP tools. This sheds light on a pathway to help\nindividuals regain control over their data and encourage societal discussions\non platform data practices to promote a fairer power dynamic.", "AI": {"tldr": "PoliAnalyzer\u7ed3\u5408NLP\u4e0e\u7b26\u53f7\u903b\u8f91\u63a8\u7406\uff0c\u5b9e\u73b0\u4e86\u9690\u79c1\u653f\u7b56\u7684\u81ea\u52a8\u3001\u4e2a\u6027\u5316\u5206\u6790\uff0c\u663e\u8457\u964d\u4f4e\u4e86\u7528\u6237\u7406\u89e3\u653f\u7b56\u7684\u8ba4\u77e5\u8d1f\u62c5\uff0c\u5e76\u63ed\u793a\u4e86\u5e38\u89c1\u7684\u6570\u636e\u4f7f\u7528\u4e0e\u7528\u6237\u671f\u671b\u7684\u51b2\u7a81\uff0c\u53ef\u52a9\u76ca\u6570\u636e\u6743\u5229\u4fdd\u62a4\u548c\u6570\u636e\u653f\u7b56\u900f\u660e\u5316\u3002", "motivation": "\u73b0\u4ee3\u7528\u6237\u62e5\u6709\u4f17\u591a\u7ebf\u4e0a\u8d26\u6237\uff0c\u4f46\u5f88\u5c11\u771f\u6b63\u9605\u8bfb\u7f51\u7ad9\u7684\u670d\u52a1\u6761\u6b3e\u6216\u9690\u79c1\u653f\u7b56\u3002\u73b0\u6709\u7684\u9690\u79c1\u653f\u7b56\u9605\u8bfb\u8d1f\u62c5\u5f88\u5927\uff0c\u5bfc\u81f4\u7528\u6237\u5bf9\u6570\u636e\u4f7f\u7528\u7f3a\u4e4f\u8ba4\u77e5\u548c\u63a7\u5236\u3002\u4e3a\u5e2e\u52a9\u7528\u6237\u66f4\u597d\u5730\u7406\u89e3\u548c\u7ba1\u7406\u81ea\u5df1\u7684\u6570\u636e\u504f\u597d\uff0c\u9700\u8981\u81ea\u52a8\u5316\u3001\u4e2a\u6027\u5316\u7684\u9690\u79c1\u653f\u7b56\u5206\u6790\u5de5\u5177\u3002", "method": "\u63d0\u51fa\u4e86PoliAnalyzer\u795e\u7ecf\u7b26\u53f7\u7cfb\u7edf\uff0c\u7ed3\u5408\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u548c\u5f62\u5f0f\u5316\u903b\u8f91\u63a8\u7406\uff0c\u4ece\u9690\u79c1\u653f\u7b56\u6587\u672c\u4e2d\u62bd\u53d6\u6570\u636e\u4f7f\u7528\u89c4\u5219\uff0c\u5e76\u7528\u6269\u5c55\u7684\u5f62\u5f0f\u5316\u9690\u79c1\u653f\u7b56\u8bed\u8a00\u5206\u522b\u5efa\u6a21App\u653f\u7b56\u548c\u7528\u6237\u504f\u597d\u3002\u968f\u540e\uff0c\u903b\u8f91\u63a8\u7406\u5bf9\u6bd4\u4e24\u8005\uff0c\u81ea\u52a8\u751f\u6210\u5408\u89c4\u6027\u62a5\u544a\u3002PoliAnalyzer\u5229\u7528\u4e30\u5bcc\u7684\u7531\u6cd5\u5f8b\u4e13\u5bb6\u6574\u7406\u7684PolicyIE\u6570\u636e\u96c6\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u5728\u7528\u6237\u504f\u597d\u5408\u89c4\u6027\u68c0\u6d4b\u4e0a\u8fdb\u884c\u4e86\u5927\u89c4\u6a21\u5b9e\u8bc1\u5206\u6790\u3002", "result": "PoliAnalyzer\u5728\u76f8\u5173\u6570\u636e\u4f7f\u7528\u5b9e\u8df5\u8bc6\u522b\u4e0a\u53d6\u5f97\u4e8690-100%\u7684F1\u5206\u6570\uff0c\u80fd\u591f\u5efa\u6a2123\u79cd\u7528\u6237\u6570\u636e\u5171\u4eab\u504f\u597d\uff0c\u5e76\u5bf9\u524d100\u5927\u7f51\u7ad9\u7684\u9690\u79c1\u653f\u7b56\u8fdb\u884c\u7b26\u5408\u6027\u5206\u6790\u3002\u5206\u6790\u663e\u793a\uff0c\u5e73\u574795.2%\u7684\u653f\u7b56\u6761\u6b3e\u672a\u4e0e\u7528\u6237\u504f\u597d\u51b2\u7a81\uff0c\u7528\u6237\u53ea\u9700\u5173\u6ce84.8%\u6709\u51b2\u7a81\u7684\u90e8\u5206\uff0c\u4ece\u800c\u6781\u5927\u964d\u4f4e\u4e86\u8ba4\u77e5\u8d1f\u62c5\u3002\u8fd8\u6316\u6398\u51fa\u5982\u4f4d\u7f6e\u6570\u636e\u4e0e\u7b2c\u4e09\u65b9\u5171\u4eab\u7b49\u5e38\u89c1\u9690\u79c1\u653f\u7b56\u4e0e\u7528\u6237\u671f\u671b\u4e0d\u7b26\u7684\u73b0\u8c61\u3002", "conclusion": "PoliAnalyzer\u7cfb\u7edf\u80fd\u591f\u6709\u6548\u3001\u81ea\u52a8\u5730\u6267\u884c\u4e2a\u6027\u5316\u7684\u5927\u89c4\u6a21\u9690\u79c1\u653f\u7b56\u5206\u6790\uff0c\u501f\u52a9\u901a\u7528NLP\u5de5\u5177\u5e2e\u52a9\u7528\u6237\u805a\u7126\u4e8e\u771f\u6b63\u91cd\u8981\u7684\u653f\u7b56\u6761\u6b3e\uff0c\u63a8\u52a8\u4e2a\u4eba\u6570\u636e\u63a7\u5236\u6743\u63d0\u5347\u548c\u6570\u636e\u4f7f\u7528\u900f\u660e\u6027\uff0c\u4e3a\u5e73\u53f0\u6570\u636e\u5b9e\u8df5\u5e26\u6765\u66f4\u516c\u5e73\u7684\u529b\u91cf\u683c\u5c40\u63d0\u4f9b\u53ef\u884c\u65b9\u6848\u3002"}}
{"id": "2507.15843", "categories": ["cs.PL", "D.3.1; F.3.1; F.3.2; D.2.4"], "pdf": "https://arxiv.org/pdf/2507.15843", "abs": "https://arxiv.org/abs/2507.15843", "authors": ["Beniamino Accattoli", "Dan Ghica", "Giulio Guerrieri", "Cl\u00e1udio Belo Louren\u00e7o", "Claudio Sacerdoti Coen"], "title": "Closure Conversion, Flat Environments, and the Complexity of Abstract Machines", "comment": null, "summary": "Closure conversion is a program transformation at work in compilers for\nfunctional languages to turn inner functions into global ones, by building\nclosures pairing the transformed functions with the environment of their free\nvariables. Abstract machines rely on similar and yet different concepts of\nclosures and environments.\n  In this paper, we study the relationship between the two approaches. We adopt\na very simple {\\lambda}-calculus with tuples as source language and study\nabstract machines for both the source language and the target of closure\nconversion. Moreover, we focus on the simple case of flat\nclosures/environments, that is, with no sharing of environments. We provide\nthree contributions.\n  Firstly, a new simple proof technique for the correctness of closure\nconversion, inspired by abstract machines.\n  Secondly, we show how the closure invariants of the target language allow us\nto design a new way of handling environments in abstract machines, not\nsuffering the shortcomings of other styles.\n  Thirdly, we study the machines from the point of view of time complexity,\nadapting analyses by Accattoli and co-authors. We show that closure conversion\ndecreases various dynamic costs while increasing the size of the initial code.\nDespite these changes, the overall complexity of the machines before and after\nclosure conversion turns out to be the same.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u6bd4\u8f83\u4e86\u7f16\u8bd1\u5668\u95ed\u5305\u8f6c\u6362\u4e0e\u62bd\u8c61\u673a\u4e2d\u7684\u95ed\u5305\u7ba1\u7406\uff0c\u63d0\u51fa\u4e86\u7b80\u6d01\u7684\u6b63\u786e\u6027\u8bc1\u660e\u65b9\u6cd5\u548c\u6539\u8fdb\u73af\u5883\u5904\u7406\u673a\u5236\uff0c\u5e76\u901a\u8fc7\u590d\u6742\u5ea6\u5206\u6790\u8868\u660e\u95ed\u5305\u8f6c\u6362\u964d\u4f4e\u4e86\u8fd0\u884c\u65f6\u5f00\u9500\u4f46\u603b\u4f53\u8ba1\u7b97\u590d\u6742\u5ea6\u4e0d\u53d8\u3002", "motivation": "\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u95ed\u5305\u8f6c\u6362\u662f\u4e00\u9879\u5173\u952e\u7684\u7a0b\u5e8f\u53d8\u6362\u6280\u672f\u3002\u672c\u8bba\u6587\u65e8\u5728\u6df1\u5165\u7814\u7a76\u7f16\u8bd1\u5668\u4f7f\u7528\u7684\u95ed\u5305\u8f6c\u6362\u4e0e\u62bd\u8c61\u673a\u4e2d\u7684\u95ed\u5305\u548c\u73af\u5883\u5b9e\u73b0\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7279\u522b\u662f\u5728\u4e0d\u5171\u4eab\u73af\u5883\u7684\u7b80\u5355\u60c5\u51b5\u4e0b\u63a2\u7d22\u5176\u7406\u8bba\u57fa\u7840\u4e0e\u5b9e\u9645\u5f71\u54cd\u3002", "method": "\u91c7\u7528\u6781\u7b80\u7684\u03bb-\u6f14\u7b97\u4ee5\u53ca\u5143\u7ec4\u4f5c\u4e3a\u6e90\u8bed\u8a00\uff0c\u540c\u65f6\u5206\u522b\u9488\u5bf9\u6e90\u8bed\u8a00\u548c\u95ed\u5305\u8f6c\u6362\u540e\u7684\u76ee\u6807\u8bed\u8a00\u8bbe\u8ba1\u62bd\u8c61\u673a\uff0c\u5b9e\u73b0\u5bf9\u4e24\u8005\u7684\u6bd4\u8f83\u4e0e\u5206\u6790\u3002\u5f15\u5165\u4e86\u4e00\u79cd\u57fa\u4e8e\u62bd\u8c61\u673a\u7075\u611f\u7684\u65b0\u578b\u95ed\u5305\u8f6c\u6362\u6b63\u786e\u6027\u8bc1\u660e\u65b9\u6cd5\uff0c\u5e76\u5bf9\u62bd\u8c61\u673a\u7684\u65f6\u95f4\u590d\u6742\u6027\u91c7\u7528\u73b0\u6709\u5206\u6790\u65b9\u6cd5\u52a0\u4ee5\u9002\u914d\u3002", "result": "\uff081\uff09\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u3001\u6e90\u81ea\u62bd\u8c61\u673a\u601d\u8def\u7684\u95ed\u5305\u8f6c\u6362\u6b63\u786e\u6027\u8bc1\u660e\u6280\u672f\uff1b\uff082\uff09\u5c55\u793a\u4e86\u76ee\u6807\u8bed\u8a00\u7684\u95ed\u5305\u4e0d\u53d8\u91cf\u5982\u4f55\u7528\u4e8e\u8bbe\u8ba1\u65b0\u7684\u73af\u5883\u7ba1\u7406\u65b9\u6cd5\uff0c\u4ece\u800c\u89c4\u907f\u4f20\u7edf\u65b9\u6cd5\u7684\u7f3a\u9677\uff1b\uff083\uff09\u901a\u8fc7\u590d\u6742\u5ea6\u5206\u6790\u53d1\u73b0\uff0c\u95ed\u5305\u8f6c\u6362\u867d\u7136\u589e\u52a0\u4e86\u521d\u59cb\u4ee3\u7801\u4f53\u79ef\uff0c\u4f46\u964d\u4f4e\u4e86\u591a\u79cd\u52a8\u6001\u8fd0\u884c\u6210\u672c\uff0c\u603b\u4f53\u7684\u673a\u5668\u590d\u6742\u5ea6\u4fdd\u6301\u4e0d\u53d8\u3002", "conclusion": "\u672c\u6587\u4e0d\u4ec5\u63d0\u51fa\u4e86\u9a8c\u8bc1\u95ed\u5305\u8f6c\u6362\u6b63\u786e\u6027\u7684\u7b80\u5316\u6280\u672f\u548c\u5168\u65b0\u73af\u5883\u7ba1\u7406\u65b9\u6848\uff0c\u8fd8\u901a\u8fc7\u5f62\u5f0f\u5316\u5206\u6790\uff0c\u63ed\u793a\u4e86\u8f6c\u6362\u524d\u540e\u62bd\u8c61\u673a\u8fd0\u884c\u6548\u7387\u7684\u5fae\u5999\u53d8\u5316\uff0c\u4e3a\u7f16\u8bd1\u6280\u672f\u4ee5\u53ca\u62bd\u8c61\u673a\u7406\u8bba\u63d0\u4f9b\u4e86\u65b0\u7684\u89c1\u89e3\u3002"}}
{"id": "2507.14547", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14547", "abs": "https://arxiv.org/abs/2507.14547", "authors": ["Noman Ahmad", "Ruoyu Su", "Matteo Esposito", "Andrea Janes", "Valentina Lenarduzzi", "Davide Taibi"], "title": "Architectural Degradation: Definition, Motivations, Measurement and Remediation Approaches", "comment": null, "summary": "Architectural degradation, also known as erosion, decay, or aging, impacts\nsystem quality, maintainability, and adaptability. Although widely\nacknowledged, current literature shows fragmented definitions, metrics, and\nremediation strategies. Our study aims to unify understanding of architectural\ndegradation by identifying its definitions, causes, metrics, tools, and\nremediation approaches across academic and gray literature. We conducted a\nmultivocal literature review of 108 studies extracting definitions, causes,\nmetrics, measurement approaches, tools, and remediation strategies. We\ndeveloped a taxonomy encompassing architectural, code, and process debt to\nexplore definition evolution, methodological trends, and research gaps.\nArchitectural degradation has shifted from a low-level issue to a\nsocio-technical concern. Definitions now address code violations, design drift,\nand structural decay. Causes fall under architectural (e.g., poor\ndocumentation), code (e.g., hasty fixes), and process debt (e.g., knowledge\nloss). We identified 54 metrics and 31 measurement techniques, focused on\nsmells, cohesion/coupling, and evolution. Yet, most tools detect issues but\nrarely support ongoing or preventive remediation. Degradation is both technical\nand organizational. While detection is well-studied, continuous remediation\nremains lacking. Our study reveals missed integration between metrics, tools,\nand repair logic, urging holistic, proactive strategies for sustainable\narchitecture.", "AI": {"tldr": "\u672c\u6587\u7efc\u8ff0\u4e86\u67b6\u6784\u52a3\u5316\u9886\u57df\u7684\u5b9a\u4e49\u3001\u6210\u56e0\u4e0e\u4fee\u590d\u8fdb\u5c55\uff0c\u53d1\u73b0\u867d\u80fd\u8f83\u597d\u68c0\u6d4b\uff0c\u4f46\u6301\u7eed\u4fee\u590d\u624b\u6bb5\u4e0d\u8db3\uff0c\u547c\u5401\u91c7\u7528\u5ea6\u91cf-\u5de5\u5177-\u4fee\u590d\u4e00\u4f53\u5316\u3001\u4e3b\u52a8\u6027\u7684\u7ef4\u62a4\u7b56\u7565\u3002", "motivation": "\u867d\u7136\u67b6\u6784\u52a3\u5316\u5bf9\u8f6f\u4ef6\u7cfb\u7edf\u8d28\u91cf\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u9002\u5e94\u6027\u6709\u91cd\u5927\u5f71\u54cd\uff0c\u4f46\u76f8\u5173\u5b9a\u4e49\u3001\u5ea6\u91cf\u4e0e\u4fee\u590d\u7b56\u7565\u5206\u6563\u4e14\u4e0d\u7edf\u4e00\uff0c\u56e0\u6b64\u9700\u8981\u7cfb\u7edf\u68b3\u7406\u73b0\u6709\u7814\u7a76\uff0c\u63a8\u52a8\u8be5\u9886\u57df\u8ba4\u77e5\u548c\u65b9\u6cd5\u7684\u7edf\u4e00\u3002", "method": "\u91c7\u7528\u591a\u58f0\u9053\u6587\u732e\u7efc\u8ff0\uff08Multivocal Literature Review\uff09\uff0c\u6c47\u603b\u4e86108\u7bc7\u5b66\u672f\u53ca\u7070\u8272\u6587\u732e\uff0c\u901a\u8fc7\u63d0\u53d6\u548c\u5f52\u7eb3\u5b9a\u4e49\u3001\u6210\u56e0\u3001\u5ea6\u91cf\u3001\u5de5\u5177\u53ca\u4fee\u590d\u7b56\u7565\uff0c\u6784\u5efa\u4e86\u67b6\u6784\u52a3\u5316\u5206\u7c7b\u6cd5\uff0c\u5206\u6790\u8be5\u9886\u57df\u7684\u53d1\u5c55\u8d8b\u52bf\u4e0e\u7814\u7a76\u7a7a\u7f3a\u3002", "result": "\u5f52\u7eb3\u51fa\u67b6\u6784\u3001\u4ee3\u7801\u3001\u8fc7\u7a0b\u503a\u52a1\u7b49\u4e09\u5927\u7c7b\u6210\u56e0\uff0c\u6536\u96c654\u79cd\u5ea6\u91cf\u53ca31\u79cd\u68c0\u6d4b\u65b9\u6cd5\uff0c\u53d1\u73b0\u4e3b\u6d41\u5de5\u5177\u4ec5\u63d0\u4f9b\u68c0\u6d4b\u3001\u591a\u6570\u65e0\u6cd5\u6301\u7eed\u652f\u6301\u4fee\u590d\uff1b\u7814\u7a76\u63ed\u793a\u51fa\u6280\u672f\u4e0e\u7ec4\u7ec7\u56e0\u7d20\u5747\u4f1a\u5bfc\u81f4\u52a3\u5316\uff0c\u6301\u7eed\u4e3b\u52a8\u4fee\u590d\u65b9\u6cd5\u7f3a\u4e4f\u3002\u63d0\u51fa\u9700\u878d\u5408\u5ea6\u91cf\u3001\u68c0\u6d4b\u4e0e\u4fee\u590d\u903b\u8f91\uff0c\u63a8\u52a8\u9884\u9632\u6027\u3001\u53ef\u6301\u7eed\u6027\u7684\u89e3\u51b3\u65b9\u6848\u3002", "conclusion": "\u672c\u7814\u7a76\u901a\u8fc7\u591a\u6e20\u9053\u6587\u732e\u56de\u987e\uff0c\u68b3\u7406\u5e76\u7edf\u4e00\u4e86\u67b6\u6784\u52a3\u5316\u7684\u5b9a\u4e49\u3001\u6210\u56e0\u3001\u5ea6\u91cf\u3001\u68c0\u6d4b\u5de5\u5177\u53ca\u4fee\u590d\u65b9\u6cd5\u3002\u7ed3\u679c\u663e\u793a\uff1a\u5f53\u524d\u68c0\u6d4b\u624b\u6bb5\u8f83\u6210\u719f\uff0c\u7136\u800c\u5bf9\u6301\u7eed\u9884\u9632\u548c\u4fee\u590d\u7684\u652f\u6301\u8f83\u5c11\uff1b\u5ea6\u91cf\u3001\u68c0\u6d4b\u5de5\u5177\u4e0e\u4fee\u590d\u903b\u8f91\u76f8\u4e92\u5272\u88c2\u3002\u547c\u5401\u91c7\u7528\u7efc\u5408\u4e3b\u52a8\u7b56\u7565\u5b9e\u73b0\u53ef\u6301\u7eed\u6027\u8f6f\u4ef6\u67b6\u6784\u3002"}}
{"id": "2507.15117", "categories": ["cs.LO", "math.LO", "03B45", "F.4.0"], "pdf": "https://arxiv.org/pdf/2507.15117", "abs": "https://arxiv.org/abs/2507.15117", "authors": ["Alfredo Burrieza", "Fernando Soler-Toscano", "Antonio Yuste-Ginel"], "title": "A meta-modal logic for bisimulations", "comment": "24 pages", "summary": "We propose a modal study of the notion of bisimulation. Our contribution is\ntwofold. First, we extend the basic modal language with a new modality [b],\nwhose intended meaning is universal quantification over all states that are\nbisimilar to the current one. We show that bisimulations are definable in this\nobject language. Second, we provide a sound and complete axiomatisation of the\nclass of all pairs of Kripke models linked by bisimulations.", "AI": {"tldr": "\u4f5c\u8005\u901a\u8fc7\u4e3a\u6a21\u6001\u903b\u8f91\u5f15\u5165\u65b0\u7684\u7b97\u5b50\uff0c\u5b9e\u73b0\u4e86\u5728\u8bed\u8a00\u4e2d\u76f4\u63a5\u8868\u8fbe\u53cc\u6a21\u62df\u5173\u7cfb\uff0c\u5e76\u5bf9\u53cc\u6a21\u62df\u4e0b\u7684\u6a21\u578b\u5bf9\u7ed9\u51fa\u4e86\u5b8c\u5907\u516c\u7406\u5316\uff0c\u62d3\u5c55\u4e86\u6a21\u6001\u903b\u8f91\u7684\u8868\u8fbe\u529b\u3002", "motivation": "\u7814\u7a76\u53cc\u6a21\u62df\uff08bisimulation\uff09\u5728\u6a21\u6001\u903b\u8f91\u4e2d\u7684\u523b\u753b\u53ca\u8868\u8fbe\u80fd\u529b\uff0c\u7a81\u7834\u73b0\u6709\u57fa\u672c\u6a21\u6001\u8bed\u8a00\u5bf9\u53cc\u6a21\u62df\u6027\u8d28\u8868\u8fbe\u7684\u5c40\u9650\u3002", "method": "\uff081\uff09\u6269\u5c55\u57fa\u672c\u6a21\u6001\u8bed\u8a00\uff0c\u5f15\u5165\u65b0\u7684\u6a21\u6001\u7b97\u5b50[b]\uff0c\u7528\u4ee5\u5728\u672c\u4f53\u8bed\u8a00\u4e2d\u5bf9\u6240\u6709\u4e0e\u5f53\u524d\u72b6\u6001\u53cc\u6a21\u62df\u7684\u72b6\u6001\u8fdb\u884c\u5168\u79f0\u91cf\u5316\uff1b\uff082\uff09\u7ed9\u51fa\u4e86\u6240\u6709\u7531\u53cc\u6a21\u62df\u5173\u8054\u7684Kripke\u6a21\u578b\u5bf9\u7684\u516c\u7406\u5316\u63cf\u8ff0\uff0c\u5e76\u8bc1\u660e\u4e86\u8be5\u4f53\u7cfb\u7684\u5b8c\u5907\u6027\u4e0e\u53ef\u9760\u6027\u3002", "result": "\u901a\u8fc7\u5728\u8bed\u8a00\u5c42\u9762\u5b9e\u73b0\u4e86\u53cc\u6a21\u62df\u7684\u53ef\u5b9a\u4e49\u6027\uff0c\u5e76\u63d0\u51fa\u4e86\u5b8c\u6574\u7684\u516c\u7406\u7cfb\u7edf\uff0c\u523b\u753b\u4e86\u6240\u6709\u7531\u53cc\u6a21\u62df\u5173\u8054\u7684Kripke\u6a21\u578b\u5bf9\u3002", "conclusion": "\u65b0\u589e\u6a21\u6001\u7b97\u5b50[b]\u4f7f\u5f97\u53cc\u6a21\u62df\u53ef\u8868\u8fbe\uff0c\u5b8c\u5584\u4e86\u6a21\u6001\u903b\u8f91\u5bf9\u53cc\u6a21\u62df\u7ed3\u6784\u7684\u523b\u753b\u548c\u7406\u89e3\uff0c\u5e76\u7ed9\u51fa\u4e86\u7406\u8bba\u4e0a\u7684\u5b8c\u5907\u516c\u7406\u4f53\u7cfb\u3002"}}
{"id": "2507.15314", "categories": ["cs.FL", "F.4.3; H.5.5"], "pdf": "https://arxiv.org/pdf/2507.15314", "abs": "https://arxiv.org/abs/2507.15314", "authors": ["Jozef Maki\u0161", "Alexander Meduna", "Zbyn\u011bk K\u0159ivka"], "title": "Orchestration of Music by Grammar Systems", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "This application-oriented study concerns computational musicology, which\nmakes use of grammar systems. We define multi-generative rule-synchronized\nscattered-context grammar systems (without erasing rules) and demonstrates how\nto simultaneously make the arrangement of a musical composition for performance\nby a whole orchestra, consisting of several instruments. Primarily, an\norchestration like this is illustrated by examples in terms of classical music.\nIn addition, the orchestration of jazz compositions is sketched as well. The\nstudy concludes its discussion by suggesting five open problem areas related to\nthis way of orchestration.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5e76\u9a8c\u8bc1\u4e86\u4e00\u79cd\u57fa\u4e8e\u65b0\u578b\u6587\u6cd5\u7cfb\u7edf\u7684\u81ea\u52a8\u7ba1\u5f26\u4e50\u7f16\u66f2\u65b9\u6cd5\uff0c\u4e3a\u8ba1\u7b97\u673a\u97f3\u4e50\u81ea\u52a8\u5316\u63d0\u4f9b\u4e86\u65b0\u65b9\u5411\uff0c\u5e76\u63d0\u51fa\u4e94\u4e2a\u672a\u6765\u7814\u7a76\u95ee\u9898\u3002", "motivation": "\u63a2\u7a76\u5982\u4f55\u5229\u7528\u6587\u6cd5\u7cfb\u7edf\u8f85\u52a9\u8ba1\u7b97\u97f3\u4e50\u5b66\uff0c\u7279\u522b\u662f\u5728\u7ba1\u5f26\u4e50\u7f16\u66f2\u4e2d\u7684\u5e94\u7528\u3002", "method": "\u5b9a\u4e49\u5e76\u63d0\u51fa\u4e86\u591a\u751f\u6210\u89c4\u5219\u540c\u6b65\u6563\u70b9\u4e0a\u4e0b\u6587\u6587\u6cd5\u7cfb\u7edf\uff08\u65e0\u6d88\u9664\u89c4\u5219\uff09\uff0c\u5e76\u901a\u8fc7\u53e4\u5178\u97f3\u4e50\u548c\u7235\u58eb\u4e50\u66f2\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u5982\u4f55\u7528\u8be5\u7cfb\u7edf\u5b9e\u73b0\u7ba1\u5f26\u4e50\u4f5c\u54c1\u7684\u81ea\u52a8\u7f16\u66f2\u3002", "result": "\u901a\u8fc7\u5b9e\u4f8b\u6f14\u793a\u4e86\u4e0a\u8ff0\u6587\u6cd5\u7cfb\u7edf\u5728\u53e4\u5178\u4e0e\u7235\u58eb\u97f3\u4e50\u7f16\u66f2\u4e2d\u7684\u53ef\u884c\u6027\uff0c\u4e3a\u8ba1\u7b97\u673a\u8f85\u52a9\u7f16\u66f2\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0e\u65b9\u6cd5\u57fa\u7840\u3002", "conclusion": "\u8bc1\u660e\u4e86\u591a\u751f\u6210\u89c4\u5219\u540c\u6b65\u6563\u70b9\u4e0a\u4e0b\u6587\u6587\u6cd5\u7cfb\u7edf\u5728\u81ea\u52a8\u7ba1\u5f26\u4e50\u7f16\u66f2\u4e2d\u7684\u6709\u6548\u6027\uff0c\u5e76\u63d0\u51fa\u4e86\u8be5\u9886\u57df\u7684\u4e94\u4e2a\u5f00\u653e\u6027\u95ee\u9898\u4f9b\u540e\u7eed\u7814\u7a76\u3002"}}
{"id": "2507.14231", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.14231", "abs": "https://arxiv.org/abs/2507.14231", "authors": ["Khalid Hasan", "Jamil Saquer"], "title": "Beyond Architectures: Evaluating the Role of Contextual Embeddings in Detecting Bipolar Disorder on Social Media", "comment": "The 37th International Conference on Software Engineering & Knowledge\n  Engineering, SEKE 2025 (camera-ready)", "summary": "Bipolar disorder is a chronic mental illness frequently underdiagnosed due to\nsubtle early symptoms and social stigma. This paper explores the advanced\nnatural language processing (NLP) models for recognizing signs of bipolar\ndisorder based on user-generated social media text. We conduct a comprehensive\nevaluation of transformer-based models (BERT, RoBERTa, ALBERT, ELECTRA,\nDistilBERT) and Long Short Term Memory (LSTM) models based on contextualized\n(BERT) and static (GloVe, Word2Vec) word embeddings. Experiments were performed\non a large, annotated dataset of Reddit posts after confirming their validity\nthrough sentiment variance and judgmental analysis. Our results demonstrate\nthat RoBERTa achieves the highest performance among transformer models with an\nF1 score of ~98% while LSTM models using BERT embeddings yield nearly identical\nresults. In contrast, LSTMs trained on static embeddings fail to capture\nmeaningful patterns, scoring near-zero F1. These findings underscore the\ncritical role of contextual language modeling in detecting bipolar disorder. In\naddition, we report model training times and highlight that DistilBERT offers\nan optimal balance between efficiency and accuracy. In general, our study\noffers actionable insights for model selection in mental health NLP\napplications and validates the potential of contextualized language models to\nsupport early bipolar disorder screening.", "AI": {"tldr": "\u591a\u79cd\u6df1\u5ea6\u5b66\u4e60NLP\u6a21\u578b\u7528\u4e8e\u793e\u4ea4\u5a92\u4f53\u81ea\u8ff0\u6587\u672c\u5206\u6790\uff0cRoBERTa\u548cBERT\u5d4c\u5165LSTM\u80fd\u9ad8\u7cbe\u5ea6\u8bc6\u522b\u53cc\u76f8\u969c\u788d\uff0cDistilBERT\u9ad8\u6548\u53c8\u51c6\u786e\uff0c\u4f20\u7edf\u9759\u6001\u5d4c\u5165\u6548\u679c\u6781\u5dee\u3002\u4e0a\u4e0b\u6587\u5efa\u6a21\u5bf9\u5fc3\u7406\u7b5b\u67e5\u6709\u5173\u952e\u4f5c\u7528\uff0c\u7814\u7a76\u4e3a\u5b9e\u9645\u5e94\u7528\u9009\u578b\u63d0\u4f9b\u53c2\u8003\u3002", "motivation": "\u53cc\u76f8\u60c5\u611f\u969c\u788d\u65e9\u671f\u75c7\u72b6\u9690\u853d\u4e14\u5177\u6709\u793e\u4f1a\u6c61\u540d\u5316\uff0c\u5e38\u88ab\u6f0f\u8bca\u3002\u4f5c\u8005\u5e0c\u671b\u901a\u8fc7NLP\u6280\u672f\uff0c\u5229\u7528\u793e\u4ea4\u5a92\u4f53\u6587\u672c\uff0c\u63d0\u5347\u53cc\u76f8\u60c5\u611f\u969c\u788d\u7684\u8bc6\u522b\u7387\u3002", "method": "\u5bf9\u591a\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u8fdb\u884c\u4e86\u7cfb\u7edf\u8bc4\u4f30\uff0c\u5305\u62ec\u591a\u79cdtransformer\uff08\u5982BERT\u3001RoBERTa\u3001ALBERT\u3001ELECTRA\u3001DistilBERT\uff09\u53ca\u4ee5BERT\u548c\u9759\u6001\u8bcd\u5d4c\u5165\uff08GloVe\u3001Word2Vec\uff09\u4e3a\u57fa\u7840\u7684LSTM\u6a21\u578b\uff0c\u7528\u4e8e\u5206\u6790Reddit\u5927\u6570\u636e\u96c6\u7684\u7528\u6237\u53d1\u5e16\u3002", "result": "RoBERTa\u6a21\u578bF1\u5206\u6570\u6700\u9ad8\uff08\u7ea698%\uff09\uff0c\u57fa\u4e8eBERT\u5d4c\u5165\u7684LSTM\u7ed3\u679c\u76f8\u8fd1\uff0c\u800c\u57fa\u4e8e\u9759\u6001\u8bcd\u5d4c\u5165\u7684LSTM\u8868\u73b0\u5f88\u5dee\u3002DistilBERT\u5728\u6548\u7387\u4e0e\u51c6\u786e\u5ea6\u95f4\u8868\u73b0\u6700\u597d\u3002", "conclusion": "\u4e0a\u4e0b\u6587\u8bed\u5883\u8bed\u8a00\u5efa\u6a21\u5bf9\u53cc\u76f8\u969c\u788d\u68c0\u6d4b\u6781\u4e3a\u91cd\u8981\uff0c\u6df1\u5ea6\u9884\u8bad\u7ec3\u6a21\u578b\u80fd\u663e\u8457\u63d0\u5347NLP\u5fc3\u7406\u5065\u5eb7\u7b5b\u67e5\u6548\u679c\uff0c\u5c24\u5176\u5728\u65e9\u671f\u7b5b\u67e5\u65b9\u9762\u3002\u6a21\u578b\u9009\u62e9\u5efa\u8bae\u5177\u6709\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002"}}
{"id": "2502.15441", "categories": ["cs.SE", "cs.AI", "cs.FL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2502.15441", "abs": "https://arxiv.org/abs/2502.15441", "authors": ["Yang Hong", "Shan Jiang", "Yulei Fu", "Sarfraz Khurshid"], "title": "On the Effectiveness of Large Language Models in Writing Alloy Formulas", "comment": null, "summary": "Declarative specifications have a vital role to play in developing safe and\ndependable software systems. Writing specifications correctly, however, remains\nparticularly challenging. This paper presents a controlled experiment on using\nlarge language models (LLMs) to write declarative formulas in the well-known\nlanguage Alloy. Our use of LLMs is three-fold. One, we employ LLMs to write\ncomplete Alloy formulas from given natural language descriptions (in English).\nTwo, we employ LLMs to create alternative but equivalent formulas in Alloy with\nrespect to given Alloy formulas. Three, we employ LLMs to complete sketches of\nAlloy formulas and populate the holes in the sketches by synthesizing Alloy\nexpressions and operators so that the completed formulas accurately represent\nthe desired properties (that are given in natural language). We conduct the\nexperimental evaluation using 11 well-studied subject specifications and employ\ntwo popular LLMs, namely ChatGPT and DeepSeek. The experimental results show\nthat the LLMs generally perform well in synthesizing complete Alloy formulas\nfrom input properties given in natural language or in Alloy, and are able to\nenumerate multiple unique solutions. Moreover, the LLMs are also successful at\ncompleting given sketches of Alloy formulas with respect to natural language\ndescriptions of desired properties (without requiring test cases). We believe\nLLMs offer a very exciting advance in our ability to write specifications, and\ncan help make specifications take a pivotal role in software development and\nenhance our ability to build robust software.", "AI": {"tldr": "\u672c\u7814\u7a76\u5b9e\u9a8c\u8bc1\u660e\uff0cLLMs\u5982ChatGPT\u548cDeepSeek\u80fd\u6709\u6548\u8f85\u52a9\u6216\u81ea\u52a8\u751f\u6210Alloy\u58f0\u660e\u5f0f\u89c4\u8303\uff0c\u5305\u62ec\u516c\u5f0f\u5408\u6210\u3001\u7b49\u4ef7\u6539\u5199\u548c\u8349\u56fe\u8865\u5168\uff0c\u663e\u8457\u63d0\u5347\u89c4\u8303\u5f00\u53d1\u6548\u7387\u548c\u8d28\u91cf\uff0c\u5bf9\u53ef\u9760\u8f6f\u4ef6\u5f00\u53d1\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002", "motivation": "\u58f0\u660e\u5f0f\u89c4\u8303\u5728\u5f00\u53d1\u5b89\u5168\u53ef\u9760\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u7f16\u5199\u89c4\u8303\u4ecd\u7136\u6781\u5177\u6311\u6218\u6027\u3002", "method": "\u901a\u8fc7\u53d7\u63a7\u5b9e\u9a8c\uff0c\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728Alloy\u8bed\u8a00\u4e2d\u5b8c\u6210\u4e09\u9879\u4efb\u52a1\uff1a1\uff09\u6839\u636e\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7f16\u5199\u5b8c\u6574\u7684Alloy\u516c\u5f0f\uff0c2\uff09\u7ed9\u5b9aAlloy\u516c\u5f0f\u751f\u6210\u7b49\u4ef7\u7684\u66ff\u4ee3\u8868\u8fbe\u5f0f\uff0c3\uff09\u5b8c\u6210Alloy\u516c\u5f0f\u7684\u7ed3\u6784\u8349\u56fe\u5e76\u586b\u8865\u7a7a\u7f3a\uff0c\u4f7f\u5176\u51c6\u786e\u8868\u8fbe\u6240\u9700\u5c5e\u6027\u3002\u5b9e\u9a8c\u6d89\u53ca11\u4e2a\u7ecf\u5178\u89c4\u8303\uff0c\u91c7\u7528ChatGPT\u548cDeepSeek\u4e24\u79cd\u4e3b\u6d41LLM\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0cLLMs\u5728\u6839\u636e\u81ea\u7136\u8bed\u8a00\u6216Alloy\u8f93\u5165\u5408\u6210\u5b8c\u6574Alloy\u516c\u5f0f\u3001\u679a\u4e3e\u591a\u4e2a\u72ec\u7279\u89e3\u3001\u4ee5\u53ca\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u5b8c\u6210\u516c\u5f0f\u7ed3\u6784\u8349\u56fe\u7b49\u65b9\u9762\u5747\u8868\u73b0\u826f\u597d\uff0c\u65e0\u9700\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u80fd\u51c6\u786e\u8865\u5168\u8349\u56fe\u3002", "conclusion": "LLMs\u6781\u5927\u63d0\u5347\u4e86\u89c4\u8303\u7f16\u5199\u7684\u80fd\u529b\uff0c\u6709\u52a9\u4e8e\u89c4\u8303\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u53d1\u6325\u6838\u5fc3\u4f5c\u7528\uff0c\u63d0\u5347\u6784\u5efa\u5065\u58ee\u8f6f\u4ef6\u7684\u80fd\u529b\u3002"}}
{"id": "2507.14554", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14554", "abs": "https://arxiv.org/abs/2507.14554", "authors": ["Ruoyu Su", "Noman ahmad", "Matteo Esposito", "Andrea Janes", "Davide Taibi", "Valentina Lenarduzzi"], "title": "Emerging Trends in Software Architecture from the Practitioners Perspective: A Five Year Review", "comment": null, "summary": "Software architecture plays a central role in the design, development, and\nmaintenance of software systems. With the rise of cloud computing,\nmicroservices, and containers, architectural practices have diversified.\nUnderstanding these shifts is vital. This study analyzes software architecture\ntrends across eight leading industry conferences over five years. We\ninvestigate the evolution of software architecture by analyzing talks from top\npractitioner conferences, focusing on the motivations and contexts driving\ntechnology adoption. We analyzed 5,677 talks from eight major industry\nconferences, using large language models and expert validation to extract\ntechnologies, their purposes, and usage contexts. We also explored how\ntechnologies interrelate and fit within DevOps and deployment pipelines. Among\n450 technologies, Kubernetes, Cloud Native, Serverless, and Containers dominate\nby frequency and centrality. Practitioners present technology mainly related to\ndeployment, communication, AI, and observability. We identify five technology\ncommunities covering automation, coordination, cloud AI, monitoring, and\ncloud-edge. Most technologies span multiple DevOps stages and support hybrid\ndeployment. Our study reveals that a few core technologies, like Kubernetes and\nServerless, dominate the contemporary software architecture practice. These are\nmainly applied in later DevOps stages, with limited focus on early phases like\nplanning and coding. We also show how practitioners frame technologies by\npurpose and context, reflecting evolving industry priorities. Finally, we\nobserve how only research can provide a more holistic lens on architectural\ndesign, quality, and evolution.", "AI": {"tldr": "\u4e1a\u754c\u8f6f\u4ef6\u67b6\u6784\u5b9e\u8df5\u88ab\u5c11\u6570\u6838\u5fc3\u6280\u672f\uff08\u5982Kubernetes\u3001Serverless\uff09\u4e3b\u5bfc\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u90e8\u7f72\u7b49DevOps\u540e\u671f\u3002\u884c\u4e1a\u5173\u6ce8\u70b9\u968f\u6280\u672f\u4e0e\u9700\u6c42\u53d8\u5316\u800c\u6f14\u8fdb\uff0c\u89c4\u5212\u4e0e\u7f16\u7a0b\u7b49\u65e9\u671f\u9636\u6bb5\u5173\u6ce8\u5ea6\u76f8\u5bf9\u8f83\u4f4e\u3002", "motivation": "\u4e91\u8ba1\u7b97\u3001\u5fae\u670d\u52a1\u548c\u5bb9\u5668\u5316\u7684\u5174\u8d77\u5e26\u6765\u67b6\u6784\u5b9e\u8df5\u591a\u6837\u5316\uff0c\u4e9f\u9700\u7406\u89e3\u4ea7\u4e1a\u6280\u672f\u6f14\u5316\u4e0e\u91c7\u7528\u52a8\u56e0\uff0c\u6d1e\u5bdf\u5f53\u524d\u8f6f\u4ef6\u67b6\u6784\u5b9e\u8df5\u7684\u6f14\u53d8\u8d8b\u52bf\u3002", "method": "\u672c\u7814\u7a76\u901a\u8fc7\u5206\u6790\u8fc7\u53bb\u4e94\u5e74\u516b\u5927\u9876\u7ea7\u884c\u4e1a\u4f1a\u8bae\u76845677\u4e2a\u62a5\u544a\uff0c\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\u548c\u4e13\u5bb6\u6821\u9a8c\uff0c\u62bd\u53d6\u6d89\u53ca\u7684\u8f6f\u4ef6\u67b6\u6784\u6280\u672f\u3001\u5e94\u7528\u76ee\u7684\u53ca\u4f7f\u7528\u4e0a\u4e0b\u6587\uff0c\u5e76\u63a2\u7d22\u5404\u6280\u672f\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u5b83\u4eec\u5728DevOps\u4e0e\u90e8\u7f72\u6d41\u6c34\u7ebf\u4e2d\u7684\u4f4d\u7f6e\u3002", "result": "\u5728450\u79cd\u68c0\u6d4b\u5230\u7684\u6280\u672f\u4e2d\uff0cKubernetes\u3001Cloud Native\u3001Serverless\u548c\u5bb9\u5668\u7c7b\u6280\u672f\u6700\u4e3a\u6838\u5fc3\u4e14\u9891\u7e41\u3002\u4e1a\u754c\u5b9e\u8df5\u4e3b\u8981\u56f4\u7ed5\u90e8\u7f72\u3001\u901a\u4fe1\u3001AI\u548c\u53ef\u89c2\u6d4b\u6027\u5c55\u5f00\uff0c\u53ef\u5f52\u4e3a\u81ea\u52a8\u5316\u3001\u534f\u8c03\u3001\u4e91\u7aefAI\u3001\u76d1\u6d4b\u3001\u4e91-\u8fb9\u7f18\u4e94\u5927\u6280\u672f\u793e\u533a\u3002\u591a\u6570\u6280\u672f\u8de8\u591a\u4e2aDevOps\u9636\u6bb5\uff0c\u652f\u6301\u6df7\u5408\u90e8\u7f72\u3002\u5c11\u6570\u6838\u5fc3\u6280\u672f\u5728\u67b6\u6784\u5b9e\u8df5\u4e2d\u5360\u636e\u4e3b\u5bfc\uff0c\u591a\u9488\u5bf9\u5b9e\u65bd\u540e\u671f\u73af\u8282\u3002", "conclusion": "\u5f53\u524d\u7684\u8f6f\u4ef6\u67b6\u6784\u5b9e\u8df5\u4e2d\uff0cKubernetes\u3001Serverless\u3001Cloud Native\u548c\u5bb9\u5668\u7b49\u6838\u5fc3\u6280\u672f\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u4e1a\u754c\u6280\u672f\u5173\u6ce8\u70b9\u66f4\u504f\u5411\u4e8eDevOps\u5b9e\u65bd\u540e\u671f\u9636\u6bb5\uff0c\u5982\u90e8\u7f72\u3001\u76d1\u63a7\u548c\u81ea\u52a8\u5316\uff0c\u8f83\u5c11\u6d89\u53ca\u8ba1\u5212\u548c\u7f16\u7801\u7b49\u524d\u671f\u73af\u8282\u3002\u6280\u672f\u5b9e\u8df5\u968f\u7740\u884c\u4e1a\u9700\u6c42\u6301\u7eed\u6f14\u5316\u3002"}}
{"id": "2507.15147", "categories": ["cs.LO", "cs.FL", "cs.MA"], "pdf": "https://arxiv.org/pdf/2507.15147", "abs": "https://arxiv.org/abs/2507.15147", "authors": ["Yiqi Zhao", "Xinyi Yu", "Bardh Hoxha", "Georgios Fainekos", "Jyotirmoy V. Deshmukh", "Lars Lindemann"], "title": "STL-GO: Spatio-Temporal Logic with Graph Operators for Distributed Systems with Multiple Network Topologies", "comment": null, "summary": "Multi-agent systems (MASs) consisting of a number of autonomous agents that\ncommunicate, coordinate, and jointly sense the environment to achieve complex\nmissions can be found in a variety of applications such as robotics, smart\ncities, and internet-of-things applications. Modeling and monitoring MAS\nrequirements to guarantee overall mission objectives, safety, and reliability\nis an important problem. Such requirements implicitly require reasoning about\ndiverse sensing and communication modalities between agents, analysis of the\ndependencies between agent tasks, and the spatial or virtual distance between\nagents. To capture such rich MAS requirements, we model agent interactions via\nmultiple directed graphs, and introduce a new logic -- Spatio-Temporal Logic\nwith Graph Operators (STL-GO). The key innovation in STL-GO are graph operators\nthat enable us to reason about the number of agents along either the incoming\nor outgoing edges of the underlying interaction graph that satisfy a given\nproperty of interest; for example, the requirement that an agent should sense\nat least two neighboring agents whose task graphs indicate the ability to\ncollaborate. We then propose novel distributed monitoring conditions for\nindividual agents that use only local information to determine whether or not\nan STL-GO specification is satisfied. We compare the expressivity of STL-GO\nagainst existing spatio-temporal logic formalisms, and demonstrate the utility\nof STL-GO and our distributed monitors in a bike-sharing and a multi-drone case\nstudy.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u65f6\u7a7a\u903b\u8f91\uff08STL-GO\uff09\u53ca\u5176\u5206\u5e03\u5f0f\u76d1\u63a7\u65b9\u6cd5\uff0c\u53ef\u66f4\u51c6\u786e\u5730\u5efa\u6a21\u548c\u9a8c\u8bc1\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u4e2d\u7684\u590d\u6742\u4ea4\u4e92\u9700\u6c42\uff0c\u5728\u5b9e\u7528\u6848\u4f8b\u4e2d\u5c55\u73b0\u4e86\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\u548c\u76d1\u63a7\u6548\u7387\u3002", "motivation": "\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\uff08MAS\uff09\u5728\u8bb8\u591a\u5e94\u7528\u573a\u666f\uff08\u5982\u673a\u5668\u4eba\u3001\u667a\u6167\u57ce\u5e02\u548c\u7269\u8054\u7f51\uff09\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0c\u786e\u4fdd\u8fd9\u4e9b\u7cfb\u7edf\u80fd\u591f\u6ee1\u8db3\u4efb\u52a1\u76ee\u6807\u3001\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u7684\u9700\u6c42\u662f\u4e00\u9879\u6311\u6218\uff0c\u5c24\u5176\u662f\u5728\u6d89\u53ca\u5f02\u6784\u611f\u77e5\u3001\u901a\u4fe1\u548c\u7a7a\u95f4\u5173\u7cfb\u65f6\u3002\u5f53\u524d\u5bf9MAS\u7684\u8981\u6c42\u96be\u4ee5\u901a\u8fc7\u4f20\u7edf\u5efa\u6a21\u5f62\u5f0f\u5f97\u5230\u5145\u5206\u8868\u8fbe\u3002", "method": "\u4f5c\u8005\u91c7\u7528\u591a\u6709\u5411\u56fe\u5efa\u6a21\u667a\u80fd\u4f53\u4e4b\u95f4\u7684\u590d\u6742\u4ea4\u4e92\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u65f6\u7a7a\u903b\u8f91\u7684\u89c4\u8303\u8bed\u8a00\uff1a\u5e26\u6709\u56fe\u64cd\u4f5c\u7b26\u7684\u65f6\u7a7a\u903b\u8f91\uff08STL-GO\uff09\u3002STL-GO\u5f15\u5165\u4e86\u56fe\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u8868\u8fbe\u7279\u5b9a\u5c5e\u6027\u5728\u4ea4\u4e92\u56fe\u7684\u5165\u8fb9\u6216\u51fa\u8fb9\u4e0a\u7684\u4ee3\u7406\u6570\u91cf\uff0c\u8fdb\u800c\u6355\u6349\u66f4\u590d\u6742\u7684\u591a\u667a\u80fd\u4f53\u884c\u4e3a\u3002\u4f5c\u8005\u8fd8\u63d0\u51fa\u4e86\u5206\u5e03\u5f0f\u76d1\u63a7\u6761\u4ef6\uff0c\u4f7f\u5f97\u5355\u4e2a\u667a\u80fd\u4f53\u53ea\u9700\u4f9d\u8d56\u672c\u5730\u4fe1\u606f\u5373\u53ef\u5224\u65adSTL-GO\u89c4\u8303\u662f\u5426\u88ab\u6ee1\u8db3\u3002", "result": "STL-GO\u6bd4\u73b0\u6709\u7684\u65f6\u7a7a\u903b\u8f91\u5de5\u5177\u5177\u6709\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\u3002\u6240\u63d0\u51fa\u7684\u5206\u5e03\u5f0f\u76d1\u63a7\u65b9\u6cd5\u5728\u5355\u8f66\u5171\u4eab\u7cfb\u7edf\u548c\u591a\u65e0\u4eba\u673a\u7cfb\u7edf\u7684\u6848\u4f8b\u4e2d\u5f97\u5230\u4e86\u6709\u6548\u9a8c\u8bc1\uff0c\u5c55\u793a\u4e86\u5176\u5b9e\u7528\u6027\u548c\u6027\u80fd\u3002", "conclusion": "\u901a\u8fc7\u5f15\u5165STL-GO\u548c\u76f8\u5e94\u7684\u5206\u5e03\u5f0f\u76d1\u63a7\u673a\u5236\uff0c\u80fd\u591f\u66f4\u6709\u6548\u548c\u9ad8\u6548\u5730\u5efa\u6a21\u3001\u8868\u8fbe\u548c\u9a8c\u8bc1\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u7684\u590d\u6742\u9700\u6c42\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u3002"}}
{"id": "2507.15315", "categories": ["cs.FL", "F.1.1; F.4.3"], "pdf": "https://arxiv.org/pdf/2507.15315", "abs": "https://arxiv.org/abs/2507.15315", "authors": ["Franti\u0161ek Mr\u00e1z", "Friedrich Otto"], "title": "On Repetitive Finite Automata with Translucent Words", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "We introduce and study the repetitive variants of the deterministic and the\nnondeterministic finite automaton with translucent words (DFAwtw and NFAwtw).\nOn seeing the right sentinel, a repetitive NFAwtw need not halt immediately,\naccepting or rejecting, but it may change into another state and continue with\nits computation. We establish that a repetitive DFAwtw already accepts a\nlanguage that is not even semi-linear, which shows that the property of being\nrepetitive increases the expressive capacity of the DFAwtw and the NFAwtw\nconsiderably.", "AI": {"tldr": "\u901a\u8fc7\u52a0\u5165\u91cd\u590d\u6027\u8ba1\u7b97\uff0c\u6709\u9650\u81ea\u52a8\u673a\u5bf9\u7279\u6b8a\u8f93\u5165\u7684\u8868\u8fbe\u80fd\u529b\u663e\u8457\u589e\u5f3a\uff0c\u80fd\u8bc6\u522b\u66f4\u590d\u6742\u7684\u8bed\u8a00\u3002", "motivation": "\u7814\u7a76\u6709\u9650\u81ea\u52a8\u673a\uff08DFA\u548cNFA\uff09\u5bf9\u4e8e\u201c\u534a\u900f\u660e\u8bcd\u201d\uff08translucent words\uff09\u7684\u63a5\u53d7\u80fd\u529b\uff0c\u5e76\u63a2\u8ba8\u5176\u5141\u8bb8\u91cd\u590d\u8ba1\u7b97\u540e\u7684\u8868\u73b0\u3002", "method": "\u63d0\u51fa\u4e86\u5e26\u6709\u91cd\u590d\u8fd0\u7b97\u80fd\u529b\u7684\u786e\u5b9a\u6027\u548c\u975e\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff08repetitive DFAwtw\u548cNFAwtw\uff09\uff0c\u5e76\u5206\u6790\u5176\u8868\u8fbe\u80fd\u529b\u3002", "result": "\u8bc1\u660erepetitive DFAwtw\u80fd\u591f\u63a5\u53d7\u67d0\u4e9b\u975e\u534a\u7ebf\u6027\u8bed\u8a00\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5176\u8868\u8fbe\u80fd\u529b\u3002", "conclusion": "\u5141\u8bb8\u91cd\u590d\u8ba1\u7b97\u7684\u6709\u9650\u81ea\u52a8\u673a\uff0c\u5728\u5904\u7406\u534a\u900f\u660e\u8bcd\u65f6\uff0c\u6bd4\u4f20\u7edf\u6a21\u578b\u5177\u6709\u66f4\u9ad8\u7684\u8868\u8fbe\u80fd\u529b\u3002"}}
{"id": "2507.14238", "categories": ["cs.CL", "cs.AI", "cs.CY"], "pdf": "https://arxiv.org/pdf/2507.14238", "abs": "https://arxiv.org/abs/2507.14238", "authors": ["Matthew Kearney", "Reuben Binns", "Yarin Gal"], "title": "Language Models Change Facts Based on the Way You Talk", "comment": null, "summary": "Large language models (LLMs) are increasingly being used in user-facing\napplications, from providing medical consultations to job interview advice.\nRecent research suggests that these models are becoming increasingly proficient\nat inferring identity information about the author of a piece of text from\nlinguistic patterns as subtle as the choice of a few words. However, little is\nknown about how LLMs use this information in their decision-making in\nreal-world applications. We perform the first comprehensive analysis of how\nidentity markers present in a user's writing bias LLM responses across five\ndifferent high-stakes LLM applications in the domains of medicine, law,\npolitics, government benefits, and job salaries. We find that LLMs are\nextremely sensitive to markers of identity in user queries and that race,\ngender, and age consistently influence LLM responses in these applications. For\ninstance, when providing medical advice, we find that models apply different\nstandards of care to individuals of different ethnicities for the same\nsymptoms; we find that LLMs are more likely to alter answers to align with a\nconservative (liberal) political worldview when asked factual questions by\nolder (younger) individuals; and that LLMs recommend lower salaries for\nnon-White job applicants and higher salaries for women compared to men. Taken\ntogether, these biases mean that the use of off-the-shelf LLMs for these\napplications may cause harmful differences in medical care, foster wage gaps,\nand create different political factual realities for people of different\nidentities. Beyond providing an analysis, we also provide new tools for\nevaluating how subtle encoding of identity in users' language choices impacts\nmodel decisions. Given the serious implications of these findings, we recommend\nthat similar thorough assessments of LLM use in user-facing applications are\nconducted before future deployment.", "AI": {"tldr": "LLMs\u5728\u533b\u7597\u3001\u6cd5\u5f8b\u7b49\u9886\u57df\u4f1a\u56e0\u7528\u6237\u7684\u65cf\u88d4\u3001\u6027\u522b\u3001\u5e74\u9f84\u663e\u793a\u51fa\u660e\u663e\u504f\u89c1\uff0c\u53ef\u80fd\u9020\u6210\u5b9e\u9645\u4f24\u5bb3\u3002\u5efa\u8bae\u5728\u5e7f\u6cdb\u5e94\u7528\u524d\u5fc5\u987b\u5168\u9762\u8bc4\u4f30\u548c\u6539\u8fdb\u6a21\u578b\uff0c\u4ee5\u9632\u6b62\u6269\u5927\u793e\u4f1a\u4e0d\u516c\u5e73\u3002", "motivation": "\u968f\u7740\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u533b\u7597\u3001\u6cd5\u5f8b\u3001\u653f\u6cbb\u7b49\u7528\u6237\u76f4\u9762\u573a\u5408\uff0c\u5b83\u4eec\u5bf9\u4e8e\u6587\u672c\u4e2d\u9690\u542b\u7684\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f\u5177\u5907\u8d8a\u6765\u8d8a\u5f3a\u7684\u8bc6\u522b\u80fd\u529b\u3002\u7136\u800c\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u4e9b\u4fe1\u606f\u5728LLM\u5b9e\u9645\u51b3\u7b56\u4e2d\u7684\u5b9e\u9645\u5f71\u54cd\u3002", "method": "\u4f5c\u8005\u5bf9\u4e94\u7c7b\u9ad8\u98ce\u9669\u7528\u6237\u5e94\u7528\u9886\u57df\uff08\u533b\u7597\u3001\u6cd5\u5f8b\u3001\u653f\u6cbb\u3001\u653f\u5e9c\u798f\u5229\u3001\u5de5\u4f5c\u85aa\u8d44\uff09\u7684\u771f\u5b9e\u573a\u666f\u8fdb\u884c\u4e86\u7cfb\u7edf\u5206\u6790\uff0c\u7814\u7a76\u4e86\u7528\u6237\u6587\u672c\u4e2d\u8eab\u4efd\u6807\u8bc6\uff08\u5982\u79cd\u65cf\u3001\u6027\u522b\u3001\u5e74\u9f84\uff09\u5bf9LLM\u8f93\u51fa\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u5e76\u5f00\u53d1\u4e86\u65b0\u5de5\u5177\u8bc4\u4f30\u8fd9\u4e9b\u53d8\u91cf\u7684\u4f5c\u7528\u3002", "result": "LLMs\u5bf9\u7528\u6237\u8bed\u53e5\u4e2d\u7684\u8eab\u4efd\u7ebf\u7d22\u6781\u5176\u654f\u611f\uff0c\u4e0d\u540c\u7684\u8eab\u4efd\u7279\u5f81\u4f1a\u5bfc\u81f4\u660e\u663e\u4e0d\u540c\u7684\u6a21\u578b\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u533b\u7597\u5efa\u8bae\u6839\u636e\u7528\u6237\u65cf\u88d4\u53d8\u5316\uff0c\u653f\u6cbb\u95ee\u9898\u4f9d\u636e\u63d0\u95ee\u8005\u5e74\u9f84\u5448\u73b0\u610f\u8bc6\u5f62\u6001\u504f\u5dee\uff0c\u85aa\u8d44\u5efa\u8bae\u5b58\u5728\u79cd\u65cf\u548c\u6027\u522b\u7684\u4e0d\u516c\u5e73\u3002", "conclusion": "\u73b0\u6709\u901a\u7528LLM\u5728\u9ad8\u98ce\u9669\u5e94\u7528\u4e2d\u4f1a\u653e\u5927\u6216\u4ea7\u751f\u9488\u5bf9\u4e0d\u540c\u8eab\u4efd\u7fa4\u4f53\u7684\u4e0d\u516c\u5e73\u504f\u89c1\uff0c\u5bfc\u81f4\u533b\u7597\u3001\u5de5\u8d44\u548c\u653f\u6cbb\u7b49\u9886\u57df\u7684\u73b0\u5b9e\u5dee\u5f02\uff0c\u9700\u5728\u90e8\u7f72\u524d\u505a\u7cfb\u7edf\u6027\u8bc4\u4f30\u548c\u6539\u8fdb\u3002"}}
{"id": "2507.15415", "categories": ["cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2507.15415", "abs": "https://arxiv.org/abs/2507.15415", "authors": ["Florent Ferrari", "Emmanuel Hainry", "Romain P\u00e9choux", "M\u00e1rio Silva"], "title": "Quantum Programming in Polylogarithmic Time", "comment": null, "summary": "Polylogarithmic time delineates a relevant notion of feasibility on several\nclassical computational models such as Boolean circuits or parallel random\naccess machines. As far as the quantum paradigm is concerned, this notion\nyields the complexity class FBQPOLYLOG of functions approximable in\npolylogarithmic time with a quantum random-access Turing machine. We introduce\na quantum programming language with first-order recursive procedures, which\nprovides the first programming-language-based characterization of FBQPOLYLOG.\nEach program computes a function in FBQPOLYLOG (soundness) and, conversely,\neach function of this complexity class is computed by a program (completeness).\nWe also provide a compilation strategy from programs to uniform families of\nquantum circuits of polylogarithmic depth and polynomial size, whose set of\ncomputed functions is known as QNC, and recover the well-known separation\nresult FBQPOLYLOG $\\subsetneq$ QNC.", "AI": {"tldr": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u578b\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\uff0c\u9996\u6b21\u7528\u7a0b\u5e8f\u65b9\u6cd5\u523b\u753b\u4e86\u91cf\u5b50\u591a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7c7bFBQPOLYLOG\uff0c\u5e76\u5efa\u7acb\u4e86\u5176\u4e0eQNC\u91cf\u5b50\u7535\u8def\u590d\u6742\u5ea6\u7c7b\u7684\u8054\u7cfb\u4e0e\u533a\u5206\u3002", "motivation": "\u5728\u7ecf\u5178\u8ba1\u7b97\u6a21\u578b\u4e2d\uff0c\u591a\u5bf9\u6570\u65f6\u95f4\u662f\u8861\u91cf\u53ef\u884c\u6027\u7684\u4e00\u4e2a\u91cd\u8981\u6807\u51c6\uff0c\u5bf9\u4e8e\u91cf\u5b50\u8ba1\u7b97\uff0c\u76ee\u524d\u7f3a\u4e4f\u76f8\u5e94\u57fa\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u590d\u6742\u5ea6\u523b\u753b\u3002\u4f5c\u8005\u5e0c\u671b\u7528\u7f16\u7a0b\u8bed\u8a00\u65b9\u6cd5\u523b\u753b\u91cf\u5b50\u591a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7c7b\uff08FBQPOLYLOG\uff09\uff0c\u5e76\u7406\u89e3\u5176\u4e0e\u77e5\u540d\u91cf\u5b50\u590d\u6742\u5ea6\u7c7b\uff08\u5982QNC\uff09\u7684\u5173\u7cfb\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u652f\u6301\u4e00\u9636\u9012\u5f52\u8fc7\u7a0b\u7684\u91cf\u5b50\u7f16\u7a0b\u8bed\u8a00\uff0c\u5e76\u5229\u7528\u8be5\u8bed\u8a00\u523b\u753b\u4e86FBQPOLYLOG\u590d\u6742\u5ea6\u7c7b\u3002\u901a\u8fc7\u8bc1\u660e\u6bcf\u4e2aFBQPOLYLOG\u4e2d\u7684\u51fd\u6570\u90fd\u53ef\u7531\u6b64\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u8ba1\u7b97\uff0c\u53cd\u4e4b\u4ea6\u7136\uff08\u8bc1\u660e\u5b8c\u5907\u6027\u4e0e\u6b63\u786e\u6027\uff09\u3002\u6b64\u5916\uff0c\u63d0\u51fa\u4e86\u4ece\u8fd9\u79cd\u7a0b\u5e8f\u5230\u591a\u5bf9\u6570\u6df1\u5ea6\u4e14\u591a\u9879\u5f0f\u89c4\u6a21\u7684\u91cf\u5b50\u7535\u8def\u65cf\uff08\u5373QNC\uff09\u4e4b\u95f4\u7684\u7f16\u8bd1\u7b56\u7565\uff0c\u5e76\u5206\u6790\u4e86\u4e24\u7c7b\u590d\u6742\u5ea6\u7684\u5173\u7cfb\u3002", "result": "1. \u6240\u6709FBQPOLYLOG\u590d\u6742\u5ea6\u7684\u51fd\u6570\u90fd\u80fd\u901a\u8fc7\u6240\u63d0\u51fa\u7684\u7f16\u7a0b\u8bed\u8a00\u7a0b\u5e8f\u8ba1\u7b97\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5b9e\u73b0\u590d\u6742\u5ea6\u7c7b\u4e0e\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u7684\u7cbe\u786e\u523b\u753b\u30022. \u5b9e\u73b0\u4e86\u4ece\u7a0b\u5e8f\u5230QNC\u7535\u8def\u65cf\u7684\u7f16\u8bd1\uff0c\u5c06\u8ba1\u7b97\u4efb\u52a1\u6620\u5c04\u5230\u5df2\u77e5\u7684\u91cf\u5b50\u590d\u6742\u5ea6\u7c7b\u30023. \u91cd\u7533\u5e76\u6062\u590d\u4e86FBQPOLYLOG\u4e25\u683c\u5305\u542b\u4e8eQNC\u7684\u5206\u79bb\u7ed3\u679c\u3002", "conclusion": "\u8be5\u8bba\u6587\u9996\u6b21\u7528\u7f16\u7a0b\u8bed\u8a00\u89c6\u89d2\u7cbe\u786e\u5b9a\u4e49\u5e76\u523b\u753b\u4e86\u91cf\u5b50\u591a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7c7bFBQPOLYLOG\uff0c\u5e76\u5728\u7406\u8bba\u4e0a\u5c06\u5176\u4e0e\u91cf\u5b50\u7535\u8def\u590d\u6742\u5ea6\u7c7bQNC\u8fdb\u884c\u4e86\u8054\u7cfb\u548c\u533a\u5206\u3002\u6b64\u7ed3\u679c\u4e3a\u91cf\u5b50\u590d\u6742\u5ea6\u7406\u8bba\u548c\u91cf\u5b50\u7f16\u7a0b\u8bed\u4e49\u5b66\u7684\u8fdb\u4e00\u6b65\u53d1\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002"}}
{"id": "2507.14558", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14558", "abs": "https://arxiv.org/abs/2507.14558", "authors": ["Bin Duan", "Tarek Mahmud", "Meiru Che", "Yan Yan", "Naipeng Dong", "Dan Dongseong Kim", "Guowei Yang"], "title": "Harnessing LLMs for Document-Guided Fuzzing of OpenCV Library", "comment": null, "summary": "The combination of computer vision and artificial intelligence is\nfundamentally transforming a broad spectrum of industries by enabling machines\nto interpret and act upon visual data with high levels of accuracy. As the\nbiggest and by far the most popular open-source computer vision library, OpenCV\nlibrary provides an extensive suite of programming functions supporting\nreal-time computer vision. Bugs in the OpenCV library can affect the downstream\ncomputer vision applications, and it is critical to ensure the reliability of\nthe OpenCV library. This paper introduces VISTAFUZZ, a novel technique for\nharnessing large language models (LLMs) for document-guided fuzzing of the\nOpenCV library. VISTAFUZZ utilizes LLMs to parse API documentation and obtain\nstandardized API information. Based on this standardized information, VISTAFUZZ\nextracts constraints on individual input parameters and dependencies between\nthese. Using these constraints and dependencies, VISTAFUZZ then generates new\ninput values to systematically test each target API. We evaluate the\neffectiveness of VISTAFUZZ in testing 330 APIs in the OpenCV library, and the\nresults show that VISTAFUZZ detected 17 new bugs, where 10 bugs have been\nconfirmed, and 5 of these have been fixed.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u9a71\u52a8\u7684OpenCV API\u6587\u6863\u5f15\u5bfc\u6a21\u7cca\u6d4b\u8bd5\u65b9\u6cd5VISTAFUZZ\uff0c\u5728\u5b9e\u9645\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u4e86\u591a\u4e2a\u5c1a\u672a\u88ab\u63ed\u793a\u7684bug\uff0c\u663e\u793a\u8be5\u65b9\u6cd5\u5bf9\u63d0\u5347\u5f00\u6e90\u89c6\u89c9\u5e93\u8d28\u91cf\u5177\u6709\u5b9e\u9645\u4ef7\u503c\u3002", "motivation": "OpenCV\u4f5c\u4e3a\u6700\u6d41\u884c\u7684\u5f00\u6e90\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93\uff0c\u5176\u53ef\u9760\u6027\u76f4\u63a5\u5f71\u54cd\u4e0b\u6e38\u5e94\u7528\uff0c\u56e0\u6b64\u6025\u9700\u4e00\u79cd\u9ad8\u6548\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u65b9\u6cd5\u6765\u53d1\u73b0\u6f5c\u5728bug\u3002", "method": "\u63d0\u51faVISTAFUZZ\u6846\u67b6\uff0c\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\u89e3\u6790API\u6587\u6863\uff0c\u81ea\u52a8\u83b7\u53d6\u6807\u51c6\u5316API\u4fe1\u606f\uff0c\u518d\u63d0\u53d6\u8f93\u5165\u53c2\u6570\u7ea6\u675f\u548c\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u8f93\u5165\uff0c\u5bf9OpenCV API\u7cfb\u7edf\u6027\u6a21\u7cca\u6d4b\u8bd5\u3002", "result": "VISTAFUZZ\u5bf9OpenCV\u5e93330\u4e2aAPI\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53d1\u73b017\u4e2a\u65b0bug\uff0c\u5176\u4e2d10\u4e2a\u5f97\u5230\u786e\u8ba4\uff0c5\u4e2a\u5df2\u88ab\u4fee\u590d\u3002", "conclusion": "VISTAFUZZ\u80fd\u591f\u6709\u6548\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\u81ea\u52a8\u5316\u6316\u6398\u548c\u68c0\u6d4bOpenCV API\u4e2d\u7684bug\uff0c\u63d0\u9ad8\u4e86\u5e93\u7684\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u3002"}}
{"id": "2507.14239", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.14239", "abs": "https://arxiv.org/abs/2507.14239", "authors": ["Weihua Zheng", "Roy Ka-Wei Lee", "Zhengyuan Liu", "Kui Wu", "AiTi Aw", "Bowei Zou"], "title": "CCL-XCoT: An Efficient Cross-Lingual Knowledge Transfer Method for Mitigating Hallucination Generation", "comment": null, "summary": "Multilingual Large Language Models(MLLMs) demonstrate strong generalization\nacross languages, yet they remain prone to hallucinations, especially in\nlow-resource languages, due to training data imbalances. These hallucinations,\nwhich include inaccurate or fabricated outputs, are particularly problematic in\ndomain-specific generation tasks (Chataigner et al., 2024). To address this\nchallenge, we propose CCL-XCoT(Curriculum-based Contrastive Learning-based\nCross-lingual Chain-of-Thought), a two-stage fine-tuning framework for\nmitigating hallucination in MLLMs. Our approach first enhances cross-lingual\nsemantic alignment through curriculum-based contrastive learning combined with\nnext-token prediction during continued pre-training. Building on this\nfoundation, we then introduce a cross-lingual Chain-of-Thought (XCoT) prompting\nstrategy during instruction fine-tuning, which guides the model to reason in a\nhigh-resource language before generating answers in the target low-resource\nlanguage. Experimental results show that CCL-XCoT reduces hallucination rates\nby up to 62% and substantially improves factual knowledge transfer across\nlanguage pairs, without relying on external retrieval or multi-model ensembles.", "AI": {"tldr": "\u63d0\u51faCCL-XCoT\uff0c\u7ed3\u5408\u8bfe\u7a0b\u5bf9\u6bd4\u5b66\u4e60\u548c\u8de8\u8bed\u8a00Chain-of-Thought\uff0c\u6709\u6548\u7f13\u89e3MLLMs\u5728\u4f4e\u8d44\u6e90\u8bed\u8a00\u4e0a\u7684\u5e7b\u89c9\u73b0\u8c61\uff0c\u5b9e\u9a8c\u6700\u9ad8\u964d\u5e7b\u89c962%\uff0c\u63d0\u5347\u77e5\u8bc6\u8fc1\u79fb\uff0c\u65e0\u9700\u989d\u5916\u8d44\u6e90\u3002", "motivation": "\u591a\u8bed\u79cd\u5927\u8bed\u8a00\u6a21\u578b\uff08MLLMs\uff09\u867d\u7136\u5177\u5907\u5f88\u5f3a\u7684\u8de8\u8bed\u8a00\u6cdb\u5316\u80fd\u529b\uff0c\u4f46\u7531\u4e8e\u8bad\u7ec3\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u5728\u4f4e\u8d44\u6e90\u8bed\u8a00\u4e0a\u5bb9\u6613\u4ea7\u751f\u5e7b\u89c9\uff08\u5373\u8f93\u51fa\u4e0d\u51c6\u786e\u6216\u865a\u6784\u7684\u5185\u5bb9\uff09\uff0c\u5c24\u5176\u5728\u7279\u5b9a\u9886\u57df\u6587\u672c\u751f\u6210\u4efb\u52a1\u4e2d\u8868\u73b0\u7a81\u51fa\u3002\u8be5\u95ee\u9898\u5f71\u54cd\u4e86\u6a21\u578b\u7684\u53ef\u4fe1\u5ea6\u548c\u5b9e\u9645\u5e94\u7528\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aCCL-XCoT\uff08\u57fa\u4e8e\u8bfe\u7a0b\u5b66\u4e60\u7684\u5bf9\u6bd4\u5b66\u4e60+\u8de8\u8bed\u8a00Chain-of-Thought\uff09\u7684\u65b9\u6cd5\uff0c\u5305\u542b\u4e24\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u9636\u6bb5\uff0c\u5229\u7528\u57fa\u4e8e\u8bfe\u7a0b\u7684\u5bf9\u6bd4\u5b66\u4e60\u7ed3\u5408\u4e0b\u4e00\u8bcd\u9884\u6d4b\uff0c\u5f3a\u5316\u6a21\u578b\u5728\u6301\u7eed\u9884\u8bad\u7ec3\u4e2d\u7684\u8de8\u8bed\u8a00\u8bed\u4e49\u5bf9\u9f50\u80fd\u529b\u3002\u7b2c\u4e8c\u9636\u6bb5\uff0c\u5728\u6307\u4ee4\u5fae\u8c03\u65f6\u5f15\u5165\u8de8\u8bed\u8a00Chain-of-Thought\uff08XCoT\uff09\u7b56\u7565\uff0c\u8ba9\u6a21\u578b\u5148\u7528\u9ad8\u8d44\u6e90\u8bed\u8a00\u63a8\u7406\uff0c\u518d\u7528\u76ee\u6807\u4f4e\u8d44\u6e90\u8bed\u8a00\u751f\u6210\u7b54\u6848\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0cCCL-XCoT\u80fd\u4f7f\u5e7b\u89c9\u7387\u6700\u9ad8\u964d\u4f4e62%\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4e0d\u540c\u8bed\u8a00\u5bf9\u4e4b\u95f4\u7684\u4e8b\u5b9e\u77e5\u8bc6\u8fc1\u79fb\u80fd\u529b\uff0c\u65e0\u9700\u5916\u90e8\u68c0\u7d22\u6216\u591a\u6a21\u578b\u96c6\u6210\u3002", "conclusion": "CCL-XCoT\u662f\u4e00\u4e2a\u6709\u6548\u7684\u53cc\u9636\u6bb5\u5fae\u8c03\u6846\u67b6\uff0c\u4e0d\u4ec5\u964d\u4f4e\u4e86\u591a\u8bed\u79cd\u5927\u6a21\u578b\u5728\u4f4e\u8d44\u6e90\u8bed\u8a00\u4e0a\u7684\u5e7b\u89c9\uff0c\u8fd8\u63d0\u5347\u4e86\u77e5\u8bc6\u8fc1\u79fb\u80fd\u529b\uff0c\u5bf9\u591a\u8bed\u79cd\u5e94\u7528\u5177\u6709\u5b9e\u9645\u610f\u4e49\u3002"}}
{"id": "2507.14594", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.14594", "abs": "https://arxiv.org/abs/2507.14594", "authors": ["Weiwei Xu", "Hengzhi Ye", "Kai Gao", "Minghui Zhou"], "title": "A first look at License Variants in the PyPI Ecosystem", "comment": null, "summary": "Open-source licenses establish the legal foundation for software reuse, yet\nlicense variants, including both modified standard licenses and custom-created\nalternatives, introduce significant compliance complexities. Despite their\nprevalence and potential impact, these variants are poorly understood in modern\nsoftware systems, and existing tools do not account for their existence,\nleading to significant challenges in both effectiveness and efficiency of\nlicense analysis. To fill this knowledge gap, we conduct a comprehensive\nempirical study of license variants in the PyPI ecosystem. Our findings show\nthat textual variations in licenses are common, yet only 2% involve substantive\nmodifications. However, these license variants lead to significant compliance\nissues, with 10.7% of their downstream dependencies found to be\nlicense-incompatible.\n  Inspired by our findings, we introduce LV-Parser, a novel approach for\nefficient license variant analysis leveraging diff-based techniques and large\nlanguage models, along with LV-Compat, an automated pipeline for detecting\nlicense incompatibilities in software dependency networks. Our evaluation\ndemonstrates that LV-Parser achieves an accuracy of 0.936 while reducing\ncomputational costs by 30%, and LV-Compat identifies 5.2 times more\nincompatible packages than existing methods with a precision of 0.98.\n  This work not only provides the first empirical study into license variants\nin software packaging ecosystem but also equips developers and organizations\nwith practical tools for navigating the complex landscape of open-source\nlicensing.", "AI": {"tldr": "\u672c\u8bba\u6587\u5728PyPI\u751f\u6001\u4e2d\u7cfb\u7edf\u5206\u6790\u4e86\u5f00\u6e90\u8bb8\u53ef\u8bc1\u53d8\u4f53\uff0c\u6307\u51fa\u5176\u867d\u5927\u591a\u4e3a\u6587\u672c\u5dee\u5f02\uff0c\u4f46\u4f1a\u5e26\u6765\u663e\u8457\u5408\u89c4\u98ce\u9669\u3002\u63d0\u51fa\u7684\u65b0\u5de5\u5177\u63d0\u5347\u4e86\u8bb8\u53ef\u8bc1\u5206\u6790\u7684\u51c6\u786e\u6027\u4e0e\u6548\u7387\uff0c\u4e3a\u5f00\u53d1\u8005\u548c\u7ec4\u7ec7\u5408\u89c4\u63d0\u4f9b\u4e86\u6709\u529b\u652f\u6301\u3002", "motivation": "\u5f00\u6e90\u8bb8\u53ef\u8bc1\u786e\u4fdd\u4e86\u8f6f\u4ef6\u590d\u7528\u7684\u6cd5\u5f8b\u57fa\u7840\uff0c\u4f46\u8bb8\u53ef\u8bc1\u53d8\u4f53\uff08\u5305\u62ec\u6807\u51c6\u8bb8\u53ef\u8bc1\u7684\u4fee\u6539\u7248\u672c\u548c\u81ea\u5b9a\u4e49\u8bb8\u53ef\u8bc1\uff09\u4f1a\u5bfc\u81f4\u5408\u89c4\u6027\u95ee\u9898\u4e14\u73b0\u6709\u5de5\u5177\u96be\u4ee5\u5e94\u5bf9\u3002\u4f5c\u8005\u53d1\u73b0\uff0c\u5bf9\u8fd9\u4e9b\u53d8\u4f53\u7684\u7406\u89e3\u6709\u9650\uff0c\u7f3a\u4e4f\u9488\u5bf9\u6027\u7684\u5206\u6790\u5de5\u5177\uff0c\u5bfc\u81f4\u6709\u6548\u6027\u548c\u6548\u7387\u53d7\u9650\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u7814\u7a76\u7a7a\u767d\uff0c\u4f5c\u8005\u9009\u62e9\u5bf9PyPI\u751f\u6001\u4e0b\u7684\u8bb8\u53ef\u8bc1\u53d8\u4f53\u8fdb\u884c\u5b9e\u8bc1\u7814\u7a76\u3002", "method": "\u4f5c\u8005\u5f00\u5c55\u4e86\u5bf9PyPI\u751f\u6001\u7cfb\u7edf\u4e2d\u8bb8\u53ef\u8bc1\u53d8\u4f53\u7684\u5168\u9762\u5b9e\u8bc1\u5206\u6790\uff0c\u5177\u4f53\u5305\u62ec\u5bf9\u8bb8\u53ef\u8bc1\u6587\u672c\u5dee\u5f02\u7684\u7edf\u8ba1\u4e0e\u5206\u7c7b\uff0c\u5e76\u5206\u6790\u5176\u5728\u4f9d\u8d56\u5173\u7cfb\u4e2d\u7684\u5408\u89c4\u98ce\u9669\u3002\u6b64\u5916\uff0c\u63d0\u51fa\u4e86LV-Parser\u65b9\u6cd5\uff08\u57fa\u4e8ediff\u548c\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u8bb8\u53ef\u8bc1\u53d8\u4f53\u5206\u6790\uff09\u548cLV-Compat\u81ea\u52a8\u5316\u5de5\u5177\uff08\u7528\u4e8e\u68c0\u6d4b\u4f9d\u8d56\u7f51\u7edc\u4e2d\u7684\u8bb8\u53ef\u8bc1\u4e0d\u517c\u5bb9\uff09\u3002\u901a\u8fc7\u5b9e\u9a8c\u8bc4\u4f30\u4e86\u5de5\u5177\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u8bb8\u53ef\u8bc1\u6587\u672c\u53d8\u5316\u5f88\u666e\u904d\uff0c\u4f46\u5176\u4e2d\u53ea\u67092%\u5c5e\u4e8e\u5b9e\u8d28\u6027\u4fee\u6539\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u53d8\u4f53\u4f1a\u5728\u4f9d\u8d56\u94fe\u4e2d\u5f15\u53d1\u5408\u89c4\u95ee\u9898\uff0c\u5bfc\u81f410.7%\u7684\u4e0b\u6e38\u4f9d\u8d56\u5b58\u5728\u8bb8\u53ef\u8bc1\u4e0d\u517c\u5bb9\u3002LV-Parser\u7684\u51c6\u786e\u7387\u8fbe\u52300.936\uff0c\u5e76\u51cf\u5c11\u4e8630%\u7684\u8ba1\u7b97\u6210\u672c\uff1bLV-Compat\u76f8\u6bd4\u73b0\u6709\u65b9\u6cd5\u80fd\u53d1\u73b05.2\u500d\u7684\u66f4\u591a\u4e0d\u517c\u5bb9\u5305\uff0c\u7cbe\u5ea6\u9ad8\u8fbe0.98\u3002", "conclusion": "\u672c\u7814\u7a76\u9996\u6b21\u7cfb\u7edf\u6027\u5730\u7814\u7a76\u4e86\u5f00\u6e90\u8f6f\u4ef6\u751f\u6001\u4e2d\u7684\u8bb8\u53ef\u8bc1\u53d8\u4f53\u95ee\u9898\uff0c\u5e76\u5e26\u6765\u4e86\u9ad8\u6548\u7684\u65b0\u578b\u5206\u6790\u5de5\u5177\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u8005\u548c\u7ec4\u7ec7\u66f4\u597d\u5730\u5e94\u5bf9\u5f00\u6e90\u8bb8\u53ef\u7684\u590d\u6742\u5408\u89c4\u6027\u6311\u6218\u3002"}}
{"id": "2507.15420", "categories": ["cs.LO", "E.1; F.4.1; I.2.4; K.5.1"], "pdf": "https://arxiv.org/pdf/2507.15420", "abs": "https://arxiv.org/abs/2507.15420", "authors": ["Robert David", "Albin Ahmeti", "Geni Bushati", "Amar Tauqeer", "Anna Fensel"], "title": "A SHACL-based Data Consistency Solution for Contract Compliance Verification", "comment": "Extended version of the short paper published at OPAL workshop (ESWC\n  2025 Workshops and Tutorials Joint Proceedings). See\n  https://ceur-ws.org/Vol-3977/OPAL2025-1.pdf", "summary": "In recent years, there have been many developments for GDPR-compliant data\naccess and sharing based on consent. For more complex data sharing scenarios,\nwhere consent might not be sufficient, many parties rely on contracts. Before a\ncontract is signed, it must undergo the process of contract negotiation within\nthe contract lifecycle, which consists of negotiating the obligations\nassociated with the contract. Contract compliance verification (CCV) provides a\nmeans to verify whether a contract is GDPR-compliant, i.e., adheres to legal\nobligations and there are no violations. The rise of knowledge graph (KG)\nadoption, enabling semantic interoperability using well-defined semantics,\nallows CCV to be applied on KGs. In the scenario of different participants\nnegotiating obligations, there is a need for data consistency to ensure that\nCCV is done correctly. Recent work introduced the automated contracting tool\n(ACT), a KG-based and ODRL-employing tool for GDPR CCV, which was developed in\nthe Horizon 2020 project smashHit (https://smashhit.eu). Although the tool\nreports violations with respect to obligations, it had limitations in verifying\nand ensuring compliance, as it did not use an interoperable semantic formalism,\nsuch as SHACL, and did not support users in resolving data inconsistencies. In\nthis work, we propose a novel approach to overcome these limitations of ACT. We\nsemi-automatically resolve CCV inconsistencies by providing repair strategies,\nwhich automatically propose (optimal) solutions to the user to re-establish\ndata consistency and thereby support them in managing GDPR-compliant contract\nlifecycle data. We have implemented the approach, integrated it into ACT and\ntested its correctness and performance against basic CCV consistency\nrequirements.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd\u534a\u81ea\u52a8\u5316\u7684GDPR\u5408\u540c\u5408\u89c4\u6027\u9a8c\u8bc1\u4e0e\u6570\u636e\u4fee\u590d\u65b9\u6cd5\uff0c\u6709\u6548\u63d0\u5347\u4e86\u6570\u636e\u4e00\u81f4\u6027\u548c\u81ea\u52a8\u5316\u7ba1\u7406\u80fd\u529b\uff0c\u5e76\u5df2\u96c6\u6210\u5e76\u9a8c\u8bc1\u4e8e\u73b0\u6709ACT\u5de5\u5177\u4e2d\u3002", "motivation": "\u73b0\u6709\u7684\u57fa\u4e8e\u540c\u610f\u7684\u6570\u636e\u8bbf\u95ee\u548c\u5171\u4eab\u65b9\u5f0f\u5728\u590d\u6742\u573a\u666f\u4e0b\u4e0d\u8db3\uff0c\u8bb8\u591a\u7ec4\u7ec7\u4f9d\u8d56\u5408\u540c\u6765\u6267\u884cGDPR\u5408\u89c4\u6027\uff0c\u7136\u800c\u5408\u540c\u5408\u89c4\u6027\u9a8c\u8bc1\u5de5\u5177\u5728\u6570\u636e\u4e00\u81f4\u6027\u548c\u81ea\u52a8\u5316\u5904\u7406\u65b9\u9762\u5b58\u5728\u5c40\u9650\u3002", "method": "\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u534a\u81ea\u52a8\u65b9\u5f0f\u63d0\u4f9b\u4fee\u590d\u7b56\u7565\uff0c\u81ea\u52a8\u5411\u7528\u6237\u5efa\u8bae\u6700\u4f18\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ece\u800c\u6062\u590d\u6570\u636e\u4e00\u81f4\u6027\u3002\u8be5\u65b9\u6cd5\u5df2\u96c6\u6210\u5230ACT\u5de5\u5177\u4e2d\uff0c\u5e76\u7528\u6765\u6d4b\u8bd5\u5176\u5728CCV\u4e00\u81f4\u6027\u8981\u6c42\u4e0b\u7684\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002", "result": "\u65b0\u65b9\u6cd5\u80fd\u591f\u534a\u81ea\u52a8\u4fee\u590dCCV\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u4e3a\u7ba1\u7406GDPR\u5408\u89c4\u5408\u540c\u6570\u636e\u751f\u547d\u5468\u671f\u63d0\u4f9b\u4e86\u6570\u636e\u4e00\u81f4\u6027\u652f\u6301\uff0c\u5e76\u5728ACT\u5de5\u5177\u4e2d\u901a\u8fc7\u4e86\u57fa\u672c\u7684\u6b63\u786e\u6027\u548c\u6027\u80fd\u6d4b\u8bd5\u3002", "conclusion": "\u672c\u7814\u7a76\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd\u96c6\u6210\u6570\u636e\u4fee\u590d\u7b56\u7565\u7684\u5408\u540c\u5408\u89c4\u6027\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u6709\u6548\u6539\u8fdb\u4e86\u73b0\u6709\u5de5\u5177\u7684\u5c40\u9650\uff0c\u63d0\u5347\u4e86GDPR\u5408\u89c4\u5408\u540c\u6570\u636e\u7684\u4e00\u81f4\u6027\u4e0e\u7ba1\u7406\u6548\u7387\u3002"}}
{"id": "2507.15317", "categories": ["cs.FL", "F.1.1;F.1.2;F.4.2;F.4.3"], "pdf": "https://arxiv.org/pdf/2507.15317", "abs": "https://arxiv.org/abs/2507.15317", "authors": ["Benedek Nagy", "Walaa Yasin"], "title": "On some Classes of Reversible 2-head Automata", "comment": "In Proceedings NCMA 2025, arXiv:2507.14082", "summary": "Deterministic 2-head finite automata which are machines that process an input\nword from both ends are analyzed for their ability to perform reversible\ncomputations. This implies that the automata are backward deterministic,\nenabling unique forward and backward computation. We explore the computational\npower of such automata, discovering that, while some regular languages cannot\nbe accepted by these machines, they are capable of accepting some\ncharacteristic linear languages, e.g., the language of palindromes.\nAdditionally, we prove that restricted variants, i.e., both 1-limited\nreversible 2-head finite automata and complete reversible 2-head finite\nautomata are less powerful and they form a proper hierarchy. In the former, in\neach computation step exactly one input letter is being processed, i.e., only\none of the heads can read a letter. These automata are also characterized by\nputting their states to classes based on the head(s) used to reach and to leave\nthe state. In the complete reversible 2-head finite automata, it is required\nthat any input can be fully read by the automaton. The accepted families are\nalso compared to the classes generated by left deterministic linear grammars.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u53ef\u9006\u7684\u53cc\u8bfb\u5934\u6709\u9650\u81ea\u52a8\u673a\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u8bc1\u660e\u5176\u5bf9\u90e8\u5206\u7ebf\u6027\u8bed\u8a00\uff08\u5982\u56de\u6587\uff09\u6709\u8bc6\u522b\u529b\uff0c\u4f46\u4e0d\u80fd\u8bc6\u522b\u6240\u6709\u6b63\u5219\u8bed\u8a00\u3002\u8fdb\u4e00\u6b65\uff0c\u6bd4\u8f83\u4e86\u5176\u53d7\u9650\u53d8\u4f53\u7684\u80fd\u529b\uff0c\u5e76\u8bc1\u660e\u4e86\u5b58\u5728\u4e25\u683c\u7684\u80fd\u529b\u5c42\u7ea7\u3002", "motivation": "\u73b0\u6709\u7684\u6709\u9650\u81ea\u52a8\u673a\u6a21\u578b\u5728\u5224\u5b9a\u67d0\u4e9b\u7c7b\u578b\u8bed\u8a00\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u6b63\u5411\u8ba1\u7b97\u548c\u53cd\u5411\u8ba1\u7b97\u4e0d\u662f\u53cc\u5411\u552f\u4e00\u7684\u5c40\u9650\u6027\u3002\u8be5\u6587\u5e0c\u671b\u63a2\u7d22\u4e00\u79cd\u80fd\u5b9e\u73b0\u53ef\u9006\u8ba1\u7b97\u7684\u6a21\u578b\uff0c\u5373\u5728\u4efb\u610f\u8ba1\u7b97\u8def\u5f84\u4e0a\uff0c\u65e2\u80fd\u552f\u4e00\u5730\u6b63\u5411\u8ba1\u7b97\uff0c\u4e5f\u80fd\u552f\u4e00\u5730\u9006\u5411\u8fd8\u539f\u3002\u5177\u4f53\u5173\u6ce8\u4f7f\u7528\u4e24\u4e2a\u8bfb\u5934\u3001\u80fd\u4ece\u8f93\u5165\u4e24\u7aef\u5904\u7406\u4fe1\u606f\u7684\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\u7684\u53ef\u9006\u6027\u4e0e\u8bc6\u522b\u80fd\u529b\u3002", "method": "\u4e3b\u8981\u5206\u6790\u4e86\u786e\u5b9a\u6027\u53cc\u8bfb\u5934\u6709\u9650\u81ea\u52a8\u673a\uff08\u53ef\u4ece\u8f93\u5165\u4e24\u7aef\u64cd\u4f5c\uff09\u7684\u53ef\u9006\u8ba1\u7b97\u80fd\u529b\u3002\u91cd\u70b9\u8003\u5bdf\u4e86\u5176\u5bf9\u67d0\u4e9b\u6b63\u5219\u8bed\u8a00\u548c\u7ebf\u6027\u8bed\u8a00\u7684\u8bc6\u522b\u80fd\u529b\uff0c\u5e76\u8bc1\u660e\u4e86\u4e0d\u540c\u53d7\u9650\u53d8\u4f53\uff08\u59821-\u9650\u5236\u53ef\u9006\u53cc\u8bfb\u5934\u81ea\u52a8\u673a\u3001\u5b8c\u5168\u53ef\u9006\u53cc\u8bfb\u5934\u81ea\u52a8\u673a\uff09\u4e4b\u95f4\u7684\u8868\u8fbe\u80fd\u529b\u4e25\u683c\u5206\u5c42\u3002\u8fd8\u901a\u8fc7\u5c06\u8fd9\u4e9b\u81ea\u52a8\u673a\u8bc6\u522b\u7684\u8bed\u8a00\u4e0e\u5de6\u786e\u5b9a\u7ebf\u6027\u6587\u6cd5\u751f\u6210\u7684\u8bed\u8a00\u5bb6\u65cf\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fdb\u4e00\u6b65\u523b\u753b\u5176\u80fd\u529b\u3002", "result": "\u53d1\u73b0\u6709\u4e9b\u6b63\u5219\u8bed\u8a00\u65e0\u6cd5\u88ab\u8fd9\u4e9b\u81ea\u52a8\u673a\u8bc6\u522b\uff0c\u4f46\u67d0\u4e9b\u5178\u578b\u7684\u7ebf\u6027\u8bed\u8a00\uff08\u5982\u56de\u6587\u8bed\u8a00\uff09\u53ef\u4ee5\u88ab\u8bc6\u522b\u3002\u6b64\u5916\uff0c\u8bc1\u660e\u4e86\u4e24\u79cd\u53d7\u9650\u53d8\u4f53\u7684\u8bc6\u522b\u80fd\u529b\u5747\u4f4e\u4e8e\u4e00\u822c\u53ef\u9006\u53cc\u8bfb\u5934\u6709\u9650\u81ea\u52a8\u673a\uff0c\u5e76\u4e14\u4e09\u8005\u4e4b\u95f4\u5177\u6709\u4e25\u683c\u7684\u80fd\u529b\u5c42\u7ea7\u5173\u7cfb\u3002\u540c\u65f6\uff0c\u6bd4\u8f83\u4e86\u8fd9\u4e9b\u81ea\u52a8\u673a\u4e0e\u5de6\u786e\u5b9a\u7ebf\u6027\u6587\u6cd5\u751f\u6210\u8bed\u8a00\u7684\u5f02\u540c\u3002", "conclusion": "\uff081\uff09\u4e00\u822c\u6027\u53ef\u9006\u53cc\u8bfb\u5934\u6709\u9650\u81ea\u52a8\u673a\u7684\u8bc6\u522b\u529b\u8d85\u51fa\u4f20\u7edf\u81ea\u52a8\u673a\uff0c\u4f46\u4ecd\u6709\u5c40\u9650\uff0c\u4e0d\u53ca\u6240\u6709\u6b63\u5219\u8bed\u8a00\uff1b\uff082\uff091-\u9650\u5236\u4e0e\u5b8c\u5168\u53ef\u9006\u6a21\u578b\u8bc6\u522b\u80fd\u529b\u66f4\u5f31\u4e14\u6709\u4e25\u683c\u5c42\u7ea7\uff1b\uff083\uff09\u4e3a\u53ef\u9006\u8ba1\u7b97\u548c\u6709\u9650\u81ea\u52a8\u673a\u7406\u8bba\u63d0\u4f9b\u4e86\u4e30\u5bcc\u5206\u5c42\u4e0e\u7ed3\u6784\u5316\u7406\u89e3\u3002"}}
