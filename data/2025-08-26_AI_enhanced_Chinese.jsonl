{"id": "2508.16671", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.16671", "abs": "https://arxiv.org/abs/2508.16671", "authors": ["Mingyang Zhou", "Quanming Yao", "Lun Du", "Lanning Wei", "Da Zheng"], "title": "Reflective Paper-to-Code Reproduction Enabled by Fine-Grained Verification", "comment": null, "summary": "Reproducing machine learning papers is essential for scientific progress but\nremains challenging for both humans and automated agents. Existing agent-based\nmethods often struggle to fully and accurately reproduce implementation details\nsuch as mathematical formulas and algorithmic logic. Previous studies show that\nreflection with explicit feedback improves agent performance. However, current\npaper reproduction methods fail to effectively adopt this strategy. This gap\nmainly arises from the diverse paper patterns, complex method modules, and\nvaried configurations encountered in research papers. Motivated by how humans\nuse systematic checklists to efficiently debug complex code, we propose\n\\textbf{RePro}, a \\textbf{Re}flective Paper-to-Code \\textbf{Repro}duction\nframework that automatically extracts a paper's fingerprint, referring to a\ncomprehensive set of accurate and atomic criteria serving as high-quality\nsupervisory signals. The framework first generates code based on the extracted\ninformation, and then leverages the fingerprint within iterative verification\nand refinement loop. This approach systematically detects discrepancies and\nproduces targeted revisions to align generated code with the paper's\nimplementation details. Extensive experiments on the PaperBench Code-Dev\nbenchmark have been conducted, RePro achieves 13.0\\% performance gap over\nbaselines, and it correctly revises complex logical and mathematical criteria\nin reflecting, on which the effectiveness is obvious.", "AI": {"tldr": "\u4f5c\u8005\u63d0\u51fa\u4e86RePro\uff0c\u4e00\u4e2a\u81ea\u52a8\u63d0\u53d6\u8bba\u6587\u5173\u952e\u5b9e\u73b0\u7ec6\u8282\u5e76\u5b9e\u73b0\u53cd\u601d\u4fee\u6b63\u7684\u8bba\u6587\u590d\u73b0\u6846\u67b6\uff0c\u5728\u516c\u5f00\u57fa\u51c6\u4e0a\u8d85\u8d8a\u73b0\u6709\u65b9\u6cd5\uff0c\u80fd\u66f4\u597d\u5bf9\u9f50\u8bba\u6587\u5b9e\u73b0\u7684\u590d\u6742\u7ec6\u8282\uff0c\u5927\u5e45\u63d0\u5347\u590d\u73b0\u6548\u7387\u548c\u51c6\u786e\u6027\u3002", "motivation": "\u73b0\u6709\u7684\u673a\u5668\u5b66\u4e60\u8bba\u6587\u590d\u73b0\u65b9\u6cd5\uff0c\u65e0\u8bba\u4eba\u5de5\u8fd8\u662f\u81ea\u52a8\u4ee3\u7406\uff0c\u90fd\u5f88\u96be\u5b8c\u5168\u3001\u51c6\u786e\u5730\u518d\u73b0\u5b9e\u73b0\u7ec6\u8282\uff08\u5982\u6570\u5b66\u516c\u5f0f\u548c\u7b97\u6cd5\u903b\u8f91\uff09\u3002\u5148\u524d\u7814\u7a76\u53d1\u73b0\uff0c\u901a\u8fc7\u53cd\u601d\u5e76\u7ed3\u5408\u660e\u786e\u53cd\u9988\uff0c\u4ee3\u7406\u7684\u8868\u73b0\u4f1a\u63d0\u5347\uff0c\u4f46\u73b0\u6709\u65b9\u6cd5\u5e76\u672a\u6709\u6548\u91c7\u7528\u8be5\u7b56\u7565\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u8bba\u6587\u7ed3\u6784\u591a\u6837\uff0c\u65b9\u6cd5\u590d\u6742\uff0c\u914d\u7f6e\u5404\u5f02\u3002\u4f5c\u8005\u53d7\u5230\u4eba\u7c7b\u4f7f\u7528\u7cfb\u7edf\u5316\u6e05\u5355\u9ad8\u6548\u8c03\u8bd5\u4ee3\u7801\u7684\u542f\u53d1\uff0c\u63d0\u51fa\u65b0\u65b9\u6cd5\u3002", "method": "\u63d0\u51faRePro\uff0c\u4e00\u4e2a\u53cd\u601d\u5f0f\u8bba\u6587\u5230\u4ee3\u7801\u518d\u73b0\u6846\u67b6\u3002\u9996\u5148\u81ea\u52a8\u63d0\u53d6\u8bba\u6587\u7684\u201c\u6307\u7eb9\u201d\uff08\u51c6\u786e\u4e14\u539f\u5b50\u5316\u7684\u6807\u51c6\uff09\uff0c\u7528\u4f5c\u9ad8\u8d28\u91cf\u76d1\u7763\u4fe1\u53f7\u3002\u6846\u67b6\u5148\u751f\u6210\u4ee3\u7801\uff0c\u518d\u5229\u7528\u6307\u7eb9\u5728\u8fed\u4ee3\u9a8c\u8bc1\u548c\u4fee\u6b63\u5faa\u73af\u4e2d\u7cfb\u7edf\u8bc6\u522b\u4e0e\u539f\u8bba\u6587\u5b9e\u73b0\u7ec6\u8282\u7684\u504f\u5dee\uff0c\u63d0\u51fa\u6709\u9488\u5bf9\u6027\u4fee\u6b63\uff0c\u786e\u4fdd\u590d\u73b0\u7ed3\u679c\u548c\u8bba\u6587\u5b9e\u73b0\u7ec6\u8282\u4e00\u81f4\u3002", "result": "\u5728PaperBench Code-Dev\u57fa\u51c6\u4e0a\u8fdb\u884c\u5927\u91cf\u5b9e\u9a8c\uff0cRePro\u7684\u6027\u80fd\u6bd4\u73b0\u6709\u57fa\u7ebf\u9ad8\u51fa13.0%\uff0c\u5728\u53cd\u601d\u8fc7\u7a0b\u4e2d\u80fd\u591f\u6b63\u786e\u4fee\u6b63\u590d\u6742\u7684\u903b\u8f91\u548c\u6570\u5b66\u6807\u51c6\uff0c\u663e\u793a\u51fa\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "RePro\u901a\u8fc7\u81ea\u52a8\u6307\u7eb9\u63d0\u53d6\u548c\u53cd\u601d\u5f0f\u9a8c\u8bc1\u4fee\u6b63\uff0c\u6709\u6548\u63d0\u5347\u673a\u5668\u5b66\u4e60\u8bba\u6587\u4ee3\u7801\u590d\u73b0\u7684\u51c6\u786e\u6027\uff0c\u5c24\u5176\u5728\u5904\u7406\u590d\u6742\u903b\u8f91\u548c\u6570\u5b66\u5b9e\u73b0\u7ec6\u8282\u65f6\u8868\u73b0\u4f18\u8d8a\u3002"}}
{"id": "2508.16678", "categories": ["cs.SE", "cs.MA"], "pdf": "https://arxiv.org/pdf/2508.16678", "abs": "https://arxiv.org/abs/2508.16678", "authors": ["Konrad Cinkusz", "Jaros\u0142aw A. Chudziak", "Ewa Niewiadomska-Szynkiewicz"], "title": "Cognitive Agents Powered by Large Language Models for Agile Software Project Management", "comment": null, "summary": "This paper investigates the integration of cognitive agents powered by Large\nLanguage Models (LLMs) within the Scaled Agile Framework (SAFe) to reinforce\nsoftware project management. By deploying virtual agents in simulated software\nenvironments, this study explores their potential to fulfill fundamental roles\nin IT project development, thereby optimizing project outcomes through\nintelligent automation. Particular emphasis is placed on the adaptability of\nthese agents to Agile methodologies and their transformative impact on\ndecision-making, problem-solving, and collaboration dynamics. The research\nleverages the CogniSim ecosystem, a platform designed to simulate real-world\nsoftware engineering challenges, such as aligning technical capabilities with\nbusiness objectives, managing interdependencies, and maintaining project\nagility. Through iterative simulations, cognitive agents demonstrate advanced\ncapabilities in task delegation, inter-agent communication, and project\nlifecycle management. By employing natural language processing to facilitate\nmeaningful dialogues, these agents emulate human roles and improve the\nefficiency and precision of Agile practices. Key findings from this\ninvestigation highlight the ability of LLM-powered cognitive agents to deliver\nmeasurable improvements in various metrics, including task completion times,\nquality of deliverables, and communication coherence. These agents exhibit\nscalability and adaptability, ensuring their applicability across diverse and\ncomplex project environments. This study underscores the potential of\nintegrating LLM-powered agents into Agile project management frameworks as a\nmeans of advancing software engineering practices. This integration not only\nrefines the execution of project management tasks but also sets the stage for a\nparadigm shift in how teams collaborate and address emerging challenges.", "AI": {"tldr": "\u672c\u7814\u7a76\u8868\u660e\uff0c\u5c06\u5927\u578b\u8bed\u8a00\u6a21\u578b\u9a71\u52a8\u7684\u8ba4\u77e5\u667a\u80fd\u4f53\u96c6\u6210\u5230\u654f\u6377\u9879\u76ee\u7ba1\u7406\u6846\u67b6\u4e2d\uff0c\u53ef\u63d0\u5347\u9879\u76ee\u6267\u884c\u6548\u7387\u3001\u4ea4\u4ed8\u8d28\u91cf\u548c\u56e2\u961f\u534f\u4f5c\u80fd\u529b\uff0c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u5e26\u6765\u53d8\u9769\u3002", "motivation": "\u5728\u654f\u6377\u5f00\u53d1\u548c\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u65e5\u76ca\u590d\u6742\u7684\u80cc\u666f\u4e0b\uff0c\u56e2\u961f\u96be\u4ee5\u9ad8\u6548\u6c9f\u901a\u3001\u534f\u4f5c\u4e0e\u51b3\u7b56\u3002\u672c\u6587\u65e8\u5728\u63a2\u7d22\u5c06\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u9a71\u52a8\u7684\u8ba4\u77e5\u667a\u80fd\u4f53\u96c6\u6210\u5230Scaled Agile Framework\uff08SAFe\uff09\u4e2d\uff0c\u4ee5\u63d0\u5347\u9879\u76ee\u7ba1\u7406\u6548\u7387\u548c\u9879\u76ee\u6210\u679c\u3002", "method": "\u8be5\u7814\u7a76\u5728CogniSim\u6a21\u62df\u5e73\u53f0\u4e2d\uff0c\u901a\u8fc7\u90e8\u7f72\u865a\u62df\u8ba4\u77e5\u667a\u80fd\u4f53\uff0c\u6a21\u62df\u73b0\u5b9e\u8f6f\u4ef6\u5de5\u7a0b\u573a\u666f\uff0c\u53cd\u590d\u8fdb\u884c\u8fed\u4ee3\u4eff\u771f\u5b9e\u9a8c\uff0c\u5206\u6790\u667a\u80fd\u4f53\u5728\u4efb\u52a1\u5206\u914d\u3001\u6c9f\u901a\u548c\u9879\u76ee\u7ba1\u7406\u8fc7\u7a0b\u4e2d\u8868\u73b0\u3002\u667a\u80fd\u4f53\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u62df\u4eba\u7c7b\u56e2\u961f\u6210\u5458\u89d2\u8272\uff0c\u5b9e\u73b0\u9ad8\u6548\u4ea4\u6d41\u4e0e\u81ea\u52a8\u5316\u51b3\u7b56\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0cLLM\u9a71\u52a8\u7684\u8ba4\u77e5\u667a\u80fd\u4f53\u53ef\u63d0\u5347\u4efb\u52a1\u5b8c\u6210\u901f\u5ea6\u3001\u4ea4\u4ed8\u7269\u8d28\u91cf\u53ca\u6c9f\u901a\u4e00\u81f4\u6027\u3002\u667a\u80fd\u4f53\u5177\u6709\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u548c\u9002\u5e94\u6027\uff0c\u80fd\u591f\u80dc\u4efb\u590d\u6742\u591a\u53d8\u7684\u9879\u76ee\u7ba1\u7406\u73af\u5883\u3002", "conclusion": "LLM\u8ba4\u77e5\u667a\u80fd\u4f53\u96c6\u6210\u5230\u654f\u6377\u9879\u76ee\u7ba1\u7406\uff0c\u53ef\u4f18\u5316\u7ba1\u7406\u6d41\u7a0b\u3001\u63d0\u5347\u5de5\u7a0b\u5b9e\u8df5\uff0c\u5e76\u4fc3\u8fdb\u56e2\u961f\u534f\u4f5c\u548c\u5e94\u5bf9\u65b0\u6311\u6218\uff0c\u5177\u5907\u63a8\u52a8\u8f6f\u4ef6\u5f00\u53d1\u8303\u5f0f\u8f6c\u53d8\u7684\u6f5c\u529b\u3002"}}
{"id": "2508.16684", "categories": ["cs.SE", "cs.HC"], "pdf": "https://arxiv.org/pdf/2508.16684", "abs": "https://arxiv.org/abs/2508.16684", "authors": ["Vikranth Udandarao", "Nipun Misra"], "title": "Democratizing AI Development: Local LLM Deployment for India's Developer Ecosystem in the Era of Tokenized APIs", "comment": "for survey results, check\n  https://docs.google.com/spreadsheets/d/1t0eV9oURaiu2HfARWo6sriBO0eC8bHUyZNN7CgK2NAk/edit?usp=sharing", "summary": "India's developer community faces significant barriers to sustained\nexperimentation and learning with commercial Large Language Model (LLM) APIs,\nprimarily due to economic and infrastructural constraints. This study\nempirically evaluates local LLM deployment using Ollama as an alternative to\ncommercial cloud-based services for developer-focused applications. Through a\nmixed-methods analysis involving 180 Indian developers, students, and AI\nenthusiasts, we find that local deployment enables substantially greater\nhands-on development and experimentation, while reducing costs by 33% compared\nto commercial solutions. Developers using local LLMs completed over twice as\nmany experimental iterations and reported deeper understanding of advanced AI\narchitectures. Our results highlight local deployment as a critical enabler for\ninclusive and accessible AI development, demonstrating how technological\naccessibility can enhance learning outcomes and innovation capacity in\nresource-constrained environments.", "AI": {"tldr": "\u5370\u5ea6\u5f00\u53d1\u8005\u901a\u8fc7\u4f7f\u7528Ollama\u672c\u5730\u90e8\u7f72LLM\uff0c\u4e0d\u4ec5\u8282\u7701\u4e86\u7ea6\u4e09\u5206\u4e4b\u4e00\u6210\u672c\uff0c\u8fd8\u663e\u8457\u63d0\u9ad8\u4e86\u5b9e\u9a8c\u6b21\u6570\u548c\u6df1\u5ea6\u3002\u672c\u5730\u90e8\u7f72\u4e3a\u8d44\u6e90\u6709\u9650\u73af\u5883\u4e0b\u7684AI\u5b66\u4e60\u548c\u521b\u65b0\u63d0\u4f9b\u4e86\u91cd\u8981\u652f\u6301\u3002", "motivation": "\u5370\u5ea6\u5f00\u53d1\u8005\u56e0\u7ecf\u6d4e\u548c\u57fa\u7840\u8bbe\u65bd\u9650\u5236\uff0c\u96be\u4ee5\u6301\u7eed\u5b9e\u9a8c\u548c\u5b66\u4e60\u5546\u7528LLM\u3002\u7814\u7a76\u52a8\u673a\u662f\u5bfb\u6c42\u66f4\u7ecf\u6d4e\u3001\u53ef\u884c\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u63a8\u52a8\u66f4\u591a\u5f00\u53d1\u8005\u53c2\u4e0eAI\u5b9e\u9a8c\u3002", "method": "\u901a\u8fc7\u6df7\u5408\u65b9\u6cd5\u5206\u6790\uff0c\u7814\u7a76\u4e86180\u540d\u5370\u5ea6\u5f00\u53d1\u8005\u3001\u5b66\u751f\u548cAI\u7231\u597d\u8005\u4f7f\u7528Ollama\u8fdb\u884c\u672c\u5730LLM\u90e8\u7f72\u3002\u5bf9\u6bd4\u4e86\u672c\u5730\u4e0e\u5546\u4e1a\u4e91\u670d\u52a1\u7684\u6210\u672c\u548c\u5f00\u53d1\u4f53\u9a8c\u3002", "result": "\u672c\u5730\u90e8\u7f72\u80fd\u5c06\u6210\u672c\u964d\u4f4e\u7ea633%\uff0c\u5b9e\u9a8c\u8fed\u4ee3\u6b21\u6570\u63d0\u5347\u4e00\u500d\u4ee5\u4e0a\uff0c\u53c2\u4e0e\u8005\u5bf9AI\u67b6\u6784\u7684\u7406\u89e3\u4e5f\u66f4\u6df1\u5165\u3002", "conclusion": "\u672c\u7814\u7a76\u53d1\u73b0\u672c\u5730\u90e8\u7f72LLM\u5bf9\u5370\u5ea6\u5f00\u53d1\u8005\u793e\u533a\u6765\u8bf4\u662f\u66f4\u5305\u5bb9\u548c\u53ef\u8bbf\u95ee\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u80fd\u6709\u6548\u63d0\u5347\u5b66\u4e60\u6210\u679c\u548c\u521b\u65b0\u80fd\u529b\u3002"}}
{"id": "2508.16688", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.16688", "abs": "https://arxiv.org/abs/2508.16688", "authors": ["Ankur Tomar", "Hengyue Liang", "Indranil Bhattacharya", "Natalia Larios", "Francesco Carbone"], "title": "Cybernaut: Towards Reliable Web Automation", "comment": null, "summary": "The emergence of AI-driven web automation through Large Language Models\n(LLMs) offers unprecedented opportunities for optimizing digital workflows.\nHowever, deploying such systems within industry's real-world environments\npresents four core challenges: (1) ensuring consistent execution, (2)\naccurately identifying critical HTML elements, (3) meeting human-like accuracy\nin order to automate operations at scale and (4) the lack of comprehensive\nbenchmarking data on internal web applications. Existing solutions are\nprimarily tailored for well-designed, consumer-facing websites (e.g.,\nAmazon.com, Apple.com) and fall short in addressing the complexity of\npoorly-designed internal web interfaces. To address these limitations, we\npresent Cybernaut, a novel framework to ensure high execution consistency in\nweb automation agents designed for robust enterprise use. Our contributions are\nthreefold: (1) a Standard Operating Procedure (SOP) generator that converts\nuser demonstrations into reliable automation instructions for linear browsing\ntasks, (2) a high-precision HTML DOM element recognition system tailored for\nthe challenge of complex web interfaces, and (3) a quantitative metric to\nassess execution consistency. The empirical evaluation on our internal\nbenchmark demonstrates that using our framework enables a 23.2% improvement\n(from 72% to 88.68%) in task execution success rate over the browser_use.\nCybernaut identifies consistent execution patterns with 84.7% accuracy,\nenabling reliable confidence assessment and adaptive guidance during task\nexecution in real-world systems. These results highlight Cybernaut's\neffectiveness in enterprise-scale web automation and lay a foundation for\nfuture advancements in web automation.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9AI\u9a71\u52a8\u7f51\u9875\u81ea\u52a8\u5316\u5728\u5b9e\u9645\u4f01\u4e1a\u573a\u666f\u4e0b\u7684\u56db\u5927\u6311\u6218\uff0c\u63d0\u51fa\u4e86Cybernaut\u6846\u67b6\uff0c\u901a\u8fc7SOP\u751f\u6210\u3001\u9ad8\u7cbe\u5ea6HTML\u5143\u7d20\u8bc6\u522b\u4ee5\u53ca\u4e00\u81f4\u6027\u5ea6\u91cf\uff0c\u7cfb\u7edf\u663e\u8457\u63d0\u5347\u4e86\u4efb\u52a1\u6267\u884c\u6210\u529f\u7387\u548c\u53ef\u9760\u6027\u3002", "motivation": "AI\u9a71\u52a8\u7684\u7f51\u9875\u81ea\u52a8\u5316\u901a\u8fc7\u5927\u8bed\u8a00\u6a21\u578b\u4e3a\u6570\u5b57\u5de5\u4f5c\u6d41\u7a0b\u4f18\u5316\u5e26\u6765\u4e86\u5de8\u5927\u6f5c\u529b\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u4e1a\u73af\u5883\u4e2d\u9762\u4e34\u56db\u5927\u6838\u5fc3\u6311\u6218\uff1a\u6267\u884c\u4e00\u81f4\u6027\u3001HTML\u5143\u7d20\u8bc6\u522b\u3001\u7c7b\u4eba\u51c6\u786e\u7387\u9700\u6c42\u4ee5\u53ca\u7f3a\u4e4f\u5185\u90e8\u7f51\u9875\u57fa\u51c6\u6570\u636e\u3002\u73b0\u6709\u65b9\u6848\u591a\u9488\u5bf9\u7ed3\u6784\u826f\u597d\u7684\u5bf9\u5916\u7f51\u7ad9\uff0c\u4e0d\u9002\u7528\u4e8e\u590d\u6742\u3001\u8bbe\u8ba1\u4e0d\u4f73\u7684\u5185\u90e8\u7f51\u9875\u3002", "method": "\u63d0\u51fa\u4e86Cybernaut\u6846\u67b6\uff0c\u4e3b\u8981\u5305\u62ec\u4e09\u4e2a\u7ec4\u4ef6\uff1a\uff081\uff09\u5c06\u7528\u6237\u6f14\u793a\u8f6c\u6210\u53ef\u9760\u81ea\u52a8\u5316\u64cd\u4f5c\u6d41\u7a0b\u7684SOP\u751f\u6210\u5668\uff1b\uff082\uff09\u9ad8\u7cbe\u5ea6\u3001\u9488\u5bf9\u590d\u6742\u7f51\u9875DOM\u7684HTML\u5143\u7d20\u8bc6\u522b\u7cfb\u7edf\uff1b\uff083\uff09\u5b9a\u91cf\u8bc4\u4f30\u6267\u884c\u4e00\u81f4\u6027\u7684\u6307\u6807\u3002\u5e76\u5728\u81ea\u6709\u57fa\u51c6\u96c6\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u3002", "result": "Cybernaut\u5728\u4efb\u52a1\u6267\u884c\u6210\u529f\u7387\u4e0a\u63d0\u5347\u4e8623.2%\uff08\u4ece72%\u63d0\u5347\u523088.68%\uff09\uff1b\u80fd\u4ee584.7%\u7684\u51c6\u786e\u7387\u8bc6\u522b\u51fa\u4e00\u81f4\u6267\u884c\u6a21\u5f0f\uff0c\u5b9e\u73b0\u66f4\u53ef\u9760\u7684\u7f6e\u4fe1\u8bc4\u4f30\u548c\u81ea\u9002\u5e94\u6307\u5bfc\u3002", "conclusion": "Cybernaut\u6709\u6548\u63d0\u5347\u4e86\u4f01\u4e1a\u7ea7\u7f51\u9875\u81ea\u52a8\u5316\u7684\u53ef\u9760\u6027\u548c\u6267\u884c\u4e00\u81f4\u6027\uff0c\u4e3a\u672a\u6765\u7f51\u9875\u81ea\u52a8\u5316\u7814\u7a76\u6253\u4e0b\u57fa\u7840\u3002"}}
{"id": "2508.17451", "categories": ["cs.FL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2508.17451", "abs": "https://arxiv.org/abs/2508.17451", "authors": ["Davide Ancona", "Angelo Ferrando"], "title": "On The Space Complexity of Partial Derivatives of Regular Expressions with Shuffle", "comment": null, "summary": "Partial derivatives of regular expressions, introduced by Antimirov, define\nan elegant algorithm for generating equivalent non-deterministic finite\nautomata (NFA) with a limited number of states.\n  Here we focus on runtime verification (RV) of simple properties expressible\nwith regular expressions. In this case, words are finite traces of monitorable\nevents forming the language's alphabet, and the generated NFA may have an\nintractable number of states.\n  This typically occurs when sub-traces of mutually independent events are\nallowed to interleave.\n  To address this issue, regular expressions used for RV are extended with the\nshuffle operator to make specifications more compact and easier to read.\n  Exploiting partial derivatives enables a rewriting-based approach to RV,\nwhere only one derivative is stored at each step, avoiding the construction of\nan intractably large automaton.\n  This raises the question of the space complexity of the largest generated\npartial derivative. While the total number of generated partial derivatives is\nknown to be linear in the size of the initial regular expression, no results\ncan be found in the literature regarding the size of the largest partial\nderivative.\n  We study this problem w.r.t. two metrics (height and size of regular\nexpressions), and show that the former increases by at most one, while the\nlatter is quadratic in the size of the regular expression. Surprisingly, these\nresults also hold with shuffle.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u90e8\u5206\u5bfc\u6570\u548cshuffle\u64cd\u4f5c\u7b26\u7684\u8fd0\u884c\u65f6\u9a8c\u8bc1\u65b0\u65b9\u6cd5\u3002\u53ea\u9700\u6bcf\u6b65\u5b58\u50a8\u4e00\u4e2a\u5bfc\u6570\uff0c\u6709\u6548\u63a7\u5236\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u6700\u5927\u90e8\u5206\u5bfc\u6570\u9ad8\u5ea6\u589e\u52a0\u6709\u9650\uff0c\u8868\u8fbe\u5f0f\u5927\u5c0f\u4e3a\u4e8c\u6b21\u7ea7\u522b\uff0c\u5e76\u8bc1\u660e\u5bf9shuffle\u4e5f\u6210\u7acb\u3002\u8be5\u65b9\u6cd5\u6539\u5584\u4e86\u4e8b\u4ef6\u53ef\u7a7f\u63d2\u573a\u666f\u4e0b\u7684\u89c4\u8303\u8868\u8fbe\u548c\u9a8c\u8bc1\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u901a\u8fc7\u90e8\u5206\u5bfc\u6570\u65b9\u6cd5\uff0c\u53ef\u4ee5\u751f\u6210\u7b49\u4ef7\u7684NFA\uff0c\u4f46\u5728\u8fd0\u884c\u65f6\u9a8c\u8bc1\uff08RV\uff09\u4e2d\uff0c\u5f53\u4e8b\u4ef6\u53ef\u4e92\u76f8\u7a7f\u63d2\u65f6\uff0c\u751f\u6210\u7684NFA\u72b6\u6001\u6570\u53ef\u80fd\u4f1a\u53d8\u5f97\u96be\u4ee5\u5904\u7406\u3002\u4e3a\u4e86\u66f4\u9ad8\u6548\u76d1\u63a7\uff0c\u89c4\u8303\u9700\u8981\u66f4\u7d27\u51d1\u6613\u8bfb\u5e76\u80fd\u652f\u6301\u4e8b\u4ef6\u7a7f\u63d2\u3002", "method": "\u4f7f\u7528\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u52a0\u5165shuffle\u64cd\u4f5c\u7b26\uff09\uff0c\u5229\u7528\u90e8\u5206\u5bfc\u6570\u8fdb\u884c\u6539\u5199\u5f0f\u8fd0\u884c\u65f6\u9a8c\u8bc1\u3002\u8be5\u65b9\u6cd5\u6bcf\u6b65\u53ea\u5b58\u50a8\u4e00\u4e2a\u5bfc\u6570\uff0c\u907f\u514d\u6784\u9020\u5de8\u5927\u4e0d\u53ef\u5904\u7406\u7684\u81ea\u52a8\u673a\u3002\u6b64\u5916\uff0c\u7814\u7a76\u4e86\u6700\u5927\u90e8\u5206\u5bfc\u6570\u8868\u8fbe\u5f0f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff08\u9ad8\u5ea6\u548c\u5927\u5c0f\u4e24\u4e2a\u6307\u6807\uff09\u3002", "result": "\u8bc1\u660e\u4e86\u6700\u5927\u90e8\u5206\u5bfc\u6570\u7684\u9ad8\u5ea6\u81f3\u591a\u589e\u52a0\u4e00\uff0c\u8868\u8fbe\u5f0f\u5927\u5c0f\u5219\u4e3a\u539f\u6b63\u5219\u8868\u8fbe\u5f0f\u5927\u5c0f\u7684\u4e8c\u6b21\u51fd\u6570\u3002\u8fd9\u4e00\u7ed3\u8bba\u5728\u5f15\u5165shuffle\u8fd0\u7b97\u7b26\u540e\u4ecd\u7136\u6210\u7acb\u3002", "conclusion": "\u8fd9\u79cd\u57fa\u4e8e\u90e8\u5206\u5bfc\u6570\u7684\u8fd0\u884c\u65f6\u9a8c\u8bc1\u65b9\u6cd5\u80fd\u907f\u514d\u751f\u6210\u4e0d\u53ef\u5904\u7406\u7684\u5de8\u5927\u81ea\u52a8\u673a\uff0c\u901a\u8fc7\u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u754c\u5b9a\uff0c\u4e3a\u5b9e\u9645RV\u63d0\u4f9b\u4e86\u7406\u8bba\u4fdd\u8bc1\u3002\u5f15\u5165shuffle\u6269\u5c55\u8fd0\u7b97\u7b26\u4e5f\u4e0d\u4f1a\u589e\u52a0\u590d\u6742\u6027\u6307\u6807\u3002"}}
{"id": "2508.16782", "categories": ["cs.LO", "cs.SE", "68N17 (Primary) 68N30, 68Q60 (Secondary)", "D.1.6; D.2.3; F.3.1"], "pdf": "https://arxiv.org/pdf/2508.16782", "abs": "https://arxiv.org/abs/2508.16782", "authors": ["W\u0142odzimierz Drabent"], "title": "On systematic construction of correct logic programs", "comment": "21 pages. Accepted for ICLP 2025 (The 41st International Conference\n  on Logic Programming)", "summary": "Partial correctness of imperative or functional programming divides in logic\nprogramming into two notions. Correctness means that all answers of the program\nare compatible with the specification. Completeness means that the program\nproduces all the answers required by the specifications. We also consider\nsemi-completeness -- completeness for those queries for which the program does\nnot diverge. This paper presents an approach to systematically construct\nprovably correct and semi-complete logic programs, for a given specification.\nNormal programs are considered, under Kunen's 3-valued completion semantics (of\nnegation as finite failure) and the well-founded semantics (of negation as\npossibly infinite failure). The approach is declarative, it abstracts from\ndetails of operational semantics, like e.g.\\ the form of the selected literals\n(``procedure calls'') during the computation. The proposed method is simple,\nand can be used (maybe informally) in actual everyday programming.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u7cfb\u7edf\u6027\u6784\u5efa\u6b63\u786e\u53ca\u534a\u5b8c\u5907\u903b\u8f91\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5728\u4e09\u503c\u548cwell-founded\u8bed\u4e49\u4e0b\uff0c\u64cd\u4f5c\u7b80\u5355\u4e14\u9002\u7528\u4e8e\u5b9e\u9645\u5f00\u53d1\u573a\u666f\u3002", "motivation": "\u903b\u8f91\u7a0b\u5e8f\u7684\u90e8\u5206\u6b63\u786e\u6027\uff08correctness\u548ccompleteness\uff09\u662f\u7f16\u7a0b\u7684\u91cd\u8981\u95ee\u9898\uff0c\u73b0\u6709\u65b9\u6cd5\u9762\u4e34\u5982\u4f55\u7cfb\u7edf\u5730\u6784\u5efa\u65e2\u6b63\u786e\u53c8\u5b8c\u5907\u7684\u7a0b\u5e8f\u7684\u6311\u6218\u3002\u4f5c\u8005\u5e0c\u671b\u627e\u5230\u4e00\u79cd\u7b80\u5355\u4e14\u5177\u6709\u5b9e\u7528\u4ef7\u503c\u7684\u65b9\u6cd5\uff0c\u6307\u5bfc\u903b\u8f91\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002", "method": "\u8be5\u6587\u63d0\u51fa\u7cfb\u7edf\u6027\u6784\u5efa\u903b\u8f91\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5728\u7ed9\u5b9a\u89c4\u8303\u4e0b\uff0c\u80fd\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u534a\u5b8c\u5907\u6027\u3002\u7814\u7a76\u5bf9\u8c61\u4e3a\u6b63\u5e38\u903b\u8f91\u7a0b\u5e8f\uff0c\u5e76\u5728Kunen\u7684\u4e09\u503c\u5b8c\u5907\u8bed\u4e49\uff08\u6d88\u6781\u5931\u8d25\uff09\u548cwell-founded\u8bed\u4e49\uff08\u53ef\u80fd\u65e0\u9650\u5931\u8d25\uff09\u4e0b\u8fdb\u884c\u5206\u6790\u3002\u65b9\u6cd5\u504f\u5411\u5ba3\u544a\u5f0f\uff0c\u62bd\u8c61\u6389\u64cd\u4f5c\u8bed\u4e49\u4e2d\u7684\u7ec6\u8282\uff0c\u5982\u9009\u5b9a\u5b57\u9762\u91cf\u7684\u5177\u4f53\u5f62\u5f0f\u3002", "result": "\u5f97\u5230\u4e86\u4e00\u79cd\u7b80\u5355\u4e14\u53ef\u5b9e\u9645\u5e94\u7528\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u903b\u8f91\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u534a\u5b8c\u5907\u6027\uff0c\u6613\u4e8e\u88ab\u5f00\u53d1\u8005\u5728\u65e5\u5e38\u7f16\u7a0b\u4e2d\u4f7f\u7528\u3002\u5176\u7406\u8bba\u57fa\u7840\u6210\u7acb\u4e8e\u4e24\u79cd\u4e3b\u6d41\u903b\u8f91\u8bed\u4e49\u4e0b\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u591f\u6307\u5bfc\u5f00\u53d1\u8005\u7cfb\u7edf\u5316\u5730\u7f16\u5199\u6b63\u786e\u3001\u534a\u5b8c\u5907\u7684\u903b\u8f91\u7a0b\u5e8f\uff0c\u800c\u4e14\u5b9e\u7528\u6027\u5f3a\uff0c\u53ef\u652f\u6301\u5b9e\u9645\u7f16\u7a0b\u9700\u6c42\u3002"}}
{"id": "2508.16746", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.16746", "abs": "https://arxiv.org/abs/2508.16746", "authors": ["Karuna Grewal", "P. Brighten Godfrey", "Justin Hsu"], "title": "SafeTree: Expressive Tree Policies for Microservices", "comment": null, "summary": "A microservice-based application is composed of multiple self-contained\ncomponents called microservices, and controlling inter-service communication is\nimportant for enforcing safety properties. Presently, inter-service\ncommunication is configured using microservice deployment tools. However, such\ntools only support a limited class of single-hop policies, which can be overly\npermissive because they ignore the rich service tree structure of microservice\ncalls. Policies that can express the service tree structure can offer\ndevelopment and security teams more fine-grained control over communication\npatterns.\n  To this end, we design an expressive policy language to specify service tree\nstructures, and we develop a visibly pushdown automata-based dynamic\nenforcement mechanism to enforce service tree policies. Our technique is\nnon-invasive: it does not require any changes to service implementations, and\ndoes not require access to microservice code. To realize our method, we build a\nruntime monitor on top of a service mesh, an emerging network infrastructure\nlayer that can control inter-service communication during deployment. In\nparticular, we employ the programmable network traffic filtering capabilities\nof Istio, a popular service mesh implementation, to implement an online and\ndistributed monitor. Our experiments show that our monitor can enforce rich\nsafety properties while adding minimal latency overhead on the order of\nmilliseconds.", "AI": {"tldr": "\u672c\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65e0\u9700\u6539\u52a8\u670d\u52a1\u4ee3\u7801\u3001\u53ef\u8868\u8fbe\u670d\u52a1\u8c03\u7528\u6811\u7ed3\u6784\u7684\u5b89\u5168\u7b56\u7565\u8bed\u8a00\uff0c\u5e76\u57fa\u4e8e\u670d\u52a1\u7f51\u683c\u548c\u53ef\u89c1\u4e0b\u63a8\u81ea\u52a8\u673a\u5236\uff0c\u8bbe\u8ba1\u4e86\u9ad8\u6548\u7684\u52a8\u6001\u76d1\u63a7\u5668\uff0c\u80fd\u5728\u7ebf\u5f3a\u5236\u590d\u6742\u5b89\u5168\u7b56\u7565\uff0c\u4e14\u6027\u80fd\u635f\u8017\u6781\u5c0f\u3002", "motivation": "\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u591a\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u4e25\u683c\u7ba1\u63a7\uff0c\u4ee5\u786e\u4fdd\u7cfb\u7edf\u5b89\u5168\u3002\u73b0\u6709\u5fae\u670d\u52a1\u90e8\u7f72\u5de5\u5177\u5bf9\u8de8\u670d\u52a1\u901a\u4fe1\u7684\u652f\u6301\u6709\u9650\uff0c\u5f80\u5f80\u4ec5\u80fd\u914d\u7f6e\u7b80\u5355\u7684\u4e00\u8df3\u7b56\u7565\uff0c\u5bfc\u81f4\u901a\u4fe1\u6743\u9650\u8fc7\u4e8e\u5bbd\u6cdb\uff0c\u65e0\u6cd5\u5145\u5206\u5229\u7528\u5fae\u670d\u52a1\u8c03\u7528\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u5b9e\u73b0\u5b89\u5168\u548c\u7ba1\u7406\u4e0a\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236\u3002", "method": "\u8bbe\u8ba1\u4e86\u4e00\u79cd\u8868\u8fbe\u80fd\u529b\u5f3a\u7684\u7b56\u7565\u8bed\u8a00\uff0c\u53ef\u4ee5\u7cbe\u786e\u63cf\u8ff0\u670d\u52a1\u8c03\u7528\u6811\u7ed3\u6784\uff0c\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u53ef\u89c1\u4e0b\u63a8\u81ea\u52a8\u673a\uff08visibly pushdown automata\uff09\u7684\u52a8\u6001\u7b56\u7565\u5f3a\u5236\u673a\u5236\u3002\u6574\u4e2a\u65b9\u6cd5\u4e3a\u65e0\u4fb5\u5165\u5f0f\uff0c\u65e0\u9700\u66f4\u6539\u670d\u52a1\u5b9e\u73b0\u6216\u8bbf\u95ee\u670d\u52a1\u4ee3\u7801\u3002\u5177\u4f53\u5b9e\u73b0\u662f\u5728\u4e3b\u6d41\u670d\u52a1\u7f51\u683cIstio\u4e4b\u4e0a\u642d\u5efa\u8fd0\u884c\u65f6\u76d1\u63a7\u5668\uff0c\u5229\u7528\u5176\u53ef\u7f16\u7a0b\u7f51\u7edc\u6d41\u91cf\u8fc7\u6ee4\u529f\u80fd\u5b9e\u73b0\u5206\u5e03\u5f0f\u5728\u7ebf\u76d1\u63a7\u3002", "result": "\u6784\u5efa\u7684\u76d1\u63a7\u5668\u53ef\u5728\u4e0d\u4fee\u6539\u73b0\u6709\u5fae\u670d\u52a1\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7ebf\u52a8\u6001\u3001\u5206\u5e03\u5f0f\u5730\u5f3a\u5236\u590d\u6742\u7684\u901a\u4fe1\u5b89\u5168\u7b56\u7565\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u51c6\u786e\u5730\u65bd\u52a0\u5b89\u5168\u7b56\u7565\uff0c\u5e76\u53ea\u5f15\u5165\u6beb\u79d2\u7ea7\u7684\u5f88\u5c0f\u5ef6\u8fdf\u3002", "conclusion": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u670d\u52a1\u6811\u7ed3\u6784\u7b56\u7565\u8bed\u8a00\uff0c\u5e76\u7ed3\u5408\u53ef\u89c1\u4e0b\u63a8\u81ea\u52a8\u673a\u548c\u670d\u52a1\u7f51\u683c\u5b9e\u73b0\u4e86\u52a8\u6001\u5b89\u5168\u7b56\u7565\u7684\u5f3a\u5236\u6267\u884c\uff0c\u6709\u6548\u63d0\u5347\u4e86\u5fae\u670d\u52a1\u901a\u4fe1\u7684\u7ba1\u7406\u548c\u5b89\u5168\u6027\u3002"}}
{"id": "2508.16603", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2508.16603", "abs": "https://arxiv.org/abs/2508.16603", "authors": ["Zheng Dong", "Luming Shang", "Gabriela Olinto"], "title": "GreenTEA: Gradient Descent with Topic-modeling and Evolutionary Auto-prompting", "comment": null, "summary": "High-quality prompts are crucial for Large Language Models (LLMs) to achieve\nexceptional performance. However, manually crafting effective prompts is\nlabor-intensive and demands significant domain expertise, limiting its\nscalability. Existing automatic prompt optimization methods either extensively\nexplore new prompt candidates, incurring high computational costs due to\ninefficient searches within a large solution space, or overly exploit feedback\non existing prompts, risking suboptimal optimization because of the complex\nprompt landscape. To address these challenges, we introduce GreenTEA, an\nagentic LLM workflow for automatic prompt optimization that balances candidate\nexploration and knowledge exploitation. It leverages a collaborative team of\nagents to iteratively refine prompts based on feedback from error samples. An\nanalyzing agent identifies common error patterns resulting from the current\nprompt via topic modeling, and a generation agent revises the prompt to\ndirectly address these key deficiencies. This refinement process is guided by a\ngenetic algorithm framework, which simulates natural selection by evolving\ncandidate prompts through operations such as crossover and mutation to\nprogressively optimize model performance. Extensive numerical experiments\nconducted on public benchmark datasets suggest the superior performance of\nGreenTEA against human-engineered prompts and existing state-of-the-arts for\nautomatic prompt optimization, covering logical and quantitative reasoning,\ncommonsense, and ethical decision-making.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aGreenTEA\u7684\u591a\u667a\u80fd\u4f53\u81ea\u52a8\u63d0\u793a\u4f18\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u5206\u6790\u9519\u8bef\u548c\u9057\u4f20\u7b97\u6cd5\u534f\u540c\u4f18\u5316\u63d0\u793a\uff0c\u5728\u591a\u4e2a\u4efb\u52a1\u4e0a\u4f18\u4e8e\u4ee5\u5f80\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e86\u9ad8\u6548\u3001\u81ea\u52a8\u5316\u7684\u63d0\u793a\u4f18\u5316\u3002", "motivation": "\u9ad8\u8d28\u91cf\u7684\u63d0\u793a\uff08prompt\uff09\u5bf9\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u9ad8\u6548\u8868\u73b0\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u624b\u5de5\u8bbe\u8ba1\u6709\u6548\u63d0\u793a\u5341\u5206\u8017\u65f6\u4e14\u4f9d\u8d56\u4e13\u4e1a\u9886\u57df\u77e5\u8bc6\uff0c\u96be\u4ee5\u5927\u89c4\u6a21\u5e94\u7528\u3002\u73b0\u6709\u7684\u81ea\u52a8\u63d0\u793a\u4f18\u5316\u65b9\u6cd5\u8981\u4e48\u6d88\u8017\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\u8fdb\u884c\u4f4e\u6548\u641c\u7d22\uff0c\u8981\u4e48\u8fc7\u5ea6\u4f9d\u8d56\u5df2\u6709\u63d0\u793a\uff0c\u5bfc\u81f4\u4f18\u5316\u6548\u679c\u4e0d\u7406\u60f3\u3002", "method": "\u63d0\u51faGreenTEA\uff1a\u4e00\u79cd\u81ea\u52a8\u63d0\u793a\u4f18\u5316\u7684agent\u5de5\u4f5c\u6d41\u3002\u5176\u6d41\u7a0b\u5305\u62ec\uff1a1\uff09\u7531\u591a\u667a\u80fd\u4f53\u56e2\u961f\u534f\u4f5c\uff0c\u57fa\u4e8e\u6a21\u578b\u9519\u8bef\u6837\u672c\u8fdb\u884c\u63d0\u793a\u4f18\u5316\uff1b2\uff09\u5206\u6790\u4ee3\u7406\u901a\u8fc7\u4e3b\u9898\u5efa\u6a21\u8bc6\u522b\u5f53\u524d\u63d0\u793a\u5bfc\u81f4\u7684\u5e38\u89c1\u9519\u8bef\uff1b3\uff09\u751f\u6210\u4ee3\u7406\u6839\u636e\u8fd9\u4e9b\u9519\u8bef\u5bf9\u63d0\u793a\u8fdb\u884c\u9488\u5bf9\u6027\u4fee\u6539\uff1b4\uff09\u6574\u4e2a\u8fc7\u7a0b\u5d4c\u5165\u5728\u9057\u4f20\u7b97\u6cd5\u6846\u67b6\u4e2d\uff0c\u901a\u8fc7\u4ea4\u53c9\u3001\u53d8\u5f02\u7b49\u64cd\u4f5c\u8fdb\u5316\u63d0\u793a\uff0c\u4e0d\u65ad\u4f18\u5316\u6027\u80fd\u3002", "result": "\u5728\u516c\u5f00\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\u7684\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\uff0cGreenTEA\u5728\u903b\u8f91\u4e0e\u5b9a\u91cf\u63a8\u7406\u3001\u5e38\u8bc6\u4ee5\u53ca\u4f26\u7406\u51b3\u7b56\u7b49\u4efb\u52a1\u4e0a\u4f18\u4e8e\u4eba\u5de5\u8bbe\u8ba1\u548c\u5f53\u524d\u6700\u4f18\u7684\u81ea\u52a8\u63d0\u793a\u4f18\u5316\u65b9\u6cd5\u3002", "conclusion": "GreenTEA\u80fd\u9ad8\u6548\u3001\u81ea\u52a8\u5730\u4f18\u5316\u63d0\u793a\uff0c\u517c\u987e\u63a2\u7d22\u4e0e\u5229\u7528\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u7684\u591a\u9879\u4efb\u52a1\u8868\u73b0\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5177\u6709\u4f18\u8d8a\u6027\u548c\u5e7f\u9614\u524d\u666f\u3002"}}
{"id": "2508.16708", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.16708", "abs": "https://arxiv.org/abs/2508.16708", "authors": ["Shufeng Chen", "Halima El Badaoui", "Mariat James Elizebeth", "Takuya Nakashima", "Siddartha Khastgir", "Paul Jennings"], "title": "A Scalable Framework for the Management of STPA Requirements: a Case Study on eVTOL Operations", "comment": null, "summary": "System-Theoretic Process Analysis (STPA) is a recommended method for\nanalysing complex systems, capable of identifying thousands of safety\nrequirements often missed by traditional techniques such as Failure Mode and\nEffects Analysis (FMEA) and Fault Tree Analysis (FTA). However, the absence of\na structured framework for managing and prioritising these requirements\npresents challenges, particularly in fast-paced development environments. This\npaper introduces a scalable framework for prioritising STPA-derived\nrequirements. The framework integrates outputs from each STPA step and\nincorporates expert evaluations based on four key factors: implementation time,\ncost, requirement type, and regulatory coverage. To reduce subjectivity,\nMonte-Carlo Simulation (MCS) is employed to calculate and stabilise requirement\nrankings. An automation toolchain supports the framework, enabling dynamic\nmapping of prioritised requirements in a scaling matrix. This visualisation\naids decision-making and ensures traceability across development phases. The\nframework is applicable from early conceptualisation to more advanced stages,\nenhancing its utility in iterative system development. The framework was\nvalidated through a real-world case study focused on Electric Vertical Take-off\nand Landing (eVTOL) operations, conducted in collaboration with the UK Civil\nAviation Authority. The findings contributed directly to CAP3141, a Civil\nAviation Publication that identifies systemic operational risks and safety\nmitigations for regulators, operators, and vertiports. The prioritisation\nprocess supported decision-making by helping stakeholders identify and manage\nhigh-impact requirements efficiently. This work contributes a practical\nsolution for managing STPA outputs, bridging gaps in requirement prioritisation\nand supporting safety-critical development in emerging technologies.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u5957\u9762\u5411STPA\u5b89\u5168\u9700\u6c42\u4f18\u5148\u7ea7\u6392\u5e8f\u7684\u81ea\u52a8\u5316\u7ba1\u7406\u6846\u67b6\uff0c\u7efc\u5408\u8003\u8651\u591a\u56e0\u7d20\u5e76\u7528\u8499\u7279\u5361\u7f57\u6a21\u62df\u51cf\u5c11\u4e3b\u89c2\u6027\uff0c\u5728\u771f\u5b9eeVTOL\u6848\u4f8b\u4e2d\u9a8c\u8bc1\u6709\u6548\uff0c\u63d0\u5347\u4e86\u590d\u6742\u7cfb\u7edf\u5b89\u5168\u5f00\u53d1\u7684\u51b3\u7b56\u6548\u7387\u3002", "motivation": "STPA\uff08\u7cfb\u7edf\u7406\u8bba\u8fc7\u7a0b\u5206\u6790\uff09\u5728\u8bc6\u522b\u590d\u6742\u7cfb\u7edf\u5b89\u5168\u9700\u6c42\u65b9\u9762\u4f18\u4e8e\u4f20\u7edf\u65b9\u6cd5\uff0c\u4f46\u4ea7\u751f\u5927\u91cf\u5b89\u5168\u9700\u6c42\u540e\uff0c\u7f3a\u4e4f\u6709\u6548\u7684\u7ba1\u7406\u548c\u4f18\u5148\u7ea7\u6392\u5e8f\u65b9\u6cd5\u3002\u8fd9\u5bf9\u5feb\u901f\u5f00\u53d1\u73af\u5883\u6784\u6210\u6311\u6218\uff0c\u8feb\u5207\u9700\u8981\u4e00\u79cd\u7ed3\u6784\u5316\u6846\u67b6\u6765\u9ad8\u6548\u7ba1\u7406\u4e0e\u4f18\u5148\u5904\u7406\u8fd9\u4e9b\u9700\u6c42\u3002", "method": "\u63d0\u51fa\u4e00\u79cd\u53ef\u6269\u5c55\u7684\u6846\u67b6\u6574\u5408\u4e86STPA\u5404\u9636\u6bb5\u8f93\u51fa\uff0c\u5e76\u57fa\u4e8e\u5b9e\u65bd\u65f6\u95f4\u3001\u6210\u672c\u3001\u9700\u6c42\u7c7b\u578b\u548c\u6cd5\u89c4\u8986\u76d6\u56db\u5927\u56e0\u7d20\u5f15\u5165\u4e13\u5bb6\u8bc4\u4f30\u3002\u4e3a\u51cf\u5c11\u4e3b\u89c2\u6027\uff0c\u91c7\u7528\u8499\u7279\u5361\u7f57\u6a21\u62df\u8ba1\u7b97\u4e0e\u7a33\u5b9a\u6392\u5e8f\uff0c\u5e76\u5f00\u53d1\u81ea\u52a8\u5316\u5de5\u5177\u94fe\u4ee5\u652f\u6301\u52a8\u6001\u6620\u5c04\u53ca\u53ef\u89c6\u5316\u7ba1\u7406\u4f18\u5148\u7ea7\u9700\u6c42\u3002\u8be5\u65b9\u6cd5\u901a\u8fc7\u771f\u5b9e\u6848\u4f8b\u9a8c\u8bc1\u5e76\u5e94\u7528\u4e8e\u7535\u52a8\u5782\u76f4\u8d77\u964d\uff08eVTOL\uff09\u573a\u666f\u3002", "result": "\u5728\u4e0e\u82f1\u56fd\u6c11\u822a\u7ba1\u7406\u5c40\u5408\u4f5c\u7684\u5b9e\u9645eVTOL\u8fd0\u8425\u6848\u4f8b\u4e2d\uff0c\u6846\u67b6\u6709\u6548\u5e2e\u52a9\u51b3\u7b56\u8005\u8bc6\u522b\u5e76\u9ad8\u6548\u7ba1\u7406\u9ad8\u5f71\u54cd\u529b\u7684\u5b89\u5168\u9700\u6c42\u3002\u6210\u679c\u76f4\u63a5\u4fc3\u8fdb\u4e86CAP3141\u7b49\u6c11\u822a\u5b98\u65b9\u53d1\u5e03\u6587\u4ef6\u7684\u98ce\u9669\u8bc6\u522b\u548c\u5b89\u5168\u7f13\u89e3\u5bf9\u7b56\u5236\u5b9a\u3002", "conclusion": "\u6587\u4e2d\u63d0\u51fa\u7684STPA\u9700\u6c42\u4f18\u5148\u7ea7\u6392\u5e8f\u6846\u67b6\u53ca\u5176\u5de5\u5177\u94fe\uff0c\u5b9e\u7528\u6027\u5f3a\uff0c\u53ef\u8d2f\u7a7f\u7cfb\u7edf\u5f00\u53d1\u5404\u9636\u6bb5\uff0c\u663e\u8457\u63d0\u5347\u4e86\u65b0\u5174\u6280\u672f\u9886\u57df\u5b89\u5168\u5f00\u53d1\u8fc7\u7a0b\u7684\u7ba1\u7406\u6548\u7387\u3002\u8be5\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86STPA\u8f93\u51fa\u7684\u9700\u6c42\u7ba1\u7406\u96be\u9898\uff0c\u4e3a\u5b89\u5168\u5173\u952e\u9886\u57df\u63d0\u4f9b\u4e86\u6709\u529b\u652f\u6301\u3002"}}
{"id": "2508.18133", "categories": ["cs.FL", "68Q70, 68Q45, 68P30", "F.4.3; E.4; F.1.1"], "pdf": "https://arxiv.org/pdf/2508.18133", "abs": "https://arxiv.org/abs/2508.18133", "authors": ["Eugene Asarin", "Aldric Degorre", "Catalin Dima", "Bernardo Jacobo Incl\u00e1n"], "title": "Weighing Obese Timed Languages", "comment": "30 pages, 8 figures, accepted to Reachability Problems - RP'2025,\n  short (14 pages) version will be published by Springer Nature in the\n  Proceedings of RP'2025", "summary": "The bandwidth of a timed language characterizes the quantity of information\nper time unit (with a finite observation precision $\\varepsilon$). Obese timed\nautomata have an unbounded frequency of events and produce information at the\nmaximal possible rate. In this article, we compute the bandwidth of any such\nautomaton in the form $\\approx\\alpha/\\varepsilon$. Our approach reduces the\nproblem to computing the best reward-to-time ratio in a weighted timed graph\nconstructed from the given timed automaton, with weights corresponding to the\nentropy of auxiliary finite automata.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u8ba1\u7b97timed automata\u5e26\u5bbd\u7684\u901a\u7528\u65b9\u6cd5\uff0c\u901a\u8fc7\u5efa\u7acb\u52a0\u6743\u65f6\u5e8f\u56fe\u5e76\u7528\u8f85\u52a9\u81ea\u52a8\u673a\u7684\u71b5\u4f5c\u4e3a\u6743\u91cd\uff0c\u5c06\u5e26\u5bbd\u8ba1\u7b97\u95ee\u9898\u8f6c\u5316\u4e3a\u5956\u52b1\u4e0e\u65f6\u95f4\u6bd4\u7387\u7684\u4f18\u5316\u3002\u6700\u7ec8\u7ed9\u51fa\u4e86\u5176\u5e26\u5bbd\u7684\u8fd1\u4f3c\u516c\u5f0f\u03b1/\u03b5\u3002", "motivation": "timed automata\u7684\u4e8b\u4ef6\u9891\u7387\u65e0\u754c\uff0c\u4fe1\u606f\u4ea7\u751f\u901f\u7387\u6700\u5927\u5316\uff0c\u4e9f\u9700\u7cbe\u786e\u8bc4\u4f30\u5176\u5355\u4f4d\u65f6\u95f4\u5185\u80fd\u8868\u8fbe\u7684\u4fe1\u606f\u91cf\uff08\u5e26\u5bbd\uff09\uff0c\u4ee5\u91cf\u5316\u5176\u4fe1\u606f\u80fd\u529b\u3002", "method": "\u5c06timed automata\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u52a0\u6743\u65f6\u5e8f\u56fe\u4e2d\u7684\u6700\u4f73\u5956\u52b1\u4e0e\u65f6\u95f4\u6bd4\uff0c\u5e76\u5229\u7528\u8f85\u52a9\u6709\u9650\u81ea\u52a8\u673a\u7684\u71b5\u6765\u7ed9\u4e88\u6743\u91cd\uff0c\u4ece\u800c\u8fdb\u884c\u8ba1\u7b97\u3002", "result": "\u5f97\u5230timed automata\u7684\u5e26\u5bbd\u7ea6\u4e3a\u03b1/\u03b5\uff0c\u5176\u4e2d\u03b1\u7531\u56fe\u7684\u6700\u4f73\u5956\u52b1\u4e0e\u65f6\u95f4\u6bd4\u7387\u8ba1\u7b97\u3002\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u7528\u8ba1\u7b97\u65b9\u6cd5\u3002", "conclusion": "\u672c\u6587\u5f97\u51fa\u53ef\u901a\u8fc7\u8ba1\u7b97\u52a0\u6743\u65f6\u5e8f\u56fe\u4e2d\u6700\u4f73\u5956\u52b1\u4e0e\u65f6\u95f4\u6bd4\u7387\u6765\u83b7\u53d6timed automata\u7684\u5e26\u5bbd\uff0c\u8be5\u56fe\u7531\u539ftimed automata\u751f\u6210\u5e76\u4ee5\u6709\u9650\u81ea\u52a8\u673a\u71b5\u4e3a\u6743\u91cd\u3002"}}
{"id": "2508.17758", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.17758", "abs": "https://arxiv.org/abs/2508.17758", "authors": ["Han Gao", "Daniil Kozhemiachenko", "Nicola Olivetti"], "title": "Paraconsistent Constructive Modal Logic", "comment": null, "summary": "We present a family of paraconsistent counterparts of the constructive modal\nlogic CK. These logics aim to formalise reasoning about contradictory but\nnon-trivial propositional attitudes like beliefs or obligations. We define\ntheir Kripke-style semantics based on intuitionistic frames with two valuations\nwhich provide independent support for truth and falsity; they are connected by\nstrong negation as defined in Nelson's logic. A family of systems is obtained\ndepending on whether both modal operators are defined using the same or by\ndifferent accessibility relations for their positive and negative support. We\npropose Hilbert-style axiomatisations for all logics determined by this\nsemantic framework. We also propose a~family of modular cut-free sequent\ncalculi that we use to establish decidability.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u57fa\u4e8e\u6a21\u6001\u903b\u8f91CK\u7684\u6096\u5bb9\u63a8\u7406\u65b0\u4f53\u7cfb\uff0c\u4ee5\u53cc\u8d4b\u503cKripke\u8bed\u4e49\u7ed3\u5408Nelson\u5f3a\u5426\u5b9a\u8fdb\u884c\u5f62\u5f0f\u5316\uff0c\u7ed9\u51fa\u5bf9\u5e94\u7684\u516c\u7406\u5316\u548c\u5e8f\u5217\u6f14\u7b97\uff0c\u5e76\u8bc1\u660e\u7cfb\u7edf\u53ef\u5224\u5b9a\u3002", "motivation": "\u4f20\u7edf\u6a21\u6001\u903b\u8f91CK\u4e0d\u8db3\u4ee5\u5904\u7406\u5b58\u5728\u77db\u76fe\u4f46\u4e0d\u81f4\u5e73\u51e1\u5316\u7684\u63a8\u7406\u9700\u6c42\uff0c\u6bd4\u5982\u4fe1\u5ff5\u6216\u4e49\u52a1\u53ef\u80fd\u81ea\u76f8\u77db\u76fe\u4ecd\u503c\u5f97\u63a8\u7406\uff0c\u56e0\u6b64\u9700\u8981\u5f15\u5165\u534f\u8c03\u77db\u76fe\u548c\u6a21\u6001\u903b\u8f91\u7684\u5f62\u5f0f\u7cfb\u7edf\u3002", "method": "\u5b9a\u4e49\u4e86\u57fa\u4e8e\u76f4\u89c9\u4e3b\u4e49Kripke\u6846\u67b6\u3001\u4e24\u79cd\u8d4b\u503c\uff08\u5206\u522b\u652f\u6301\u771f\u548c\u5047\uff09\u3001\u5f3a\u5426\u5b9a\u64cd\u4f5c\u7684\u8bed\u4e49\u4f53\u7cfb\u3002\u63a2\u8ba8\u4e86\u4e0d\u540c\u53ef\u53ca\u5173\u7cfb\u4e0b\u7684\u7cfb\u7edf\uff0c\u5e76\u5206\u522b\u7ed9\u51fa\u4e86Hilbert\u516c\u7406\u5316\u53ca\u5272\u81ea\u7531\u5e8f\u5217\u6f14\u7b97\uff0c\u7528\u4ee5\u8bc1\u660e\u53ef\u5224\u5b9a\u6027\u3002", "result": "\u5f97\u5230\u4e86\u6a21\u6001\u903b\u8f91CK\u5bb6\u65cf\u7684\u6096\u5bb9\u5bf9\u5e94\u903b\u8f91\uff0c\u5efa\u7acb\u4e86Kripke\u8bed\u4e49\u3001\u5bf9\u5e94\u516c\u7406\u7cfb\u7edf\u548c\u53ef\u5224\u5b9a\u7684\u5272\u81ea\u7531\u5e8f\u5217\u6f14\u7b97\u4f53\u7cfb\uff0c\u4e30\u5bcc\u4e86\u5bf9\u975e\u5e73\u51e1\u77db\u76fe\u6001\u5ea6\u7684\u5f62\u5f0f\u5316\u5de5\u5177\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u5bb6\u65cf\u903b\u8f91\u7cfb\u7edf\u901a\u8fc7\u4e24\u79cd\u72ec\u7acb\u652f\u6301\u771f\u548c\u5047\u7684\u8d4b\u503c\uff0c\u80fd\u5f62\u5f0f\u5316\u5904\u7406\u77db\u76fe\u4f46\u4e0d\u5e73\u51e1\u7684\u547d\u9898\u6001\u5ea6\uff08\u5982\u4fe1\u5ff5\u3001\u4e49\u52a1\uff09\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e86\u7cfb\u7edf\u7684\u8bed\u4e49\u3001Hilbert\u98ce\u683c\u516c\u7406\u5316\u53ca\u6a21\u5757\u5316\u5272\u81ea\u7531\u5e8f\u5217\u6f14\u7b97\uff0c\u8bc1\u660e\u4e86\u53ef\u5224\u5b9a\u6027\u3002"}}
{"id": "2508.16848", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.16848", "abs": "https://arxiv.org/abs/2508.16848", "authors": ["David Moon", "Andrew Blinn", "Thomas J. Porter", "Cyrus Omar"], "title": "Syntactic Completions with Material Obligations", "comment": null, "summary": "Code editors provide essential services that help developers understand,\nnavigate, and modify programs. However, these services often fail in the\npresence of syntax errors. Existing syntax error recovery techniques, like\npanic mode and multi-option repairs, are either too coarse, e.g. in deleting\nlarge swathes of code, or lead to a proliferation of possible completions. This\npaper introduces $\\texttt{tylr}$, a parser and editor generator that completes\narbitrarily malformed code by inserting obligations, which generalize holes to\ncover missing operands, operators, mixfix keywords, and sort transitions.\n$\\texttt{tylr}$ is backed by a novel theory of tile-based parsing, which\nextends operator-precedence parsing in two ways. First, traditional token\nprecedence comparisons are replaced by a notion of grammar walks, which form\nthe basis for generating obligations. Second, a distinct \"molding\" system based\non grammar zippers expand grammar expressivity by allowing the system to\ndisambiguate between possible parses and completions based on an obligation\nminimization criterion. In addition to serving as a novel approach to error\ncorrection, $\\texttt{tylr}$'s design enables the development of an editor that\nvisually materializes obligations to the human user, serving as a novel hybrid\nbetween a text editor and a structure editor. We introduce $\\texttt{tylr}$ by\nexample, then formalize its key ideas. Finally, we conduct a human subjects\nstudy to evaluate the extent to which an editor like $\\texttt{tylr}$ that\nmaterializes syntactic obligations might be usable and useful, finding both\npoints of positivity and interesting new avenues for future work.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86tylr\uff0c\u4e00\u4e2a\u80fd\u667a\u80fd\u4fee\u590d\u4efb\u610f\u8bed\u6cd5\u9519\u8bef\u5e76\u5c06\u4fee\u590d\u70b9\u53ef\u89c6\u5316\u7684\u7f16\u8f91\u5668\u751f\u6210\u5668\uff0c\u901a\u8fc7\u65b0\u65b9\u6cd5\u5927\u5e45\u63d0\u5347\u7f16\u8f91\u5668\u5728\u4ee3\u7801\u975e\u7ed3\u6784\u5316\u72b6\u6001\u4e0b\u7684\u8f85\u52a9\u80fd\u529b\uff0c\u5e76\u5f97\u5230\u5b9e\u9a8c\u652f\u6301\u5176\u53ef\u7528\u6027\u548c\u5b9e\u7528\u6027\u3002", "motivation": "\u76ee\u524d\u4ee3\u7801\u7f16\u8f91\u5668\u5728\u9047\u5230\u8bed\u6cd5\u9519\u8bef\u65f6\uff0c\u8f85\u52a9\u529f\u80fd\u5e38\u5e38\u5931\u6548\u3002\u800c\u73b0\u6709\u7684\u8bed\u6cd5\u9519\u8bef\u4fee\u590d\u65b9\u6cd5\u8981\u4e48\u7c97\u66b4\u5730\u5220\u9664\u5927\u91cf\u4ee3\u7801\uff0c\u8981\u4e48\u4ea7\u751f\u8fc7\u591a\u7684\u4fee\u590d\u9009\u9879\uff0c\u96be\u4ee5\u6709\u6548\u63d0\u5347\u5f00\u53d1\u4f53\u9a8c\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u89e3\u6790\u5668\u548c\u7f16\u8f91\u5668\u751f\u6210\u5668\u2014\u2014tylr\uff0c\u901a\u8fc7\u5728\u4ee3\u7801\u4e2d\u63d2\u5165\u4e49\u52a1\uff08obligations\uff09\u6765\u8865\u5168\u4efb\u610f\u683c\u5f0f\u9519\u8bef\u7684\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e49\u52a1\u6cdb\u5316\u4e86\u201c\u6d1e\u201d\uff0c\u53ef\u4ee5\u8986\u76d6\u7f3a\u5931\u7684\u64cd\u4f5c\u6570\u3001\u64cd\u4f5c\u7b26\u3001\u6df7\u5408\u5173\u952e\u5b57\u53ca\u7c7b\u578b\u8f6c\u6362\u3002\u8be5\u65b9\u6cd5\u57fa\u4e8e\u65b0\u9896\u7684\u74f7\u7816\u5f0f\u89e3\u6790\u7406\u8bba\uff0c\u5e76\u5f15\u5165\u201cgrammar walks\u201d\u548c\u201cgrammar zippers\u201d\u4f53\u7cfb\u5b9e\u73b0\u66f4\u7cbe\u7ec6\u7684\u8bed\u6cd5\u89e3\u6790\u548c\u4fee\u590d\u3002", "result": "tylr\u4e0d\u4ec5\u63d0\u5347\u4e86\u9519\u8bef\u4fee\u6b63\u80fd\u529b\uff0c\u8fd8\u652f\u6301\u7f16\u8f91\u5668\u5c06\u8fd9\u4e9b\u4e49\u52a1\u4ee5\u53ef\u89c6\u5316\u5f62\u5f0f\u5448\u73b0\u7ed9\u7528\u6237\uff0c\u5b9e\u73b0\u6587\u672c\u7f16\u8f91\u5668\u4e0e\u7ed3\u6784\u7f16\u8f91\u5668\u7684\u6df7\u5408\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u8fd9\u79cd\u4e49\u52a1\u53ef\u89c6\u5316\u7684\u7f16\u8f91\u5668\u5728\u53ef\u7528\u6027\u548c\u5b9e\u7528\u6027\u65b9\u9762\u90fd\u6709\u79ef\u6781\u7ed3\u679c\uff0c\u5e76\u63d0\u51fa\u4e86\u672a\u6765\u65b0\u7684\u7814\u7a76\u65b9\u5411\u3002", "conclusion": "tylr\u5b9e\u73b0\u4e86\u5bf9\u8bed\u6cd5\u9519\u8bef\u66f4\u7ec6\u81f4\u3001\u66f4\u667a\u80fd\u7684\u4fee\u590d\uff0c\u80fd\u591f\u4ee5\u53ef\u89c6\u5316\u65b9\u5f0f\u589e\u5f3a\u4ee3\u7801\u7f16\u8f91\u4f53\u9a8c\uff0c\u4e3a\u4eba\u673a\u4ea4\u4e92\u548c\u7f16\u7a0b\u5de5\u5177\u9886\u57df\u5e26\u6765\u65b0\u7684\u53ef\u80fd\u6027\u3002"}}
{"id": "2508.16636", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.16636", "abs": "https://arxiv.org/abs/2508.16636", "authors": ["Y. Du", "C. Guo", "W. Wang", "G. Tang"], "title": "Cognitive Decision Routing in Large Language Models: When to Think Fast, When to Think Slow", "comment": "6 pages", "summary": "Large Language Models (LLMs) face a fundamental challenge in deciding when to\nrely on rapid, intuitive responses versus engaging in slower, more deliberate\nreasoning. Inspired by Daniel Kahneman's dual-process theory and his insights\non human cognitive biases, we propose a novel Cognitive Decision Routing (CDR)\nframework that dynamically determines the appropriate reasoning strategy based\non query characteristics. Our approach addresses the current limitations where\nmodels either apply uniform reasoning depth or rely on computationally\nexpensive methods for all queries. We introduce a meta-cognitive layer that\nanalyzes query complexity through multiple dimensions: correlation strength\nbetween given information and required conclusions, domain boundary crossings,\nstakeholder multiplicity, and uncertainty levels. Through extensive experiments\non diverse reasoning tasks, we demonstrate that CDR achieves superior\nperformance while reducing computational costs by 34\\% compared to uniform deep\nreasoning approaches. Our framework shows particular strength in professional\njudgment tasks, achieving 23\\% improvement in consistency and 18\\% better\naccuracy on expert-level evaluations. This work bridges cognitive science\nprinciples with practical AI system design, offering a principled approach to\nadaptive reasoning in LLMs.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u8ba4\u77e5\u51b3\u7b56\u8def\u7531\uff08CDR\uff09\u6846\u67b6\uff0c\u8ba9LLM\u53ef\u6839\u636e\u95ee\u9898\u590d\u6742\u6027\u667a\u80fd\u9009\u62e9\u63a8\u7406\u7b56\u7565\uff0c\u5b9e\u9a8c\u663e\u793a\u4e0d\u4f46\u6027\u80fd\u63d0\u5347\uff0c\u8fd8\u964d\u4f4e\u4e86\u8ba1\u7b97\u6210\u672c\uff0c\u7279\u522b\u9002\u7528\u4e8e\u4e13\u4e1a\u5224\u65ad\u4efb\u52a1\uff0c\u4e3aLLM\u81ea\u9002\u5e94\u63a8\u7406\u5f00\u8f9f\u4e86\u65b0\u65b9\u5411\u3002", "motivation": "\u5f53\u524d\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u9762\u5bf9\u4e0d\u540c\u7c7b\u578b\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u5bf9\u6240\u6709\u67e5\u8be2\u91c7\u7528\u7edf\u4e00\u7684\u63a8\u7406\u6df1\u5ea6\u6216\u9ad8\u6210\u672c\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7f3a\u4e4f\u6839\u636e\u95ee\u9898\u590d\u6742\u6027\u52a8\u6001\u8c03\u6574\u63a8\u7406\u7b56\u7565\u7684\u80fd\u529b\uff0c\u8fd9\u9650\u5236\u4e86\u6a21\u578b\u7684\u9ad8\u6548\u6027\u548c\u9002\u5e94\u6027\u3002\u4f5c\u8005\u53d7\u53cc\u7cfb\u7edf\u601d\u7ef4\u7406\u8bba\u53ca\u4eba\u7c7b\u8ba4\u77e5\u504f\u5dee\u542f\u53d1\uff0c\u65e8\u5728\u63d0\u5347LLM\u7684\u7075\u6d3b\u63a8\u7406\u4e0e\u51b3\u7b56\u80fd\u529b\u3002", "method": "\u63d0\u51fa\u4e86\u8ba4\u77e5\u51b3\u7b56\u8def\u7531\uff08CDR\uff09\u6846\u67b6\uff0c\u5728LLM\u63a8\u7406\u524d\u901a\u8fc7\u5143\u8ba4\u77e5\u5c42\u5206\u6790\u67e5\u8be2\u7684\u590d\u6742\u6027\uff0c\u8bc4\u4f30\u4fe1\u606f\u4e0e\u7ed3\u8bba\u7684\u76f8\u5173\u6027\u3001\u9886\u57df\u8de8\u8d8a\u3001\u53c2\u4e0e\u4e3b\u4f53\u591a\u6837\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u7b49\u591a\u7ef4\u5ea6\u7279\u5f81\uff0c\u52a8\u6001\u51b3\u5b9a\u91c7\u7528\u5feb\u901f\u76f4\u89c9\u8fd8\u662f\u6df1\u5ea6\u6162\u901f\u63a8\u7406\u7b56\u7565\u3002", "result": "\u901a\u8fc7\u591a\u79cd\u63a8\u7406\u4efb\u52a1\u7684\u5b9e\u9a8c\uff0cCDR\u6846\u67b6\u5728\u964d\u4f4e34%\u7684\u8ba1\u7b97\u6210\u672c\u7684\u540c\u65f6\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6a21\u578b\u8868\u73b0\uff0c\u5c24\u5176\u5728\u4e13\u4e1a\u5224\u65ad\u4efb\u52a1\u4e2d\u4e00\u81f4\u6027\u63d0\u9ad823%\uff0c\u4e13\u5bb6\u7ea7\u8bc4\u4ef7\u51c6\u786e\u7387\u63d0\u534718%\u3002", "conclusion": "\u672c\u8bba\u6587\u63d0\u51fa\u7684CDR\u6846\u67b6\u6709\u6548\u7ed3\u5408\u8ba4\u77e5\u79d1\u5b66\u539f\u7406\u4e0eAI\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u5b9e\u73b0\u4e86LLM\u7684\u81ea\u9002\u5e94\u63a8\u7406\uff0c\u4e3a\u5927\u6a21\u578b\u5728\u4e0d\u540c\u590d\u6742\u573a\u666f\u4e0b\u7684\u9ad8\u6548\u51b3\u7b56\u63d0\u4f9b\u4e86\u6709\u529b\u65b9\u6848\u3002"}}
{"id": "2508.16713", "categories": ["cs.SE", "cs.AI", "hep-ex"], "pdf": "https://arxiv.org/pdf/2508.16713", "abs": "https://arxiv.org/abs/2508.16713", "authors": ["Mohammad Atif", "Kriti Chopra", "Ozgur Kilic", "Tianle Wang", "Zhihua Dong", "Charles Leggett", "Meifeng Lin", "Paolo Calafiura", "Salman Habib"], "title": "CelloAI: Leveraging Large Language Models for HPC Software Development in High Energy Physics", "comment": "12 pages, 2 figures", "summary": "Next-generation High Energy Physics (HEP) experiments will generate\nunprecedented data volumes, necessitating High Performance Computing (HPC)\nintegration alongside traditional high-throughput computing. However, HPC\nadoption in HEP is hindered by the challenge of porting legacy software to\nheterogeneous architectures and the sparse documentation of these complex\nscientific codebases. We present CelloAI, a locally hosted coding assistant\nthat leverages Large Language Models (LLMs) with retrieval-augmented generation\n(RAG) to support HEP code documentation and generation. This local deployment\nensures data privacy, eliminates recurring costs and provides access to large\ncontext windows without external dependencies. CelloAI addresses two primary\nuse cases, code documentation and code generation, through specialized\ncomponents. For code documentation, the assistant provides: (a) Doxygen style\ncomment generation for all functions and classes by retrieving relevant\ninformation from RAG sources (papers, posters, presentations), (b) file-level\nsummary generation, and (c) an interactive chatbot for code comprehension\nqueries. For code generation, CelloAI employs syntax-aware chunking strategies\nthat preserve syntactic boundaries during embedding, improving retrieval\naccuracy in large codebases. The system integrates callgraph knowledge to\nmaintain dependency awareness during code modifications and provides\nAI-generated suggestions for performance optimization and accurate refactoring.\nWe evaluate CelloAI using real-world HEP applications from ATLAS, CMS, and DUNE\nexperiments, comparing different embedding models for code retrieval\neffectiveness. Our results demonstrate the AI assistant's capability to enhance\ncode understanding and support reliable code generation while maintaining the\ntransparency and safety requirements essential for scientific computing\nenvironments.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u6b3e\u672c\u5730AI\u7f16\u7801\u52a9\u624bCelloAI\uff0c\u901a\u8fc7\u5927\u6a21\u578b\u4e0e\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u6280\u672f\uff0c\u89e3\u51b3\u9ad8\u80fd\u7269\u7406\u9886\u57df\u8f6f\u4ef6\u6587\u6863\u7a00\u7f3a\u548c\u4ee3\u7801\u7ef4\u62a4\u96be\u9898\uff0c\u5728\u771f\u5b9e\u5b9e\u9a8c\u4e0b\u6709\u6548\u63d0\u5347\u4e86\u4ee3\u7801\u7406\u89e3\u548c\u751f\u6210\u80fd\u529b\uff0c\u4fdd\u969c\u6570\u636e\u5b89\u5168\u548c\u79d1\u5b66\u900f\u660e\u6027\u3002", "motivation": "\u4e0b\u4e00\u4ee3\u9ad8\u80fd\u7269\u7406\uff08HEP\uff09\u5b9e\u9a8c\u5c06\u4ea7\u751f\u524d\u6240\u672a\u6709\u7684\u5927\u91cf\u6570\u636e\uff0c\u5fc5\u987b\u7ed3\u5408\u9ad8\u6027\u80fd\u8ba1\u7b97\uff08HPC\uff09\u3002\u4f46\u4f20\u7edfHEP\u8f6f\u4ef6\u5f88\u96be\u8fc1\u79fb\u5230\u5f02\u6784\u67b6\u6784\uff0c\u5e76\u4e14\u6587\u6863\u6781\u4e3a\u7a00\u7f3a\uff0c\u56e0\u6b64\u9700\u8981\u65b0\u7684\u6280\u672f\u624b\u6bb5\u6765\u8f85\u52a9\u8f6f\u4ef6\u6587\u6863\u548c\u4f18\u5316\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u6b3e\u672c\u5730\u90e8\u7f72\u7684AI\u7f16\u7801\u52a9\u624bCelloAI\uff0c\u7ed3\u5408\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u4e0e\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u3002CelloAI\u4e13\u6ce8\u4e8e\u4ee3\u7801\u6587\u6863\u81ea\u52a8\u751f\u6210\u3001\u4ee3\u7801\u751f\u6210\u4e0e\u4ea4\u4e92\u5f0f\u7406\u89e3\uff0c\u652f\u6301Doxygen\u98ce\u683c\u6ce8\u91ca\u751f\u6210\u3001\u6587\u4ef6\u7ea7\u6458\u8981\u3001\u4ee3\u7801\u67e5\u8be2\u804a\u5929\u673a\u5668\u4eba\uff0c\u91c7\u7528\u8bed\u6cd5\u611f\u77e5\u5206\u5757\u63d0\u5347\u68c0\u7d22\u51c6\u786e\u6027\uff0c\u5e76\u7ed3\u5408\u8c03\u7528\u56fe\u77e5\u8bc6\u4fdd\u969c\u4ee3\u7801\u4f9d\u8d56\u4fee\u6539\u7684\u51c6\u786e\u6027\u3002", "result": "\u5728ATLAS\u3001CMS\u548cDUNE\u7b49HEP\u771f\u5b9e\u5e94\u7528\u4e2d\u8bc4\u4f30\u4e86CelloAI\uff0c\u6bd4\u8f83\u4e86\u4e0d\u540c\u5d4c\u5165\u6a21\u578b\u7684\u68c0\u7d22\u6548\u679c\u3002\u7ed3\u679c\u8868\u660eCelloAI\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7801\u7406\u89e3\u3001\u6587\u6863\u8865\u5168\u548c\u751f\u6210\u80fd\u529b\uff0c\u517c\u987e\u79d1\u5b66\u8ba1\u7b97\u73af\u5883\u7684\u900f\u660e\u6027\u548c\u5b89\u5168\u9700\u6c42\u3002", "conclusion": "CelloAI\u6709\u6548\u5730\u63a8\u52a8\u4e86HEP\u590d\u6742\u9057\u7559\u4ee3\u7801\u7684\u8f6f\u4ef6\u6587\u6863\u81ea\u52a8\u5316\u4e0e\u667a\u80fd\u4ee3\u7801\u751f\u6210\uff0c\u6709\u52a9\u4e8e\u4fc3\u8fdbHPC\u5728HEP\u9886\u57df\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u6ee1\u8db3\u79d1\u7814\u56e2\u961f\u7684\u6570\u636e\u9690\u79c1\u548c\u9ad8\u6027\u80fd\u8981\u6c42\u3002"}}
{"id": "2508.17859", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.17859", "abs": "https://arxiv.org/abs/2508.17859", "authors": ["Christel Baier", "Calvin Chau", "Volodymyr Drobitko", "Simon Jantsch", "Sascha Kl\u00fcppelholz"], "title": "Certificates and Witnesses for Multi-objective \u03c9-regular Queries in Markov Decision Processes", "comment": "This preprint has not undergone peer review (when applicable) or any\n  post-submission improvements or corrections. To appear at SEFM 2025", "summary": "Multi-objective probabilistic model checking is a powerful technique for\nverifying stochastic systems against multiple (potentially conflicting)\nproperties. To enhance the trustworthiness and explainability of model checking\ntools, we present independently checkable certificates and witnesses for\nmulti-objective {\\omega}-regular queries in Markov decision processes. For the\ncertification, we extend and improve existing certificates for the\ndecomposition of maximal end components and reachability properties. We then\nderive mixed-integer linear programs (MILPs) for finding minimal witnessing\nsubsystems. For the special case of Markov chains and LTL properties, we use\nunambiguous B\\\"uchi automata to find witnesses, resulting in an algorithm that\nrequires single-exponential space. Existing approaches based on deterministic\nautomata require doubly-exponential space in the worst case. Finally, we\nconsider the practical computation of our certificates and witnesses and\nprovide an implementation of the developed techniques, along with an\nexperimental evaluation, demonstrating the efficacy of our techniques.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u589e\u5f3a\u6982\u7387\u6a21\u578b\u68c0\u67e5\u53ef\u4fe1\u6027\u7684\u65b0\u6280\u672f\uff0c\u5305\u62ec\u72ec\u7acb\u8bc1\u4e66\u548c\u89c1\u8bc1\uff0c\u5e76\u5728\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u53ca\u94fe\u4e0a\u5b9e\u73b0\u9ad8\u6548\u9a8c\u8bc1\uff0c\u5b9e\u9a8c\u8bc1\u660e\u4e86\u5176\u6709\u6548\u6027\uff0c\u4e14\u663e\u8457\u964d\u4f4e\u4e86\u7a7a\u95f4\u590d\u6742\u5ea6\u3002", "motivation": "\u591a\u76ee\u6807\u6982\u7387\u6a21\u578b\u68c0\u67e5\u80fd\u591f\u9a8c\u8bc1\u968f\u673a\u7cfb\u7edf\u5bf9\u591a\u4e2a\u53ef\u80fd\u51b2\u7a81\u7684\u5c5e\u6027\u7684\u6ee1\u8db3\u60c5\u51b5\u3002\u4e3a\u4e86\u63d0\u9ad8\u6a21\u578b\u68c0\u67e5\u5de5\u5177\u7684\u53ef\u4fe1\u5ea6\u548c\u53ef\u89e3\u91ca\u6027\uff0c\u672c\u6587\u65e8\u5728\u4e3a\u591a\u76ee\u6807\u03c9-\u6b63\u5219\u67e5\u8be2\u63d0\u4f9b\u53ef\u72ec\u7acb\u68c0\u9a8c\u7684\u8bc1\u4e66\u548c\u89c1\u8bc1\u3002", "method": "\u6269\u5c55\u5e76\u6539\u8fdb\u4e86\u73b0\u6709\u7684\u5173\u4e8e\u6700\u5927\u7aef\u5206\u91cf\u5206\u89e3\u548c\u53ef\u8fbe\u6027\u5c5e\u6027\u7684\u8bc1\u4e66\uff1b\u63d0\u51fa\u4e86\u5229\u7528\u6df7\u5408\u6574\u6570\u7ebf\u6027\u89c4\u5212\uff08MILP\uff09\u5bfb\u627e\u6700\u5c0f\u89c1\u8bc1\u5b50\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u9a6c\u5c14\u53ef\u592b\u94fe\u548cLTL\u5c5e\u6027\u7684\u7279\u4f8b\uff0c\u91c7\u7528\u65e0\u4e8c\u4e49\u6027B\u00fcchi\u81ea\u52a8\u673a\u5bfb\u627e\u89c1\u8bc1\uff0c\u4f7f\u7b97\u6cd5\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u5355\u6307\u6570\u7ea7\uff08\u76f8\u6bd4\u57fa\u4e8e\u786e\u5b9a\u6027\u81ea\u52a8\u673a\u7684\u73b0\u6709\u65b9\u6cd5\u7684\u53cc\u6307\u6570\u7a7a\u95f4\u590d\u6742\u5ea6\uff09\u3002\u6700\u540e\uff0c\u8003\u8651\u8bc1\u4e66\u548c\u89c1\u8bc1\u7684\u5b9e\u9645\u8ba1\u7b97\uff0c\u5e76\u5b9e\u73b0\u4e86\u76f8\u5173\u6280\u672f\uff0c\u5e76\u8fdb\u884c\u4e86\u5b9e\u9a8c\u8bc4\u4f30\u3002", "result": "\u5f00\u53d1\u4e86\u4e00\u5957\u53ef\u72ec\u7acb\u68c0\u9a8c\u7684\u8bc1\u4e66\u4e0e\u89c1\u8bc1\uff0c\u663e\u8457\u964d\u4f4e\u4e86\u590d\u6742\u5ea6\uff08\u5c24\u5176\u5728\u9a6c\u5c14\u53ef\u592b\u94fe\u548cLTL\u573a\u666f\u4e0b\uff09\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u6240\u63d0\u51fa\u6280\u672f\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u63d0\u51fa\u7684\u65b0\u65b9\u6cd5\u80fd\u589e\u5f3a\u6982\u7387\u6a21\u578b\u68c0\u67e5\u7684\u53ef\u4fe1\u6027\u548c\u53ef\u89e3\u91ca\u6027\uff0c\u5728\u591a\u76ee\u6807\u03c9-\u6b63\u5219\u67e5\u8be2\u573a\u666f\u4e2d\u8868\u73b0\u4f18\u826f\uff0c\u53ef\u5b9e\u9645\u8ba1\u7b97\u5e76\u6709\u6548\u652f\u6301\u76f8\u5173\u7cfb\u7edf\u7684\u9a8c\u8bc1\u3002"}}
{"id": "2508.17344", "categories": ["cs.SE", "cs.LG", "cs.PF", "cs.PL"], "pdf": "https://arxiv.org/pdf/2508.17344", "abs": "https://arxiv.org/abs/2508.17344", "authors": ["Rajrupa Chattaraj", "Sridhar Chimalakonda", "Vibhu Saujanya Sharma", "Vikrant Kaulgud"], "title": "Who Wins the Race? (R Vs Python) - An Exploratory Study on Energy Consumption of Machine Learning Algorithms", "comment": "18 pages including references, 5 figures", "summary": "The utilization of Machine Learning (ML) in contemporary software systems is\nextensive and continually expanding. However, its usage is energy-intensive,\ncontributing to increased carbon emissions and demanding significant resources.\nWhile numerous studies examine the performance and accuracy of ML, only a\nlimited few focus on its environmental aspects, particularly energy\nconsumption. In addition, despite emerging efforts to compare energy\nconsumption across various programming languages for specific algorithms and\ntasks, there remains a gap specifically in comparing these languages for\nML-based tasks. This paper aims to raise awareness of the energy costs\nassociated with employing different programming languages for ML model training\nand inference. Through this empirical study, we measure and compare the energy\nconsumption along with run-time performance of five regression and five\nclassification tasks implemented in Python and R, the two most popular\nprogramming languages in this context. Our study results reveal a statistically\nsignificant difference in costs between the two languages in 95% of the cases\nexamined. Furthermore, our analysis demonstrates that the choice of programming\nlanguage can influence energy efficiency significantly, up to 99.16% during\nmodel training and up to 99.8% during inferences, for a given ML task.", "AI": {"tldr": "\u672c\u7814\u7a76\u91cf\u5316\u5bf9\u6bd4\u4e86Python\u4e0eR\u5728ML\u4efb\u52a1\u4e2d\u7684\u80fd\u8017\u5dee\u5f02\uff0c\u53d1\u73b0\u8bed\u8a00\u9009\u62e9\u53ef\u5e26\u6765\u6781\u5927\u80fd\u6548\u63d0\u5347\uff0c\u5bf9\u63a8\u52a8\u7eff\u8272\u8ba1\u7b97\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002", "motivation": "\u5f53\u524d\u673a\u5668\u5b66\u4e60\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u4f46\u5176\u9ad8\u80fd\u8017\u5e26\u6765\u7684\u73af\u5883\u5f71\u54cd\uff0c\u5c24\u5176\u662f\u78b3\u6392\u653e\u95ee\u9898\uff0c\u9c9c\u6709\u7814\u7a76\u5173\u6ce8\u3002\u7f16\u7a0b\u8bed\u8a00\u5728ML\u4efb\u52a1\u4e2d\u7684\u80fd\u8017\u6bd4\u8f83\u5b58\u5728\u7814\u7a76\u7a7a\u767d\u3002", "method": "\u901a\u8fc7\u5b9e\u8bc1\u7814\u7a76\uff0c\u5206\u522b\u7528Python\u548cR\u5b9e\u73b0\u4e94\u4e2a\u56de\u5f52\u4e0e\u4e94\u4e2a\u5206\u7c7b\u4efb\u52a1\uff0c\u6d4b\u91cf\u5e76\u5bf9\u6bd4\u4e24\u79cd\u8bed\u8a00\u5728\u8bad\u7ec3\u548c\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u80fd\u8017\u4e0e\u8fd0\u884c\u6027\u80fd\u3002", "result": "95%\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u4e24\u79cd\u8bed\u8a00\u7684\u80fd\u8017\u548c\u6027\u80fd\u5dee\u5f02\u5177\u6709\u7edf\u8ba1\u663e\u8457\u6027\u3002\u8bed\u8a00\u9009\u62e9\u5bf9\u80fd\u6548\u5f71\u54cd\u6781\u5927\uff0c\u8bad\u7ec3\u9636\u6bb5\u6700\u9ad8\u53ef\u8fbe99.16%\uff0c\u63a8\u7406\u9636\u6bb5\u6700\u9ad8\u8fbe99.8%\u3002", "conclusion": "\u7f16\u7a0b\u8bed\u8a00\u7684\u9009\u62e9\u5728\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\uff0c\u5bf9\u80fd\u8017\u548c\u78b3\u6392\u653e\u6709\u6781\u5927\u5f71\u54cd\uff0c\u9700\u5f15\u8d77\u5173\u6ce8\u548c\u6743\u8861\u3002"}}
{"id": "2508.16665", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.16665", "abs": "https://arxiv.org/abs/2508.16665", "authors": ["V Venktesh", "Mandeep rathee", "Avishek Anand"], "title": "Trust but Verify! A Survey on Verification Design for Test-time Scaling", "comment": "18 pages", "summary": "Test-time scaling (TTS) has emerged as a new frontier for scaling the\nperformance of Large Language Models. In test-time scaling, by using more\ncomputational resources during inference, LLMs can improve their reasoning\nprocess and task performance. Several approaches have emerged for TTS such as\ndistilling reasoning traces from another model or exploring the vast decoding\nsearch space by employing a verifier. The verifiers serve as reward models that\nhelp score the candidate outputs from the decoding process to diligently\nexplore the vast solution space and select the best outcome. This paradigm\ncommonly termed has emerged as a superior approach owing to parameter free\nscaling at inference time and high performance gains. The verifiers could be\nprompt-based, fine-tuned as a discriminative or generative model to verify\nprocess paths, outcomes or both. Despite their widespread adoption, there is no\ndetailed collection, clear categorization and discussion of diverse\nverification approaches and their training mechanisms. In this survey, we cover\nthe diverse approaches in the literature and present a unified view of verifier\ntraining, types and their utility in test-time scaling. Our repository can be\nfound at\nhttps://github.com/elixir-research-group/Verifierstesttimescaling.github.io.", "AI": {"tldr": "\u672c\u6587\u5bf9\u5927\u8bed\u8a00\u6a21\u578b\u6d4b\u8bd5\u65f6\u6269\u5c55\uff08TTS\uff09\u6280\u672f\u2014\u2014\u7279\u522b\u662f\u9a8c\u8bc1\u5668\u7684\u4f7f\u7528\u4e0e\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u4e86\u7cfb\u7edf\u7efc\u8ff0\uff0c\u586b\u8865\u4e86\u9886\u57df\u5185\u7f3a\u4e4f\u7edf\u4e00\u89c6\u89d2\u7684\u7a7a\u767d\u3002", "motivation": "\u5c3d\u7ba1\u9a8c\u8bc1\u5668\u88ab\u5e7f\u6cdb\u91c7\u7528\u4e8eTTS\uff0c\u4f46\u76ee\u524d\u7f3a\u4e4f\u5bf9\u5404\u7c7b\u9a8c\u8bc1\u65b9\u6cd5\u53ca\u5176\u8bad\u7ec3\u673a\u5236\u7684\u5168\u9762\u6536\u96c6\u4e0e\u5206\u7c7b\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u8fdb\u884c\u7cfb\u7edf\u6027\u68b3\u7406\u548c\u603b\u7ed3\u3002", "method": "\u5bf9\u73b0\u6709\u4f7f\u7528\u9a8c\u8bc1\u5668\u8fdb\u884cTTS\u7684\u65b9\u6cd5\u8fdb\u884c\u6587\u732e\u56de\u987e\u548c\u5206\u7c7b\uff0c\u7cfb\u7edf\u8ba8\u8bba\u4e86\u9a8c\u8bc1\u5668\u7684\u8bad\u7ec3\u65b9\u5f0f\u3001\u7c7b\u578b\u53ca\u5176\u5728TTS\u4e2d\u7684\u5e94\u7528\u3002", "result": "\u6574\u7406\u5e76\u5c55\u793a\u4e86\u9a8c\u8bc1\u5668\u5728TTS\u4e2d\u7684\u7c7b\u578b\u3001\u8bad\u7ec3\u65b9\u6cd5\u548c\u5b9e\u9645\u7528\u9014\uff0c\u6784\u5efa\u4e86\u76f8\u5173\u6587\u732e\u7684\u7edf\u4e00\u4f53\u7cfb\uff0c\u5e76\u5f00\u6e90\u4e86\u76f8\u5173\u8d44\u6e90\u5e93\u4ee5\u4f9b\u5b66\u754c\u53c2\u8003\u3002", "conclusion": "\u672c\u6587\u603b\u7ed3\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u9a8c\u8bc1\u5668\u8fdb\u884c\u6d4b\u8bd5\u65f6\u6269\u5c55\uff08TTS\uff09\u7684\u591a\u79cd\u65b9\u6cd5\uff0c\u5e76\u63d0\u51fa\u7edf\u4e00\u89c6\u89d2\u8fdb\u884c\u5f52\u7eb3\u548c\u5206\u7c7b\u3002"}}
{"id": "2508.16771", "categories": ["cs.SE", "cs.AI", "cs.HC"], "pdf": "https://arxiv.org/pdf/2508.16771", "abs": "https://arxiv.org/abs/2508.16771", "authors": ["Yifan Zhang", "Chen Huang", "Yueke Zhang", "Jiahao Zhang", "Toby Jia-Jun Li", "Collin McMillan", "Kevin Leach", "Yu Huang"], "title": "EyeMulator: Improving Code Language Models by Mimicking Human Visual Attention", "comment": null, "summary": "Code language models (so-called CodeLLMs) are now commonplace in software\ndevelopment. As a general rule, CodeLLMs are trained by dividing training\nexamples into input tokens and then learn importance of those tokens in a\nprocess called machine attention. Machine attention is based solely on input\ntoken salience to output token examples during training. Human software\ndevelopers are different, as humans intuitively know that some tokens are more\nsalient than others. While intuition itself is ineffable and a subject of\nphilosophy, clues about salience are present in human visual attention, since\npeople tend to look at more salient words more often. In this paper, we present\nEyeMulator, a technique for training CodeLLMs to mimic human visual attention\nwhile training for various software development tasks. We add special weights\nfor each token in each input example to the loss function used during LLM\nfine-tuning. We draw these weights from observations of human visual attention\nderived from a previously-collected publicly-available dataset of eye-tracking\nexperiments in software engineering tasks. These new weights ultimately induce\nchanges in the attention of the subject LLM during training, resulting in a\nmodel that does not need eye-tracking data during inference. Our evaluation\nshows that EyeMulator outperforms strong LLM baselines on several tasks such as\ncode translation, completion and summarization. We further show an ablation\nstudy that demonstrates the improvement is due to subject models learning to\nmimic human attention.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faEyeMulator\u65b9\u6cd5\uff0c\u5c06\u4eba\u7c7b\u89c6\u89c9\u5173\u6ce8\uff08\u901a\u8fc7\u773c\u52a8\u8ffd\u8e2a\u83b7\u5f97\uff09\u6570\u636e\u5f15\u5165CodeLLM\u8bad\u7ec3\uff0c\u663e\u8457\u589e\u5f3a\u6a21\u578b\u5728\u4ee3\u7801\u76f8\u5173\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\u3002\u8be5\u65b9\u6cd5\u53ea\u9700\u5728\u4eba\u7c7b\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u6b21\uff0c\u65e0\u9700\u5728\u63a8\u7406\u9636\u6bb5\u9644\u52a0\u773c\u52a8\u6570\u636e\uff0c\u8bc1\u5b9e\u4e86\u6a21\u4eff\u4eba\u7c7b\u6ce8\u610f\u529b\u5206\u5e03\u7684\u6709\u6548\u6027\u3002", "motivation": "\u73b0\u6709\u7684\u4ee3\u7801\u8bed\u8a00\u6a21\u578b\uff08CodeLLMs\uff09\u4ec5\u4f9d\u8d56\u8f93\u5165token\u5bf9\u8f93\u51fatoken\u7684\u91cd\u8981\u6027\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u6ca1\u6709\u8003\u8651\u4eba\u7c7b\u5f00\u53d1\u8005\u5bf9\u4ee3\u7801\u7684\u89c6\u89c9\u5173\u6ce8\u5dee\u5f02\uff0c\u4eba\u7c7b\u901a\u5e38\u4f1a\u5173\u6ce8\u66f4\u6709\u610f\u4e49\u7684\u4ee3\u7801\u90e8\u5206\u3002\u8fd9\u79cd\u5dee\u5f02\u53ef\u80fd\u5bfc\u81f4\u6a21\u578b\u8868\u73b0\u4e0d\u53ca\u4eba\u7c7b\u76f4\u89c9\u3002\u672c\u6587\u8bd5\u56fe\u901a\u8fc7\u4eba\u7c7b\u89c6\u89c9\u6ce8\u89c6\u6570\u636e\u6539\u8fdbCodeLLM\uff0c\u4f7f\u5176\u66f4\u63a5\u8fd1\u4eba\u7c7b\u5b9e\u9645\u5904\u7406\u65b9\u5f0f\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3aEyeMulator\u7684\u65b0\u65b9\u6cd5\uff0c\u5728CodeLLM\u5fae\u8c03\u8fc7\u7a0b\u4e2d\u5f15\u5165\u57fa\u4e8e\u4eba\u7c7b\u89c6\u89c9\u5173\u6ce8\uff08\u773c\u52a8\u8ffd\u8e2a\u5b9e\u9a8c\u6570\u636e\uff09\u7684token\u6743\u91cd\u5230\u635f\u5931\u51fd\u6570\u4e2d\u3002\u8fd9\u4e9b\u6743\u91cd\u53cd\u6620\u4e86\u4eba\u7c7b\u5728\u8f6f\u4ef6\u5f00\u53d1\u4efb\u52a1\u4e2d\u5b9e\u9645\u5173\u6ce8\u7684\u4ee3\u7801\u90e8\u5206\uff0c\u4ee5\u6b64\u6307\u5bfc\u6a21\u578b\u5b66\u4e60\u66f4\u63a5\u8fd1\u4eba\u7c7b\u7684\u6ce8\u610f\u529b\u5206\u5e03\u3002\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u4e0d\u518d\u9700\u8981\u773c\u52a8\u6570\u636e\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u4f7f\u7528EyeMulator\u6280\u672f\u7684CodeLLM\u5728\u4ee3\u7801\u7ffb\u8bd1\u3001\u4ee3\u7801\u8865\u5168\u548c\u4ee3\u7801\u6458\u8981\u7b49\u4efb\u52a1\u4e0a\u4f18\u4e8e\u73b0\u6709\u4e3b\u6d41LLM\u57fa\u7ebf\u6a21\u578b\u3002\u6d88\u878d\u5b9e\u9a8c\u4e5f\u8bc1\u660e\u4e86\u6027\u80fd\u63d0\u5347\u6765\u6e90\u4e8e\u6a21\u578b\u6210\u529f\u6a21\u4eff\u4e86\u4eba\u7c7b\u89c6\u89c9\u6ce8\u610f\u529b\u3002", "conclusion": "\u5c06\u4eba\u7c7b\u89c6\u89c9\u5173\u6ce8\u4fe1\u606f\u7eb3\u5165CodeLLM\u8bad\u7ec3\u663e\u8457\u63d0\u5347\u4e86\u6a21\u578b\u5728\u591a\u9879\u4ee3\u7801\u76f8\u5173\u81ea\u52a8\u5316\u4efb\u52a1\u4e0a\u7684\u6548\u679c\uff0c\u4e14\u65e0\u9700\u5728\u63a8\u7406\u9636\u6bb5\u6301\u7eed\u4f9d\u8d56\u989d\u5916\u7684\u4eba\u673a\u4ea4\u4e92\u6570\u636e\u3002\u8be5\u65b9\u6cd5\u6709\u52a9\u4e8e\u4f7f\u81ea\u52a8\u5316\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u66f4\u52a0\u667a\u80fd\u548c\u4eba\u6027\u5316\u3002"}}
{"id": "2508.17895", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.17895", "abs": "https://arxiv.org/abs/2508.17895", "authors": ["Lidia Losavio", "Marco Paganoni", "Carlo A. Furia"], "title": "Model-Based Testing of an Intermediate Verifier Using Executable Operational Semantics", "comment": "In Proceedings of the 20th International Conference on integrated\n  Formal Methods (iFM), Paris, France, 17-21 November 2025", "summary": "Lightweight validation technique, such as those based on random testing, are\nsometimes practical alternatives to full formal verification -- providing\nvaluable benefits, such as finding bugs, without requiring a disproportionate\neffort. In fact, they can be useful even for fully formally verified tools, by\nexercising the parts of a complex system that go beyond the reach of formal\nmodels.\n  In this context, this paper introduces BCC: a model-based testing technique\nfor the Boogie intermediate verifier. BCC combines the formalization of a\nsmall, deterministic subset of the Boogie language with the generative\ncapabilities of the PLT Redex language engineering framework. Basically, BCC\nuses PLT Redex to generate random Boogie programs, and to execute them\naccording to a formal operational semantics; then, it runs the same programs\nthrough the Boogie verifier. Any inconsistency between the two executions (in\nPLT Redex and with Boogie) may indicate a potential bug in Boogie's\nimplementation.\n  To understand whether BCC can be useful in practice, we used it to generate\nthree million Boogie programs. These experiments found 2% of cases indicative\nof completeness failures (i.e., spurious verification failures) in Boogie's\ntoolchain. These results indicate that lightweight analysis tools, such as\nthose for model-based random testing, are also useful to test and validate\nformal verification tools such as Boogie.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u57fa\u4e8ePLT Redex\u6846\u67b6\u7684Boogie\u9a8c\u8bc1\u5668\u6a21\u578b\u968f\u673a\u6d4b\u8bd5\u65b9\u6cd5BCC\u3002\u5b9e\u9a8c\u53d1\u73b0BCC\u80fd\u68c0\u6d4b\u5230Boogie 2%\u7684\u5b8c\u6574\u6027\u7f3a\u9677\uff0c\u8868\u660e\u8f7b\u91cf\u7ea7\u968f\u673a\u6d4b\u8bd5\u5bf9\u5f62\u5f0f\u9a8c\u8bc1\u5de5\u5177\u6709\u91cd\u8981\u8865\u5145\u4ef7\u503c\u3002", "motivation": "\u8f7b\u91cf\u7ea7\u9a8c\u8bc1\u6280\u672f\uff08\u5982\u968f\u673a\u6d4b\u8bd5\uff09\u53ef\u4ee5\u4f5c\u4e3a\u5b8c\u6574\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u5b9e\u9645\u66ff\u4ee3\u65b9\u6848\uff0c\u4e0d\u9700\u6781\u5927\u52aa\u529b\u5373\u53ef\u53d1\u73b0\u6f5c\u5728\u95ee\u9898\u3002\u5373\u4f7f\u662f\u5bf9\u5df2\u7ecf\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684\u5de5\u5177\uff0c\u8fd9\u7c7b\u65b9\u6cd5\u4e5f\u80fd\u8986\u76d6\u5f62\u5f0f\u5316\u6a21\u578b\u96be\u4ee5\u89e6\u53ca\u7684\u590d\u6742\u7cfb\u7edf\u90e8\u5206\u3002", "method": "\u63d0\u51faBCC\uff1a\u4e00\u79cd\u9488\u5bf9Boogie\u4e2d\u95f4\u9a8c\u8bc1\u5668\u7684\u57fa\u4e8e\u6a21\u578b\u7684\u6d4b\u8bd5\u6280\u672f\u3002BCC\u901a\u8fc7PLT Redex\u6846\u67b6\u968f\u673a\u751f\u6210Boogie\u7a0b\u5e8f\u5e76\u57fa\u4e8e\u5f62\u5f0f\u64cd\u4f5c\u8bed\u4e49\u6267\u884c\uff0c\u518d\u7528Boogie\u9a8c\u8bc1\u5668\u5bf9\u540c\u4e00\u7a0b\u5e8f\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5c06\u4e24\u79cd\u6267\u884c\u7ed3\u679c\u8fdb\u884c\u6bd4\u5bf9\uff0c\u4ece\u4e2d\u53d1\u73b0\u5b9e\u73b0\u4e2d\u7684\u6f5c\u5728bug\u3002", "result": "\u4f7f\u7528BCC\u751f\u6210\u4e86\u4e09\u767e\u4e07\u4e2aBoogie\u7a0b\u5e8f\u5b9e\u9a8c\uff0c\u53d1\u73b02%\u6848\u4f8b\u5448\u73b0Boogie\u5de5\u5177\u94fe\u7684\u5b8c\u6574\u6027\u5931\u8d25\uff08\u9519\u8bef\u7684\u9a8c\u8bc1\u5931\u8d25\uff09\u3002\u8be5\u7ed3\u679c\u8868\u660e\uff0c\u8f7b\u91cf\u7ea7\u5206\u6790\u5de5\u5177\uff08\u5982\u57fa\u4e8e\u6a21\u578b\u7684\u968f\u673a\u6d4b\u8bd5\uff09\u5bf9\u5f62\u5f0f\u5316\u9a8c\u8bc1\u5de5\u5177\uff08\u5982Boogie\uff09\u6709\u5b9e\u9645\u6d4b\u8bd5\u548c\u9a8c\u8bc1\u4ef7\u503c\u3002", "conclusion": "BCC\u80fd\u591f\u6709\u6548\u53d1\u73b0Boogie\u9a8c\u8bc1\u5668\u7684\u5b9e\u9645\u7f3a\u9677\uff0c\u8bf4\u660e\u8f7b\u91cf\u7ea7\u968f\u673a\u6d4b\u8bd5\u6280\u672f\u80fd\u8f85\u52a9\u548c\u5b8c\u5584\u6b63\u5f0f\u9a8c\u8bc1\u5de5\u5177\u7684\u53ef\u9760\u6027\u3002"}}
{"id": "2508.18115", "categories": ["cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2508.18115", "abs": "https://arxiv.org/abs/2508.18115", "authors": ["Quang Loc Le"], "title": "Compositional Verification in Concurrent Separation Logic with Permissions Regions", "comment": null, "summary": "Concurrent separation logic with fractional permissions (CSLPerm) provides a\npromising reasoning system to verify most complex sequential and concurrent\nfine-grained programs. The logic with strong and weak separating conjunctions\noffers a solid foundation for producing concise and precise proofs. However, it\nlacks automation and compositionality support. This paper addresses this\nlimitation by introducing a compositional verification system for concurrent\nprograms that manipulate regions of shared memory. The centre of our system is\nnovel logical principles and an entailment procedure that can infer the\nresidual heaps in the frame rule for a fragment of CSL-Perm with explicit\narithmetical constraints for memory heaps' disjointness. This procedure enables\nthe compositional reasoning for concurrent threads and function calls. We have\nimplemented the proposal in a prototype tool called CoSl, tested it with 10\nchallenging concurrent programs, including those beyond the state-of-the-art,\nand confirmed the advantage of our approach.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u63d0\u5347CSLPerm\u81ea\u52a8\u5316\u548c\u7ec4\u5408\u6027\u7684\u65b0\u65b9\u6cd5\uff0c\u901a\u8fc7\u81ea\u52a8\u63a8\u7406\u5185\u5b58\u5806\u6b8b\u4f59\u3001\u652f\u6301\u590d\u6742\u5e76\u53d1\u9a8c\u8bc1\uff0c\u5e76\u7528\u539f\u578b\u5de5\u5177\u5728\u591a\u4e2a\u9ad8\u96be\u5ea6\u6848\u4f8b\u4e0a\u53d6\u5f97\u4f18\u5f02\u6548\u679c\u3002", "motivation": "CSLPerm\u5177\u5907\u7b80\u6d01\u4e25\u5bc6\u7684\u63a8\u7406\u80fd\u529b\uff0c\u4f46\u5728\u81ea\u52a8\u5316\u548c\u7ec4\u5408\u6027\u652f\u6301\u4e0a\u5b58\u5728\u4e0d\u8db3\u3002\u56e0\u6b64\u8feb\u5207\u9700\u8981\u63d0\u5347\u5176\u5bf9\u590d\u6742\u5e76\u53d1\u7a0b\u5e8f\u7684\u9a8c\u8bc1\u81ea\u52a8\u5316\u548c\u53ef\u7ec4\u5408\u6027\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u652f\u6301\u5e76\u53d1\u7a0b\u5e8f\u7ec4\u5408\u63a8\u7406\u7684\u9a8c\u8bc1\u7cfb\u7edf\uff0c\u57fa\u4e8e\u5bf9CSL-Perm\u7247\u6bb5\u7684\u903b\u8f91\u539f\u5219\u548c\u8574\u6db5\u5224\u5b9a\u8fc7\u7a0b\uff0c\u80fd\u591f\u81ea\u52a8\u63a8\u5bfc\u5185\u5b58\u5806\u7684\u6b8b\u4f59\u90e8\u5206\uff0c\u5e76\u5b9e\u73b0\u5bf9\u7b97\u672f\u7ea6\u675f\u4e0b\u5806\u4e0d\u76f8\u4ea4\u6027\u7684\u81ea\u52a8\u63a8\u7406\u3002\u5b9e\u73b0\u4e86\u539f\u578b\u5de5\u5177CoSl\u3002", "result": "\u8be5\u65b9\u6cd5\u80fd\u591f\u81ea\u52a8\u5904\u7406\u5e76\u53d1\u7ebf\u7a0b\u4e0e\u51fd\u6570\u8c03\u7528\u4e0b\u7684\u7ec4\u5408\u63a8\u7406\uff0c\u539f\u578b\u5de5\u5177CoSl\u53ef\u9a8c\u8bc110\u4e2a\u6781\u5177\u6311\u6218\u6027\u7684\u5e76\u53d1\u7a0b\u5e8f\uff0c\u5e76\u5728\u90e8\u5206\u6848\u4f8b\u4e0a\u8d85\u8d8a\u5f53\u524d\u6280\u672f\u6c34\u5e73\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u65b0\u7684\u7ec4\u5408\u5f0f\u9a8c\u8bc1\u7cfb\u7edf\u6709\u6548\u63d0\u5347\u4e86\u5bf9\u5e76\u53d1\u7a0b\u5e8f\u7684\u5206\u6790\u4e0e\u9a8c\u8bc1\u80fd\u529b\uff0c\u5e76\u5df2\u901a\u8fc7\u539f\u578b\u5de5\u5177CoSl\u548c\u82e5\u5e72\u5177\u6709\u6311\u6218\u6027\u7684\u7a0b\u5e8f\u6d4b\u8bd5\u8bc1\u660e\u5176\u5b9e\u7528\u6027\u548c\u6709\u6548\u6027\u3002"}}
{"id": "2508.16695", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.16695", "abs": "https://arxiv.org/abs/2508.16695", "authors": ["Siddhant Bhambri", "Upasana Biswas", "Subbarao Kambhampati"], "title": "Do Cognitively Interpretable Reasoning Traces Improve LLM Performance?", "comment": null, "summary": "Recent progress in reasoning-oriented Large Language Models (LLMs) has been\ndriven by introducing Chain-of-Thought (CoT) traces, where models generate\nintermediate reasoning traces before producing an answer. These traces, as in\nDeepSeek R1, are not only used to guide inference but also serve as supervision\nsignals for distillation into smaller models. A common but often implicit\nassumption is that CoT traces should be semantically meaningful and\ninterpretable to the end user. While recent research questions the need for\nsemantic nature of these traces, in this paper, we ask: ``\\textit{Must CoT\nreasoning traces be interpretable to enhance LLM task performance?}\" We\ninvestigate this question in the Open Book Question-Answering domain by\nsupervised fine-tuning LLaMA and Qwen models on four types of reasoning traces:\n(1) DeepSeek R1 traces, (2) LLM-generated summaries of R1 traces, (3)\nLLM-generated post-hoc explanations of R1 traces, and (4) algorithmically\ngenerated verifiably correct traces. To quantify the trade-off between\ninterpretability and performance, we further conduct a human-subject study with\n100 participants rating the interpretability of each trace type. Our results\nreveal a striking mismatch: while fine-tuning on R1 traces yields the strongest\nperformance, participants judged these traces to be the least interpretable.\nThese findings suggest that it is useful to decouple intermediate tokens from\nend user interpretability.", "AI": {"tldr": "\u5bf9LLMs\u8fdb\u884c\u94fe\u5f0f\u601d\u7ef4\u5fae\u8c03\u65f6\uff0c\u6700\u5f3a\u6027\u80fd\u4e0d\u4e00\u5b9a\u6765\u81ea\u6700\u53ef\u89e3\u91ca\u7684\u63a8\u7406\u8f68\u8ff9\u3002\u6027\u80fd\u63d0\u5347\u4e0e\u53ef\u89e3\u91ca\u6027\u53ef\u5e76\u884c\u72ec\u7acb\u53d1\u5c55\uff0c\u65e0\u9700\u5f3a\u884c\u7ed3\u5408\u3002", "motivation": "\u8fd1\u5e74\u6765\uff0c\u94fe\u5f0f\u601d\u7ef4\uff08CoT\uff09\u63a8\u7406\u5df2\u6210\u4e3a\u63d0\u5347\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u63a8\u7406\u80fd\u529b\u7684\u91cd\u8981\u65b9\u6cd5\uff0cCoT\u8f68\u8ff9\u4e0d\u4ec5\u7528\u4e8e\u63a8\u7406\uff0c\u8fd8\u4f5c\u4e3a\u8bad\u7ec3\u5c0f\u6a21\u578b\u7684\u76d1\u7763\u4fe1\u53f7\u3002\u4e3b\u6d41\u89c2\u70b9\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u63a8\u7406\u8f68\u8ff9\u5e94\u5bf9\u7528\u6237\u5177\u6709\u53ef\u89e3\u91ca\u6027\uff0c\u4f46\u8fd9\u4e00\u5047\u8bbe\u5c1a\u5f85\u9a8c\u8bc1\u3002\u672c\u6587\u63d0\u51fa\u6838\u5fc3\u95ee\u9898\uff1aCoT\u8f68\u8ff9\u662f\u5426\u5fc5\u987b\u53ef\u89e3\u91ca\uff0c\u624d\u80fd\u63d0\u5347LLM\u4efb\u52a1\u8868\u73b0\uff1f", "method": "\u5728\u5f00\u653e\u5f0f\u95ee\u7b54\u4efb\u52a1\u4e2d\uff0c\u4f5c\u8005\u5bf9LLaMA\u4e0eQwen\u4e24\u79cd\u6a21\u578b\u8fdb\u884c\u6709\u76d1\u7763\u5fae\u8c03\uff0c\u5206\u522b\u7528\u56db\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u63a8\u7406\u8f68\u8ff9\uff1a(1) DeepSeek R1\u8f68\u8ff9\uff0c(2) LLM\u81ea\u52a8\u751f\u6210\u7684R1\u8f68\u8ff9\u6458\u8981\uff0c(3) LLM\u81ea\u52a8\u751f\u6210\u7684R1\u540e\u89e3\u91ca\uff0c(4) \u7b97\u6cd5\u751f\u6210\u4e14\u53ef\u9a8c\u8bc1\u6b63\u786e\u7684\u8f68\u8ff9\u3002\u540c\u65f6\uff0c\u8bbe\u8ba1\u4e86\u5305\u542b100\u4eba\u7684\u7528\u6237\u8c03\u7814\uff0c\u6536\u96c6\u4ed6\u4eec\u5bf9\u4e0d\u540c\u7c7b\u578b\u8f68\u8ff9\u53ef\u89e3\u91ca\u6027\u7684\u4e3b\u89c2\u8bc4\u5206\uff0c\u4ee5\u91cf\u5316\u53ef\u89e3\u91ca\u6027\u4e0e\u4efb\u52a1\u8868\u73b0\u7684\u6743\u8861\u3002", "result": "\u5fae\u8c03\u5b9e\u9a8c\u663e\u793a\uff0c\u4f7f\u7528R1\u8f68\u8ff9\u8bad\u7ec3\u7684\u6a21\u578b\u6027\u80fd\u6700\u9ad8\uff0c\u4f46\u7528\u6237\u4e3b\u89c2\u611f\u53d7R1\u8f68\u8ff9\u7684\u53ef\u89e3\u91ca\u6027\u6700\u4f4e\u3002\u5373\uff0c\u53ef\u89e3\u91ca\u6027\u4e0e\u6a21\u578b\u6027\u80fd\u5b58\u5728\u660e\u663e\u8131\u94a9\u3002", "conclusion": "CoT\u8f68\u8ff9\u65e0\u9700\u5f3a\u5236\u8ffd\u6c42\u7528\u6237\u53ef\u89e3\u91ca\u6027\uff0c\u4e5f\u80fd\u5927\u5e45\u63d0\u5347LLM\u7684\u63a8\u7406\u80fd\u529b\u3002\u5efa\u8bae\u5728\u8bbe\u8ba1\u4e2d\u95f4\u63a8\u7406\u8fc7\u7a0b\u65f6\uff0c\u53ef\u4ee5\u5c06\u201c\u5bf9\u6a21\u578b\u6709\u6548\u201d\u4e0e\u201c\u5bf9\u7528\u6237\u53ef\u89e3\u91ca\u201d\u5206\u79bb\u8003\u8651\u3002"}}
