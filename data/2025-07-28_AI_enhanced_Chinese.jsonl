{"id": "2507.19006", "categories": ["cs.DM"], "pdf": "https://arxiv.org/pdf/2507.19006", "abs": "https://arxiv.org/abs/2507.19006", "authors": ["David Russinoff"], "title": "A Formalization of Elementary Linear Algebra: Part I", "comment": "In Proceedings ACL2 2025, arXiv:2507.18567", "summary": "This is the first installment of an exposition of an ACL2 formalization of\nelementary linear algebra, focusing on aspects of the subject that apply to\nmatrices over an arbitrary commutative ring with identity, in anticipation of a\nfuture treatment of the characteristic polynomial of a matrix, which has\nentries in a polyniomial ring. The main contribution of this paper is a formal\ntheory of the determinant, including its characterization as the unique\nalternating n-linear function of the rows of an non matrix, multiplicativity of\nthe determinant, and the correctness of cofactor expansion.", "AI": {"tldr": "\u672c\u6587\u5728ACL2\u4e0a\u5f62\u5f0f\u5316\u4e86\u4ea4\u6362\u73af\u4e0a\u77e9\u9635\u7684\u7ebf\u6027\u4ee3\u6570\uff0c\u91cd\u70b9\u5b9e\u73b0\u5e76\u8bc1\u660e\u4e86\u884c\u5217\u5f0f\u7684\u6027\u8d28\u3002", "motivation": "\u672c\u8bba\u6587\u65e8\u5728\u4e3a\u672a\u6765\u5904\u7406\u542b\u6709\u591a\u9879\u5f0f\u73af\u5143\u7d20\u77e9\u9635\u7684\u7279\u5f81\u591a\u9879\u5f0f\u4f5c\u94fa\u57ab\uff0c\u7cfb\u7edf\u5730\u5f62\u5f0f\u5316\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\uff0c\u7279\u522b\u662f\u9002\u7528\u4e8e\u5e26\u5e7a\u5143\u7684\u4efb\u610f\u4ea4\u6362\u73af\u4e0a\u7684\u77e9\u9635\u7406\u8bba\u3002", "method": "\u5229\u7528ACL2\u5b9a\u7406\u8bc1\u660e\u8f85\u52a9\u7cfb\u7edf\uff0c\u6784\u5efa\u4e0e\u4e25\u683c\u9a8c\u8bc1\u76f8\u5173\u7ebf\u6027\u4ee3\u6570\u6982\u5ff5\uff0c\u91cd\u70b9\u5f62\u5f0f\u5316\u884c\u5217\u5f0f\u53ca\u5176\u76f8\u5173\u6027\u8d28\u3002", "result": "\u63d0\u51fa\u4e86\u884c\u5217\u5f0f\u7684\u5b8c\u5907\u5f62\u5f0f\u7406\u8bba\uff0c\u5305\u62ec\u884c\u5217\u5f0f\u4f5c\u4e3a\u884c\u7684\u552f\u4e00\u4ea4\u9519n\u7ebf\u6027\u51fd\u6570\u7684\u523b\u753b\u3001\u4e58\u6cd5\u6027\u3001\u4ee5\u53ca\u6309\u4ee3\u6570\u4f59\u5b50\u5f0f\u5c55\u5f00\u7684\u6b63\u786e\u6027\u8bc1\u660e\u3002", "conclusion": "\u8bba\u6587\u9996\u6b21\u7cfb\u7edf\u6027\u5730\u5728ACL2\u7cfb\u7edf\u4e2d\u5f62\u5f0f\u5316\u4e86\u884c\u5217\u5f0f\u7406\u8bba\uff0c\u5e76\u4e3a\u540e\u7eed\u5bf9\u542b\u591a\u9879\u5f0f\u73af\u5143\u7d20\u77e9\u9635\u7406\u8bba\u7684\u7814\u7a76\u5960\u5b9a\u57fa\u7840\u3002"}}
{"id": "2507.18792", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18792", "abs": "https://arxiv.org/abs/2507.18792", "authors": ["Zixu Zhou"], "title": "Decompiling Rust: An Empirical Study of Compiler Optimizations and Reverse Engineering Challenges", "comment": null, "summary": "Decompiling Rust binaries is challenging due to the language's rich type\nsystem, aggressive compiler optimizations, and widespread use of high-level\nabstractions. In this work, we conduct a benchmark-driven evaluation of\ndecompilation quality across core Rust features and compiler build modes. Our\nautomated scoring framework shows that generic types, trait methods, and error\nhandling constructs significantly reduce decompilation quality, especially in\nrelease builds. Through representative case studies, we analyze how specific\nlanguage constructs affect control flow, variable naming, and type information\nrecovery. Our findings provide actionable insights for tool developers and\nhighlight the need for Rust-aware decompilation strategies.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u6027\u8bc4\u4f30\u4e86 Rust \u53cd\u7f16\u8bd1\u96be\u70b9\uff0c\u6307\u51fa\u6cdb\u578b\u3001trait \u548c\u9519\u8bef\u5904\u7406\u673a\u5236\u6781\u5927\u5f71\u54cd\u53cd\u7f16\u8bd1\u8d28\u91cf\uff0c\u5e76\u547c\u5401\u5f00\u53d1\u4e13\u95e8\u5e94\u5bf9 Rust \u7684\u53cd\u7f16\u8bd1\u5de5\u5177\u3002", "motivation": "Rust \u7531\u4e8e\u5176\u590d\u6742\u7684\u7c7b\u578b\u7cfb\u7edf\u3001\u7f16\u8bd1\u4f18\u5316\u548c\u9ad8\u7ea7\u62bd\u8c61\u7684\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f7f\u5f97\u53cd\u7f16\u8bd1\u6781\u5177\u6311\u6218\u6027\u3002\u4f46\u76ee\u524d\u7f3a\u4e4f\u5bf9\u4e0d\u540c Rust \u8bed\u8a00\u7279\u6027\u3001\u7f16\u8bd1\u6a21\u5f0f\u4e0b\u53cd\u7f16\u8bd1\u8d28\u91cf\u7684\u7cfb\u7edf\u8bc4\u4f30\u3002\u672c\u6587\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7814\u7a76\u7a7a\u767d\u3002", "method": "\u672c\u6587\u91c7\u7528\u57fa\u51c6\u6d4b\u8bd5\u9a71\u52a8\u7684\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u81ea\u52a8\u5316\u8bc4\u5206\u6846\u67b6\uff0c\u5b9a\u91cf\u8bc4\u4f30 Rust \u4e0d\u540c\u6838\u5fc3\u7279\u6027\u548c\u7f16\u8bd1\u6a21\u5f0f\u4e0b\u7684\u53cd\u7f16\u8bd1\u8d28\u91cf\u3002\u540c\u65f6\u901a\u8fc7\u5178\u578b\u6848\u4f8b\u7814\u7a76\uff0c\u5206\u6790\u8bed\u8a00\u7279\u6027\u5982\u4f55\u5f71\u54cd\u63a7\u5236\u6d41\u3001\u53d8\u91cf\u547d\u540d\u4e0e\u7c7b\u578b\u4fe1\u606f\u6062\u590d\u3002", "result": "\u5b9e\u9a8c\u8bc1\u660e\uff0c\u6cdb\u578b\u7c7b\u578b\u3001trait \u65b9\u6cd5\u548c\u9519\u8bef\u5904\u7406\u7ed3\u6784\u4f1a\u663e\u8457\u964d\u4f4e\u53cd\u7f16\u8bd1\u8d28\u91cf\uff0c\u4e14 release \u6a21\u5f0f\u5f71\u54cd\u66f4\u5927\u3002\u5177\u4f53\u5206\u6790\u63ed\u793a\u4e86 Rust \u8bed\u8a00\u7ed3\u6784\u5bf9\u53cd\u7f16\u8bd1\u96be\u5ea6\u7684\u5177\u4f53\u5f71\u54cd\u3002", "conclusion": "\u672c\u6587\u4e3a\u5de5\u5177\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u53ef\u64cd\u4f5c\u6027\u5efa\u8bae\uff0c\u5f3a\u8c03\u4e86\u6025\u9700\u5f00\u53d1\u5177\u5907 Rust \u611f\u77e5\u80fd\u529b\u7684\u53cd\u7f16\u8bd1\u7b56\u7565\u3002"}}
{"id": "2507.19007", "categories": ["cs.DM"], "pdf": "https://arxiv.org/pdf/2507.19007", "abs": "https://arxiv.org/abs/2507.19007", "authors": ["David Russinoff"], "title": "A Formalization of Elementary Linear Algebra: Part II", "comment": "In Proceedings ACL2 2025, arXiv:2507.18567", "summary": "This is the second installment of an exposition of an ACL2 formalization of\nelementary linear algebra. It extends the results of Part I, which covers the\nalgebra of matrices over a commutative ring, but focuses on aspects of the\ntheory that apply only to matrices over a field: elementary row reduction and\nits application to the computation of matrix inverses and the solution of\nsimultaneous systems of linear equations.", "AI": {"tldr": "\u8be5\u8bba\u6587\u901a\u8fc7ACL2\u5f62\u5f0f\u5316\u624b\u6bb5\uff0c\u6df1\u5165\u63a2\u8ba8\u4e86\u57df\u4e0a\u7684\u77e9\u9635\u76f8\u5173\u7ebf\u6027\u4ee3\u6570\u7406\u8bba\uff0c\u5305\u62ec\u521d\u7b49\u884c\u53d8\u6362\u3001\u77e9\u9635\u9006\u53ca\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3\uff0c\u63d0\u5347\u4e86\u8fd9\u4e9b\u7406\u8bba\u548c\u7b97\u6cd5\u7684\u53ef\u9a8c\u8bc1\u6027\u548c\u4e25\u8c28\u6027\u3002", "motivation": "\u8be5\u8bba\u6587\u65e8\u5728\u7ee7\u7eed\u5bf9\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\u5185\u5bb9\u7684ACL2\u5f62\u5f0f\u5316\u5c55\u5f00\uff0c\u5177\u4f53\u5173\u6ce8\u4e8e\u4ec5\u9002\u7528\u4e8e\u57df\u4e0a\u7684\u77e9\u9635\u7684\u76f8\u5173\u7406\u8bba\u3002", "method": "\u4ee5ACL2\u5f62\u5f0f\u5316\u65b9\u6cd5\uff0c\u5bf9\u77e9\u9635\u7684\u521d\u7b49\u884c\u53d8\u6362\u3001\u77e9\u9635\u6c42\u9006\u53ca\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3\u7b49\u8fc7\u7a0b\u8fdb\u884c\u5f62\u5f0f\u5316\u63cf\u8ff0\u4e0e\u8bc1\u660e\u3002", "result": "\u6269\u5c55\u4e86\u524d\u4f5c\u4e2d\u5173\u4e8e\u4ea4\u6362\u73af\u4e0a\u77e9\u9635\u4ee3\u6570\u7684\u7ed3\u679c\uff0c\u5f62\u5f0f\u5316\u5b9e\u73b0\u5e76\u9a8c\u8bc1\u4e86\u5728\u57df\u4e0a\u77e9\u9635\u4e0a\u7684\u521d\u7b49\u884c\u53d8\u6362\u3001\u77e9\u9635\u6c42\u9006\u548c\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3\u7b49\u5185\u5bb9\u3002", "conclusion": "\u901a\u8fc7ACL2\u7cfb\u7edf\uff0c\u7cfb\u7edf\u6027\u5730\u5f62\u5f0f\u5316\u5e76\u9a8c\u8bc1\u4e86\u57df\u4e0a\u77e9\u9635\u7684\u7ebf\u6027\u4ee3\u6570\u7406\u8bba\uff0c\u63d0\u9ad8\u4e86\u76f8\u5173\u7b97\u6cd5\u548c\u7406\u8bba\u7684\u53ef\u9760\u6027\u3002"}}
{"id": "2507.18885", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.18885", "abs": "https://arxiv.org/abs/2507.18885", "authors": ["Qiyuan Xu", "Renxi Wang", "Haonan Li", "David Sanan", "Conrad Watt"], "title": "IsaMini: Redesigned Isabelle Proof Lanugage for Machine Learning", "comment": null, "summary": "Neural Theorem Proving (NTP) employs deep learning methods, particularly\nLarge Language Models (LLMs), to automate formal proofs in proof assistants.\nThis approach holds promise for reducing the dramatic labor costs or\ncomputation costs required in proof engineering, which is fundamental to formal\nverification and other software engineering methods. The paper explores the\npotential of improving NTP by redesigning the proof language, given that LLMs'\ncapabilities depend highly on representations. We introduce \\emph{MiniLang}, a\nredesigned proof language for Isabelle/HOL incorporating an improved version of\nSledgehammer. Experiments show MiniLang benefits two fine-tuned LLMs by\nimproving the success rate on the PISA benchmark by up to 29\\% in comparison to\ngeneration of Isar proof script. The success rate under one attempt (so-called\n\\emph{pass@1}) reaches 69.1\\%, exceeding the previous Baldur's pass@64\n(65.7\\%); The pass@8 reaches 79.2\\%, exceeding the state-of-the-art on PISA\n(71.0\\%) achieved by Magnushammer.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u7684\u65b0\u578b\u8bc1\u660e\u8bed\u8a00MiniLang\uff0c\u901a\u8fc7\u4f18\u5316\u8868\u793a\u65b9\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u57fa\u4e8eLLM\u7684\u81ea\u52a8\u5316\u5b9a\u7406\u8bc1\u660e\u6210\u529f\u7387\uff0c\u4e3a\u5f62\u5f0f\u5316\u9a8c\u8bc1\u9886\u57df\u5e26\u6765\u65b0\u7684\u7a81\u7834\u3002", "motivation": "\u73b0\u6709\u7684\u5f62\u5f0f\u5316\u8bc1\u660e\u81ea\u52a8\u5316\u4f9d\u8d56\u4e8e\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\uff0c\u4f46\u6a21\u578b\u5bf9\u8868\u793a\u65b9\u5f0f\u9ad8\u5ea6\u654f\u611f\uff0c\u8bc1\u660e\u8bed\u8a00\u7684\u8bbe\u8ba1\u5bf9\u81ea\u52a8\u8bc1\u660e\u6210\u529f\u7387\u6709\u76f4\u63a5\u5f71\u54cd\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u91cd\u65b0\u8bbe\u8ba1\u8bc1\u660e\u8bed\u8a00\uff0c\u63d0\u5347\u795e\u7ecf\u5b9a\u7406\u8bc1\u660e\uff08NTP\uff09\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u4ee5\u964d\u4f4e\u8bc1\u660e\u5de5\u7a0b\u7684\u4eba\u529b\u548c\u8ba1\u7b97\u6210\u672c\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8bc1\u660e\u8bed\u8a00MiniLang\uff0c\u5e76\u5c06\u5176\u96c6\u6210\u5230Isabelle/HOL\u4e2d\uff0c\u540c\u65f6\u6539\u8fdb\u4e86Sledgehammer\u5de5\u5177\u3002\u5bf9\u4e24\u79cd\u5fae\u8c03\u540e\u7684LLM\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u91c7\u7528PISA\u57fa\u51c6\u6d4b\u8bd5\u8bc4\u4f30\u751f\u6210MiniLang\u4e0e\u4f20\u7edfIsar\u8bc1\u660e\u811a\u672c\u7684\u8868\u73b0\uff1b\u901a\u8fc7pass@1\u548cpass@8\u7b49\u6307\u6807\u5bf9\u6bd4\u81ea\u52a8\u8bc1\u660e\u7684\u6210\u529f\u7387\u3002", "result": "\u4f7f\u7528MiniLang\u540e\uff0c\u5fae\u8c03LLM\u5728PISA\u57fa\u51c6\u4e0a\u7684\u8bc1\u660e\u6210\u529f\u7387\u63d0\u5347\u663e\u8457\u3002pass@1\u6210\u529f\u7387\u8fbe\u523069.1%\uff0c\u8d85\u8fc7\u4e86\u4ee5\u5f80Baldur\u6a21\u578bpass@64\u768465.7%\uff1bpass@8\u8fbe\u523079.2%\uff0c\u4f18\u4e8e\u76ee\u524d\u540c\u7c7b\u6700\u4f73\u65b9\u6cd5Magnushammer\u5728PISA\u57fa\u51c6\u4e0a\u768471.0%\u3002", "conclusion": "\u91cd\u65b0\u8bbe\u8ba1\u7684MiniLang\u8bc1\u660e\u8bed\u8a00\u80fd\u591f\u5145\u5206\u53d1\u6325LLMs\u7684\u80fd\u529b\uff0c\u5728\u81ea\u52a8\u5316\u5f62\u5f0f\u5316\u8bc1\u660e\u4e2d\u663e\u8457\u63d0\u5347\u4e86\u6210\u529f\u7387\uff0c\u663e\u793a\u51fa\u6539\u8fdb\u8868\u793a\u65b9\u5f0f\u5bf9\u795e\u7ecf\u5b9a\u7406\u8bc1\u660e\u7cfb\u7edf\u7684\u5de8\u5927\u6f5c\u529b\u3002"}}
{"id": "2507.19015", "categories": ["cs.PL", "cs.LO", "cs.SE"], "pdf": "https://arxiv.org/pdf/2507.19015", "abs": "https://arxiv.org/abs/2507.19015", "authors": ["Samuel Xifaras", "Panagiotis Manolios", "Andrew T. Walter", "William Robertson"], "title": "An Enumerative Embedding of the Python Type System in ACL2s", "comment": "In Proceedings ACL2 2025, arXiv:2507.18567", "summary": "Python is a high-level interpreted language that has become an industry\nstandard in a wide variety of applications. In this paper, we take a first step\ntowards using ACL2s to reason about Python code by developing an embedding of a\nsubset of the Python type system in ACL2s. The subset of Python types we\nsupport includes many of the most commonly used type annotations as well as\nuser-defined types comprised of supported types. We provide ACL2s definitions\nof these types, as well as defdata enumerators that are customized to provide\ncode coverage and identify errors in Python programs. Using the ACL2s\nembedding, we can generate instances of types that can then be used as inputs\nto fuzz Python programs, which allows us to identify bugs in Python code that\nare not detected by state-of-the-art Python type checkers. We evaluate our work\nagainst four open-source repositories, extracting their type information and\ngenerating inputs for fuzzing functions with type signatures that are in the\nsupported subset of Python types. Note that we only use the type signatures of\nfunctions to generate inputs and treat the bodies of functions as black boxes.\nWe measure code coverage, which ranges from about 68% to more than 80%, and\nidentify code patterns that hinder coverage such as complex branch conditions\nand external file system dependencies. We conclude with a discussion of the\nresults and recommendations for future work.", "AI": {"tldr": "\u672c\u8bba\u6587\u5c06Python\u7c7b\u578b\u7684\u4e00\u90e8\u5206\u5d4c\u5165\u5230ACL2s\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7\u5f62\u5f0f\u5316\u5b9a\u4e49\u548c\u81ea\u52a8\u679a\u4e3e\u751f\u6210fuzz\u8f93\u5165\uff0c\u63d0\u5347\u4e86Python\u7a0b\u5e8f\u7684\u8986\u76d6\u7387\u548cbug\u68c0\u6d4b\u80fd\u529b\uff0c\u5e76\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5f97\u5230\u4e86\u9a8c\u8bc1\u3002", "motivation": "\u76ee\u524dPython\u7c7b\u578b\u68c0\u67e5\u5668\u96be\u4ee5\u53d1\u73b0\u6240\u6709\u7c7b\u578b\u76f8\u5173\u7684bug\uff0c\u7f3a\u4e4f\u7406\u8bba\u81ea\u52a8\u5316\u624b\u6bb5\u63d0\u5347\u6d4b\u8bd5\u8f93\u5165\u591a\u6837\u6027\u3002\u672c\u7814\u7a76\u65e8\u5728\u63a2\u7d22\u5f62\u5f0f\u5316\u65b9\u6cd5\u652f\u6301\u4e0b\u81ea\u52a8\u751f\u6210\u9ad8\u8d28\u91cf\u6d4b\u8bd5\u8f93\u5165\u4ee5\u63d0\u5347\u4ee3\u7801\u8986\u76d6\u7387\u548cbug\u53d1\u73b0\u6548\u7387\u3002", "method": "\u5c06Python\u5e38\u7528\u7c7b\u578b\u53ca\u81ea\u5b9a\u4e49\u7c7b\u578b\u5d4c\u5165\u5230ACL2s\uff0c\u5e76\u4e3a\u5176\u5b9a\u4e49defdata\u679a\u4e3e\u5668\uff0c\u7528\u4ee5\u81ea\u52a8\u751f\u6210\u6ee1\u8db3\u7c7b\u578b\u7ea6\u675f\u7684\u6d4b\u8bd5\u8f93\u5165\uff0c\u901a\u8fc7\u8fd9\u4e9b\u8f93\u5165\u8fdb\u884c\u9ed1\u76d2fuzz\u6d4b\u8bd5\uff0c\u5e76\u7edf\u8ba1\u4ee3\u7801\u8986\u76d6\u7387\u548c\u5bfb\u627e\u672a\u88ab\u8986\u76d6\u7684\u4ee3\u7801\u6a21\u5f0f\u3002", "result": "\u5728\u6d4b\u8bd5\u76844\u4e2a\u5f00\u6e90\u5e93\u4e2d\uff0c\u4f7f\u7528\u672c\u65b9\u6cd5\u751f\u6210\u7684\u8f93\u5165\u80fd\u591f\u5b9e\u73b068%-80%\u4ee5\u4e0a\u7684\u4ee3\u7801\u8986\u76d6\u7387\uff0c\u5e76\u53d1\u73b0\u53d7\u590d\u6742\u5206\u652f\u8868\u8fbe\u5f0f\u53ca\u6587\u4ef6\u7cfb\u7edf\u4f9d\u8d56\u5f71\u54cd\u7684\u8986\u76d6\u77ed\u677f\uff0c\u9a8c\u8bc1\u4e86\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u901a\u8fc7\u5c06Python\u90e8\u5206\u7c7b\u578b\u7cfb\u7edf\u5d4c\u5165ACL2s\uff0c\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u7528\u4e8efuzz\u6d4b\u8bd5\u7684\u8f93\u5165\uff0c\u53d1\u73b0\u73b0\u6709\u7c7b\u578b\u68c0\u67e5\u5668\u96be\u4ee5\u68c0\u6d4b\u7684bug\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u6d4b\u8bd5\u8986\u76d6\u7387\u7684\u65b9\u6cd5\u53ca\u672a\u6765\u7814\u7a76\u5efa\u8bae\u3002"}}
{"id": "2507.18718", "categories": ["cs.LO", "F.4.1"], "pdf": "https://arxiv.org/pdf/2507.18718", "abs": "https://arxiv.org/abs/2507.18718", "authors": ["Ronald Fagin", "Neil Immerman", "Phokion Kolaitis", "Jonathan Lenchner", "Rik Sengupta"], "title": "Who Wins the Multi-Structural Game?", "comment": "27 pages, 7 figures", "summary": "Combinatorial games played between two players, called Spoiler and\nDuplicator, have often been used to capture syntactic properties of formal\nlogical languages. For instance, the widely used Ehrenfeucht-Fra\\\"iss\\'e (EF)\ngame captures the syntactic measure of quantifier rank of first-order formulas.\nFor every such game, there is an associated natural decision problem: \"given an\ninstance of the game, does Spoiler win the game on that instance?\" For EF\ngames, this problem was shown to be PSPACE-complete by Pezzoli in 1998. In this\npresent paper, we show that the same problem for the *multi-structural* (MS)\ngames of recent interest is PSPACE-hard, but contained in NEXPTIME. In the\nprocess, we also resolve an open problem posed by Pezzoli about the dependence\nof the hardness results for EF games on the arity of the schema under\nconsideration. Our techniques combine adaptations of Pezzoli's constructions\ntogether with insights from the theory of inapproximability of optimization\nproblems, as well as the recently developed technique of parallel play for MS\ngames.", "AI": {"tldr": "\u672c\u7814\u7a76\u5206\u6790\u4e86\u591a\u7ed3\u6784\u7ec4\u5408\u6e38\u620f\u7684\u590d\u6742\u5ea6\uff0c\u53d1\u73b0\u5176\u76f8\u5173\u51b3\u7b56\u95ee\u9898\u4e3aPSPACE-hard\u4e14\u5728NEXPTIME\u5185\uff0c\u5e76\u89e3\u51b3\u4e86\u6b64\u524d\u5173\u4e8eEF\u6e38\u620f\u590d\u6742\u5ea6\u4e0e\u5143\u7ec4\u5143\u6570\u5173\u7cfb\u7684\u5f00\u653e\u95ee\u9898\u3002", "motivation": "\u7528\u7ec4\u5408\u6e38\u620f\uff08\u5982Ehrenfeucht-Fra\u00efss\u00e9\u6e38\u620f\uff09\u523b\u753b\u5f62\u5f0f\u903b\u8f91\u8bed\u8a00\u7684\u53e5\u6cd5\u6027\u8d28\u5df2\u7531\u6765\u5df2\u4e45\uff0c\u4f46\u5bf9\u4e8e\u65b0\u8fd1\u5173\u6ce8\u7684\u591a\u7ed3\u6784\uff08MS\uff09\u6e38\u620f\uff0c\u5176\u5bf9\u5e94\u51b3\u7b56\u95ee\u9898\u7684\u590d\u6742\u5ea6\u672a\u88ab\u5b8c\u5168\u89e3\u51b3\uff0c\u5c24\u5176\u662f\u5176\u4e0e\u7ecf\u5178EF\u6e38\u620f\u590d\u6742\u5ea6\u7684\u6bd4\u8f83\u4ee5\u53ca\u5bf9\u6e38\u620f\u5bf9\u8c61\u7ed3\u6784\u7684\u5f71\u54cd\u3002\u56e0\u6b64\uff0c\u672c\u6587\u65e8\u5728\u5f25\u8865\u8fd9\u4e00\u77e5\u8bc6\u7a7a\u767d\uff0c\u5e76\u89e3\u51b3Pezzoli\u63d0\u51fa\u7684\u4e00\u4e2a\u76f8\u5173\u5f00\u653e\u95ee\u9898\u3002", "method": "\u91c7\u7528\u4e86Pezzoli\u7684\u590d\u6742\u5ea6\u6784\u9020\u65b9\u6cd5\uff0c\u7ed3\u5408\u4f18\u5316\u95ee\u9898\u4e0d\u53ef\u8fd1\u4f3c\u6027\u7406\u8bba\u4e2d\u7684\u89c1\u89e3\uff0c\u4ee5\u53ca\u8fd1\u671f\u63d0\u51fa\u7684\u591a\u7ed3\u6784\u6e38\u620f\u7684\u5e76\u884c\u73a9\u6280\u672f\uff0c\u5bf9MS\u6e38\u620f\u7684\u51b3\u7b56\u95ee\u9898\u5c55\u5f00\u590d\u6742\u5ea6\u5206\u6790\u3002", "result": "\u8bc1\u660e\u4e86MS\u6e38\u620f\u7684\u2018Spoiler\u662f\u5426\u83b7\u80dc\u2019\u51b3\u7b56\u95ee\u9898\u662fPSPACE-hard\u7684\uff0c\u4f46\u4e0a\u754c\u88ab\u9650\u5236\u5728NEXPTIME\u5185\u3002\u540c\u65f6\uff0c\u89e3\u51b3\u4e86EF\u6e38\u620f\u590d\u6742\u5ea6\u5bf9\u6a21\u5f0f\u5143\u7ec4\u5143\u6570\uff08arity\uff09\u4f9d\u8d56\u6027\u7684\u5f00\u653e\u95ee\u9898\u3002", "conclusion": "MS\u6e38\u620f\u7684\u51b3\u7b56\u95ee\u9898\u6bd4EF\u6e38\u620f\u66f4\u96be\uff08PSPACE-hard\uff0c\u4f46\u4e0d\u8d85\u8fc7NEXPTIME\uff09\uff0c\u5e76\u9996\u6b21\u660e\u786e\u4e86EF\u6e38\u620f\u590d\u6742\u5ea6\u4e0e\u6a21\u5f0f\u5143\u7ec4\u5143\u6570\u7684\u5173\u7cfb\uff1b\u65b9\u6cd5\u4e0a\u7684\u521b\u65b0\u662f\u5c06\u591a\u9886\u57df\u7406\u8bba\u65b9\u6cd5\u4e0e\u5e76\u884c\u73a9\u6280\u672f\u76f8\u7ed3\u5408\u3002"}}
{"id": "2507.19176", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.19176", "abs": "https://arxiv.org/abs/2507.19176", "authors": ["Weijun Chen", "Yuxi Fu", "Huan Long"], "title": "A Programming Language for Feasible Solutions", "comment": null, "summary": "Runtime efficiency and termination are crucial properties in the studies of\nprogram verification. Instead of dealing with these issues in an ad hoc manner,\nit would be useful to develop a robust framework in which such properties are\nguaranteed by design. This paper introduces a new imperative programming\nlanguage whose design is grounded in a static type system that ensures the\nfollowing equivalence property: All definable programs are guaranteed to run in\npolynomial time; Conversely, all problems solvable in polynomial time can be\nsolved by some programs of the language. The contribution of this work is\ntwofold. On the theoretical side, the foundational equivalence property is\nestablished, and the proof of the equivalence theorem is non-trivial. On the\npractical side, a programming approach is proposed that can streamline program\nanalysis and verification for feasible computations. An interpreter for the\nlanguage has been implemented, demonstrating the feasibility of the approach in\npractice.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u547d\u4ee4\u5f0f\u8bed\u8a00\uff0c\u901a\u8fc7\u7c7b\u578b\u7cfb\u7edf\u672c\u8d28\u6027\u4fdd\u8bc1\u4e86\u7a0b\u5e8f\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u7ec8\u6b62\u8fd0\u884c\uff0c\u5e76\u5177\u5907\u5f3a\u5927\u8868\u8fbe\u80fd\u529b\uff0c\u9a8c\u8bc1\u548c\u5b9e\u73b0\u5747\u5df2\u5b8c\u6210\uff0c\u6709\u52a9\u4e8e\u9ad8\u6548\u7a0b\u5e8f\u9a8c\u8bc1\u3002", "motivation": "\u5728\u7a0b\u5e8f\u9a8c\u8bc1\u9886\u57df\uff0c\u8fd0\u884c\u65f6\u6548\u7387\u548c\u7ec8\u6b62\u6027\u662f\u5173\u952e\u95ee\u9898\uff0c\u73b0\u6709\u65b9\u6848\u901a\u5e38\u662f\u4e34\u65f6\u89e3\u51b3\u3002\u4f5c\u8005\u5e0c\u671b\u8bbe\u8ba1\u4e00\u79cd\u4f53\u7cfb\uff0c\u80fd\u5728\u8bbe\u8ba1\u4e4b\u521d\u5c31\u4fdd\u8bc1\u8fd9\u4e9b\u6027\u8d28\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd9\u79cd\u8bed\u8a00\u5efa\u7acb\u5728\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\u4e4b\u4e0a\uff0c\u5176\u6838\u5fc3\u8bbe\u8ba1\u662f\u6240\u6709\u5b9a\u4e49\u7684\u7a0b\u5e8f\u90fd\u4fdd\u8bc1\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fd0\u884c\uff0c\u4e14\u6240\u6709\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u90fd\u80fd\u88ab\u8be5\u8bed\u8a00\u63cf\u8ff0\u3002\u901a\u8fc7\u7406\u8bba\u8bc1\u660e\u8be5\u7b49\u4ef7\u6027\u8d28\uff0c\u5e76\u5b9e\u73b0\u4e86\u89e3\u91ca\u5668\u3002", "result": "1. \u7406\u8bba\u4e0a\uff0c\u8bc1\u660e\u4e86\u8be5\u8bed\u8a00\u4e0e\u591a\u9879\u5f0f\u65f6\u95f4\u53ef\u89e3\u95ee\u9898\u7684\u7b49\u4ef7\u6027\uff1b2. \u5b9e\u73b0\u4e86\u8be5\u8bed\u8a00\u7684\u89e3\u91ca\u5668\uff0c\u5c55\u793a\u4e86\u5176\u5b9e\u7528\u6027\u548c\u53ef\u884c\u6027\u3002", "conclusion": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u578b\u547d\u4ee4\u5f0f\u8bed\u8a00\uff0c\u901a\u8fc7\u7c7b\u578b\u7cfb\u7edf\u4fdd\u8bc1\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u7ec8\u6b62\u6027\uff0c\u7406\u8bba\u548c\u5b9e\u8df5\u4e0a\u90fd\u5c55\u793a\u4e86\u5176\u6709\u6548\u6027\uff0c\u5bf9\u53ef\u884c\u8ba1\u7b97\u7684\u7a0b\u5e8f\u5206\u6790\u4e0e\u9a8c\u8bc1\u5e26\u6765\u4e86\u4fbf\u5229\u3002"}}
{"id": "2507.18798", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2507.18798", "abs": "https://arxiv.org/abs/2507.18798", "authors": ["Victor Barroso-Nascimento"], "title": "Higher-order Kripke models for intuitionistic and non-classical modal logics", "comment": null, "summary": "This paper introduces higher-order Kripke models, a generalization of\nstandard Kripke models that is remarkably close to Kripke's original idea -\nboth mathematically and conceptually. Standard Kripke models are now considered\n$0$-ary models, whereas an $n$-ary model for $n > 0$ is a model whose set of\nobjects (''possible worlds'') contains only $(n-1)$-ary Kripke models. Models\nwith infinitely many layers are also considered. This framework is obtained by\npromoting a radical change of perspective in how modal semantics for\nnon-classical logics are defined: just like classical modalities are obtained\nthrough use of an accessibility relation between classical propositional\nmodels, non-classical modalities are now obtained through use of an\naccessibility relation between non-classical propositional models (even when\nthey are Kripke models already). The paper introduces the new models after\ndealing specifically with the case of intuitionistic modal logic. It is shown\nthat, depending on which intuitionistic $0$-ary propositional models are\nallowed, we may obtain $1$-ary models equivalent to either birelational models\nfor $IK$ or for a new logic called $MK$. Those $1$-ary models have an intuitive\nreading that adds to the interpretation of intuitionistic models in terms of\n''timelines'' the concept of ''alternative timelines''. More generally, the\n$1$-ary models can be read as defining a concept of ''alternative'' for any\nsubstantive interpretation of the $0$-ary models. The semantic clauses for\nnecessity and possibility of $MK$ are also modular and can be used to obtain\nsimilar modal semantics for every non-classical logic, each of which can be\nprovided with a similar intuitive reading. After intuitionistic modal logic is\ndealt with, the general structure of High-order Kripke Models and some of its\nvariants are defined, and a series of conjectures about their properties are\nstated.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u9ad8\u9636Kripke\u6a21\u578b\uff0c\u663e\u8457\u62d3\u5c55\u4e86\u4f20\u7edfKripke\u6a21\u578b\u7528\u4e8e\u975e\u7ecf\u5178\u903b\u8f91\u7684\u8bed\u4e49\u8868\u8fbe\u529b\uff0c\u5e76\u901a\u8fc7\u5177\u4f53\u5206\u6790\u76f4\u89c9\u4e3b\u4e49\u6a21\u6001\u903b\u8f91\uff0c\u8d4b\u4e88\u6a21\u578b\u65b0\u7684\u76f4\u89c2\u8be0\u91ca\u5e76\u63a8\u5e7f\u81f3\u5e7f\u6cdb\u7684\u975e\u7ecf\u5178\u903b\u8f91\u3002", "motivation": "\u6807\u51c6\u7684Kripke\u6a21\u578b\u5728\u5904\u7406\u975e\u7ecf\u5178\u903b\u8f91\u7279\u522b\u662f\u76f4\u89c9\u4e3b\u4e49\u6a21\u6001\u903b\u8f91\u65f6\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff0c\u96be\u4ee5\u7528\u4e8e\u89e3\u91ca\u5177\u6709\u66f4\u590d\u6742\u8bed\u4e49\u5c42\u6b21\u7ed3\u6784\u7684\u7cfb\u7edf\u3002\u4f5c\u8005\u8bd5\u56fe\u901a\u8fc7\u5bf9Kripke\u6a21\u578b\u8fdb\u884c\u9ad8\u9636\u63a8\u5e7f\u6765\u7a81\u7834\u73b0\u6709\u65b9\u6cd5\u7684\u4e0d\u8db3\u3002", "method": "\u4f5c\u8005\u63a8\u5e7f\u4e86Kripke\u6a21\u578b\uff0c\u5c06\u5176\u6269\u5c55\u4e3a\u9ad8\u9636Kripke\u6a21\u578b\uff0c\u5141\u8bb8\u53ef\u80fd\u4e16\u754c\u81ea\u8eab\u662f\u66f4\u4f4e\u9636\u7684Kripke\u6a21\u578b\uff0c\u4ece\u800c\u5f15\u5165\u591a\u5c42\u6b21\u7684\u6a21\u578b\u7ed3\u6784\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u4e86\u6a21\u6001\u8bed\u4e49\u7684\u53ef\u8fbe\u6027\u5173\u7cfb\u3002\u9996\u5148\u8be6\u7ec6\u5206\u6790\u4e86\u76f4\u89c9\u4e3b\u4e49\u6a21\u6001\u903b\u8f91\u7684\u60c5\u5f62\uff0c\u968f\u540e\u5b9a\u4e49\u4e86\u66f4\u9ad8\u9636\u6a21\u578b\u7684\u7ed3\u6784\u548c\u53d8\u4f53\uff0c\u5e76\u63d0\u51fa\u76f8\u5173\u731c\u60f3\u3002", "result": "\u901a\u8fc7\u63a8\u5e7fKripke\u6a21\u578b\u4e3a\u9ad8\u9636\u5f62\u5f0f\uff0c\u4f5c\u8005\u6784\u5efa\u4e86\u53ef\u5904\u7406\u591a\u5c42\u8bed\u4e49\u6846\u67b6\u7684\u6a21\u578b\u3002\u7ed3\u679c\u8868\u660e\uff0c\u9488\u5bf9\u5141\u8bb8\u76840\u9636\u6a21\u578b\u9009\u62e9\uff0c\u53ef\u4ee5\u5f97\u5230\u7b49\u4ef7\u4e8eIK\u53cc\u5173\u7cfb\u6a21\u578b\u6216\u65b0\u5f15\u5165\u7684MK\u903b\u8f91\u76841\u9636\u6a21\u578b\u3002\u8fd9\u4e9b1\u9636\u6a21\u578b\u8d4b\u4e88\u76f4\u89c9\u4e3b\u4e49\u6a21\u578b\u201c\u66ff\u4ee3\u7406\u7ebf\u201d\u542b\u4e49\uff0c\u4e14\u76f8\u5e94\u7684\u6a21\u6001\u8bed\u4e49\u6761\u6b3e\u5177\u6709\u6a21\u5757\u5316\u7279\u5f81\uff0c\u9002\u7528\u4e8e\u5176\u4ed6\u975e\u7ecf\u5178\u903b\u8f91\u3002\u8fd8\u7ed9\u51fa\u4e86\u4e00\u822c\u9ad8\u9636\u6a21\u578b\u7ed3\u6784\u53ca\u5176\u63a8\u6d4b\u6027\u8d28\u3002", "conclusion": "\u9ad8\u9636Kripke\u6a21\u578b\u4e3a\u975e\u7ecf\u5178\u903b\u8f91\uff08\u5982\u76f4\u89c9\u4e3b\u4e49\u6a21\u6001\u903b\u8f91\uff09\u7684\u8bed\u4e49\u63d0\u4f9b\u4e86\u66f4\u4e00\u822c\u5316\u3001\u66f4\u5bcc\u8868\u73b0\u529b\u7684\u5206\u6790\u5de5\u5177\uff0c\u80fd\u591f\u5904\u7406\u66f4\u590d\u6742\u7684\u201c\u53ef\u80fd\u4e16\u754c\u201d\u5c42\u6b21\uff0c\u5e76\u4e3a\u975e\u7ecf\u5178\u6a21\u6001\u903b\u8f91\u63d0\u4f9b\u4e86\u65b0\u7684\u76f4\u89c2\u89e3\u91ca\u548c\u66f4\u5e7f\u6cdb\u7684\u9002\u7528\u6027\u3002"}}
{"id": "2507.18742", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.18742", "abs": "https://arxiv.org/abs/2507.18742", "authors": ["V\u00edctor Gallego"], "title": "Specification Self-Correction: Mitigating In-Context Reward Hacking Through Test-Time Refinement", "comment": "Accepted to SCALR Workshop @ COLM 2025", "summary": "Language models (LMs) are susceptible to in-context reward hacking, where\nthey exploit flaws in tainted or faulty written specifications or rubrics to\nachieve high scores without fulfilling the user's true intent. We introduce\nSpecification Self-Correction (SSC), a novel, test-time framework that enables\nan LM to identify and correct flaws within its own guiding specification. SSC\nemploys a multi-step inference process where the model first generates a\nresponse based on a potentially tainted specification, critiques its output,\nand then revises the specification itself to remove the exploitable loophole. A\nfinal, more robust response is then generated using this self-corrected\nspecification. Across experiments spanning creative writing and agentic coding\ntasks with several LMs, we demonstrate that while models initially game tainted\nspecifications in 50-70\\% of cases, the SSC process reduces this vulnerability\nby over 90\\%. This dynamic repair occurs at inference time, requires no weight\nmodification, and leads to more robustly aligned model behavior. Code at\nhttps://github.com/vicgalle/specification-self-correction .", "AI": {"tldr": "\u63d0\u51faSSC\u65b9\u6cd5\uff0c\u4f7f\u5927\u8bed\u8a00\u6a21\u578b\u80fd\u5728\u63a8\u7406\u9636\u6bb5\u4e3b\u52a8\u68c0\u6d4b\u5e76\u4fee\u6b63\u53c2\u8003\u89c4\u8303\u4e2d\u7684\u6f0f\u6d1e\uff0c\u5927\u5e45\u51cf\u5c11\u2018\u94bb\u6f0f\u6d1e\u2019\u884c\u4e3a\uff0c\u65e0\u9700\u5fae\u8c03\u6743\u91cd\uff0c\u5b9e\u8df5\u4e2d\u5bf9\u9f50\u6548\u679c\u663e\u8457\u63d0\u5347\u3002", "motivation": "\u5f53\u524d\u5927\u8bed\u8a00\u6a21\u578b\uff08LM\uff09\u5bb9\u6613\u53d7\u5230\u4e0a\u4e0b\u6587\u4e2d\u5b58\u5728\u7f3a\u9677\u6216\u6709\u8bef\u7684\u6807\u51c6\uff08\u5982\u8bc4\u5206\u6807\u51c6\u3001\u89c4\u8303\uff09\u5f71\u54cd\uff0c\u4ece\u800c\u2018\u94bb\u6f0f\u6d1e\u2019\u83b7\u5f97\u9ad8\u5206\uff0c\u4f46\u672a\u771f\u6b63\u5b8c\u6210\u7528\u6237\u610f\u56fe\u3002\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u2018in-context reward hacking\u2019\uff0c\u662f\u5f71\u54cd\u6a21\u578b\u5b9e\u9645\u5e94\u7528\u53ef\u9760\u6027\u7684\u96be\u9898\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u63a8\u7406\u65f6\u6846\u67b6Specification Self-Correction\uff08SSC\uff09\uff0c\u8be5\u65b9\u6cd5\u5141\u8bb8\u8bed\u8a00\u6a21\u578b\u81ea\u884c\u8bc6\u522b\u548c\u4fee\u6b63\u5176\u53c2\u8003\u89c4\u8303\u4e2d\u7684\u7f3a\u9677\u3002SSC\u5177\u4f53\u91c7\u7528\u591a\u6b65\u63a8\u7406\u6d41\u7a0b\uff1a\u6a21\u578b\u9996\u5148\u4f9d\u7167\u53ef\u80fd\u6709\u7f3a\u9677\u7684\u89c4\u8303\u751f\u6210\u521d\u6b65\u56de\u7b54\uff0c\u7136\u540e\u5bf9\u8be5\u56de\u7b54\u8fdb\u884c\u6279\u5224\uff0c\u63a5\u7740\u4fee\u6b63\u539f\u89c4\u8303\u4ee5\u5220\u9664\u53ef\u88ab\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u6700\u540e\u57fa\u4e8e\u4fee\u6b63\u540e\u7684\u89c4\u8303\u751f\u6210\u66f4\u5065\u5168\u7684\u56de\u7b54\u3002\u6574\u4e2a\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u6a21\u578b\u6743\u91cd\uff0c\u5728\u63a8\u7406\u9636\u6bb5\u52a8\u6001\u5b8c\u6210\u3002", "result": "\u5728\u6db5\u76d6\u521b\u610f\u5199\u4f5c\u548c\u4ee3\u7801\u4efb\u52a1\u7684\u591a\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u591a\u4e2a\u8bed\u8a00\u6a21\u578b\u5728\u521d\u59cb\u6761\u4ef6\u4e0b\u2018\u94bb\u6f0f\u6d1e\u2019\u7684\u6bd4\u4f8b\u4e3a50-70%\uff0c\u4f46\u7ecf\u8fc7SSC\u6d41\u7a0b\u5904\u7406\u540e\uff0c\u8be5\u8106\u5f31\u6027\u964d\u4f4e\u4e8690%\u4ee5\u4e0a\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6a21\u578b\u751f\u6210\u7ed3\u679c\u5bf9\u771f\u5b9e\u610f\u56fe\u7684\u5bf9\u9f50\u53ca\u5065\u58ee\u6027\u3002", "conclusion": "SSC\u65b9\u6cd5\u4e3a\u89e3\u51b3\u5927\u8bed\u8a00\u6a21\u578b\u5728\u63a8\u7406\u65f6\u89c4\u8303\u7f3a\u9677\u5e26\u6765\u7684\u884c\u4e3a\u504f\u5dee\u63d0\u4f9b\u4e86\u6709\u6548\u624b\u6bb5\uff0c\u53ef\u4ee5\u52a8\u6001\u4fee\u590d\u89c4\u8303\u3001\u63d0\u5347\u6a21\u578b\u5bf9\u7528\u6237\u610f\u56fe\u7684\u5fe0\u5b9e\u5ea6\uff1b\u6280\u672f\u7b80\u5355\u3001\u65e0\u9700\u91cd\u8bad\u7ec3\uff0c\u6709\u826f\u597d\u7684\u5e94\u7528\u6f5c\u529b\u3002"}}
{"id": "2507.18726", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.18726", "abs": "https://arxiv.org/abs/2507.18726", "authors": ["Sadia Afrin Mim"], "title": "Exploring the Landscape of Fairness Interventions in Software Engineering", "comment": null, "summary": "Current developments in AI made it broadly significant for reducing human\nlabor and expenses across several essential domains, including healthcare and\nfinance. However, the application of AI in the actual world poses multiple\nrisks and disadvantages due to potential risk factors in data (e.g., biased\ndataset). Practitioners developed a number of fairness interventions for\naddressing these kinds of problems. The paper acts as a survey, summarizing the\nvarious studies and approaches that have been developed to address fairness\nissues", "AI": {"tldr": "\u672c\u6587\u7efc\u8ff0\u4e86AI\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u9762\u4e34\u7684\u516c\u5e73\u6027\u6311\u6218\u53ca\u76f8\u5173\u5e94\u5bf9\u65b9\u6cd5\uff0c\u5bf9\u73b0\u6709\u7814\u7a76\u8fdb\u884c\u4e86\u5f52\u7eb3\u603b\u7ed3\u3002", "motivation": "AI\u5728\u533b\u7597\u3001\u91d1\u878d\u7b49\u91cd\u8981\u9886\u57df\u5e7f\u6cdb\u5e94\u7528\u4e8e\u51cf\u5c11\u4eba\u5de5\u548c\u6210\u672c\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6570\u636e\u5b58\u5728\u504f\u89c1\u7b49\u98ce\u9669\u56e0\u7d20\uff0cAI\u7cfb\u7edf\u9762\u4e34\u8bf8\u591a\u98ce\u9669\u548c\u4e0d\u5229\u5f71\u54cd\u3002", "method": "\u672c\u8bba\u6587\u91c7\u7528\u7efc\u8ff0\uff08survey\uff09\u65b9\u6cd5\uff0c\u6c47\u603b\u548c\u603b\u7ed3\u4e86\u5df2\u6709\u6587\u732e\u4e2d\u9762\u5411\u516c\u5e73\u6027\u95ee\u9898\u6240\u5f00\u53d1\u7684\u5404\u79cd\u7814\u7a76\u548c\u6280\u672f\u624b\u6bb5\u3002", "result": "\u672c\u6587\u5bf9\u73b0\u6709\u4e3a\u5e94\u5bf9AI\u516c\u5e73\u6027\u95ee\u9898\u800c\u63d0\u51fa\u7684\u591a\u79cd\u65b9\u6cd5\u548c\u5e72\u9884\u63aa\u65bd\u8fdb\u884c\u4e86\u7cfb\u7edf\u68b3\u7406\u548c\u5f52\u7eb3\uff0c\u603b\u7ed3\u4e86\u5404\u7c7b\u7814\u7a76\u7684\u6210\u679c\u4e0e\u5c40\u9650\u3002", "conclusion": "\u9488\u5bf9AI\u7cfb\u7edf\u5728\u73b0\u5b9e\u5e94\u7528\u4e2d\u53ef\u80fd\u56e0\u6570\u636e\u504f\u89c1\u7b49\u95ee\u9898\u800c\u5f15\u53d1\u7684\u516c\u5e73\u6027\u6311\u6218\uff0c\u5b66\u754c\u5df2\u63d0\u51fa\u5e76\u5b9e\u8df5\u4e86\u591a\u79cd\u5e72\u9884\u4e0e\u89e3\u51b3\u9014\u5f84\uff0c\u672a\u6765\u76f8\u5173\u7814\u7a76\u4ecd\u9700\u6301\u7eed\u63a8\u8fdb\u3002"}}
{"id": "2507.18755", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2507.18755", "abs": "https://arxiv.org/abs/2507.18755", "authors": ["Chandra Maddila", "Adam Tait", "Claire Chang", "Daniel Cheng", "Nauman Ahmad", "Vijayaraghavan Murali", "Marshall Roch", "Arnaud Avondet", "Aaron Meltzer", "Victor Montalvao", "Michael Hopko", "Chris Waterson", "Parth Thakkar", "Renuka Fernandez", "Kristian Kristensen", "Sivan Barzily", "Sherry Chen", "Rui Abreu", "Nachiappan Nagappan", "Payam Shodjai", "Killian Murphy", "James Everingham", "Aparna Ramani", "Peter C. Rigby"], "title": "Agentic Program Repair from Test Failures at Scale: A Neuro-symbolic approach with static analysis and test execution feedback", "comment": null, "summary": "Aim: With the advent of LLMs, sophisticated agentic program repair has become\nviable at large organizations with large codebases. In this work, we develop an\nEngineering Agent that fixes the source code based on test failures at scale\nacross diverse software offerings internally.\n  Method: Using Llama as the base, we employ the ReAct harness to develop an\nagent. We start with a test failure that was triaged by a rule-based test\nfailure bot. We then set up an agentic harness and allow the agent to reason\nand run a set of 15 actions from reading a file to generating a patch. We\nprovide feedback to the agent through static analysis and test failures so it\ncan refine its solution. We leverage an LLM-as-a-Judge to ensure that the patch\nconforms to the standards followed by a human review to land fixes.\n  Benchmark Findings: We curated offline benchmarks for our patch generator,\nthe Engineering Agent loop, and the LLM-as-a-Judge. In offline evaluations we\nfound that a specialized 70B model is highly competitive with the much larger\nbut vanilla Llama-405B. In an ablation study, we found that the ReAct harness\n(neural model) benefited from the symbolic information from static analysis\ntools and test execution traces. A model that strikes a balance between the\nsolve rate and error rate vs the cost and latency has a benchmark solve rate of\n42.3% using an average 11.8 feedback iterations.\n  Production Findings: In a three month period, 80% of the generated fixes were\nreviewed, of which 31.5% were landed (25.5% of the total number of generated\nfixes).\n  Feedback from Engineers: We used open coding to extract qualitative themes\nfrom engineers' feedback. We saw positive feedback in the form of quick\napprovals, gratitude, and surprise. We also found mixed feedback when the\nEngineering Agent's solution was partially correct and it served as a good\nstarting point.", "AI": {"tldr": "\u672c\u6587\u4ecb\u7ecd\u4e86\u57fa\u4e8eLlama\u4e0eReAct\u6846\u67b6\u7684\u667a\u80fd\u5de5\u7a0b\u4ee3\u7406\u7cfb\u7edf\uff0c\u80fd\u5927\u89c4\u6a21\u81ea\u52a8\u4fee\u590d\u4ee3\u7801\u3002\u4fee\u590d\u6709\u6548\u7387\u8f83\u9ad8\uff0c\u90e8\u5206\u81ea\u52a8\u4fee\u590d\u76f4\u63a5\u843d\u5730\uff0c\u83b7\u5f97\u5de5\u7a0b\u5e08\u666e\u904d\u8ba4\u53ef\u3002", "motivation": "\u968f\u7740\u5927\u6a21\u578b\uff08LLMs\uff09\u7684\u51fa\u73b0\uff0c\u5728\u5927\u578b\u7ec4\u7ec7\u4e0e\u5927\u89c4\u6a21\u4ee3\u7801\u5e93\u4e2d\uff0c\u5b9e\u73b0\u590d\u6742\u7684\u81ea\u52a8\u5316\u7a0b\u5e8f\u4fee\u590d\u53d8\u5f97\u53ef\u884c\u3002\u672c\u6587\u65e8\u5728\u5f00\u53d1\u4e00\u79cd\u5de5\u7a0b\u4ee3\u7406\uff0c\u53ef\u4ee5\u81ea\u52a8\u4fee\u590d\u56e0\u6d4b\u8bd5\u5931\u8d25\u800c\u51fa\u73b0\u7684\u6e90\u4ee3\u7801\u9519\u8bef\uff0c\u63d0\u9ad8\u4ee3\u7801\u7ef4\u62a4\u6548\u7387\u3002", "method": "\u4ee5Llama\u4e3a\u57fa\u7840\uff0c\u91c7\u7528ReAct\u6846\u67b6\u5f00\u53d1\u667a\u80fd\u5de5\u7a0b\u4ee3\u7406\u3002\u6d41\u7a0b\u4ece\u89c4\u5219\u9a71\u52a8\u7684\u6d4b\u8bd5\u5931\u8d25\u673a\u5668\u4eba\u5206\u7c7b\u540e\u7684\u6d4b\u8bd5\u5931\u8d25\u5f00\u59cb\u3002\u4e3a\u4ee3\u7406\u8bbe\u7f6e\u4e8615\u79cd\u52a8\u4f5c\uff08\u5982\u8bfb\u53d6\u6587\u4ef6\u3001\u751f\u6210\u8865\u4e01\u7b49\uff09\uff0c\u901a\u8fc7\u9759\u6001\u5206\u6790\u548c\u6d4b\u8bd5\u53cd\u9988\u4e0d\u65ad\u8fed\u4ee3\u4fee\u590d\u65b9\u6848\u3002\u91c7\u7528LLM-as-a-Judge\u786e\u4fdd\u8865\u4e01\u8fbe\u5230\u6807\u51c6\uff0c\u6700\u7ec8\u7531\u4eba\u7c7b\u5ba1\u6838\u5e76\u63d0\u4ea4\u4fee\u590d\u3002", "result": "\u79bb\u7ebf\u8bc4\u6d4b\u663e\u793a\uff0c\u57fa\u4e8e70B\u53c2\u6570\u7684\u5b9a\u5236\u6a21\u578b\u5728\u6548\u679c\u4e0a\u4e0e\u66f4\u5927\u53c2\u6570\u91cf\u7684Llama-405B\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u4e14ReAct\u6846\u67b6\u7ed3\u5408\u7b26\u53f7\u4fe1\u606f\u53ef\u63d0\u5347\u6548\u679c\u3002\u57fa\u51c6\u4efb\u52a1\u4fee\u590d\u6210\u529f\u7387\u4e3a42.3%\uff0c\u5e73\u5747\u970011.8\u6b21\u53cd\u9988\u3002\u5b9e\u9645\u5e94\u7528\u4e09\u4e2a\u6708\u5185\uff0c80%\u7684\u81ea\u52a8\u4fee\u590d\u7ecf\u4eba\u5de5\u5ba1\u6838\uff0c31.5%\u5b9e\u9645\u5e94\u7528\u5230\u4ee3\u7801\u5e93\u3002", "conclusion": "\u5de5\u7a0b\u4ee3\u7406\u5229\u7528\u5927\u6a21\u578b\u548c\u81ea\u52a8\u53cd\u9988\u673a\u5236\uff0c\u80fd\u6709\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u4ee3\u7801\u4fee\u590d\u4efb\u52a1\uff0c\u63d0\u5347\u6548\u7387\u5e76\u51cf\u8f7b\u4eba\u5de5\u8d1f\u62c5\u3002\u4eba\u7c7b\u5ba1\u6838\u540e\uff0c\u90e8\u5206\u81ea\u52a8\u4fee\u590d\u53ef\u76f4\u63a5\u843d\u5730\uff0c\u90e8\u5206\u65b9\u6848\u4f5c\u4e3a\u5de5\u7a0b\u5e08\u4fee\u6539\u7684\u826f\u597d\u8d77\u70b9\u3002\u6280\u672f\u4e0e\u4eba\u5de5\u534f\u4f5c\u7ed3\u5408\uff0c\u5b9e\u9645\u6548\u679c\u5f97\u5230\u5de5\u7a0b\u5e08\u603b\u4f53\u8ba4\u53ef\u3002"}}
{"id": "2507.19008", "categories": ["cs.LO", "F.4.1"], "pdf": "https://arxiv.org/pdf/2507.19008", "abs": "https://arxiv.org/abs/2507.19008", "authors": ["Grant Jurgensen"], "title": "A Proof of the Schr\u00f6der-Bernstein Theorem in ACL2", "comment": "In Proceedings ACL2 2025, arXiv:2507.18567", "summary": "The Schr\\\"oder-Bernstein theorem states that, for any two sets P and Q, if\nthere exists an injection from P to Q and an injection from Q to P, then there\nmust exist a bijection between the two sets. Classically, it follows that the\nordering of the cardinal numbers is antisymmetric. We describe a formulation\nand verification of the Schr\\\"oder-Bernstein theorem in ACL2 following a\nwell-known proof, introducing a theory of chains to define a non-computable\nwitness.", "AI": {"tldr": "\u672c\u6587\u5728ACL2\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u5f62\u5f0f\u5316\u5e76\u9a8c\u8bc1\u4e86Schr\u00f6der-Bernstein\u5b9a\u7406\uff0c\u5f15\u5165\u94fe\u7406\u8bba\u6765\u6784\u9020\u5173\u952e\u8bc1\u660e\u5bf9\u8c61\uff0c\u63a8\u52a8\u4e86\u96c6\u5408\u8bba\u5b9a\u7406\u7684\u673a\u68b0\u5316\u8bc1\u660e\u3002", "motivation": "Schr\u00f6der-Bernstein\u5b9a\u7406\u662f\u96c6\u5408\u8bba\u4e2d\u7684\u57fa\u7840\u5b9a\u7406\uff0c\u4f20\u7edf\u4e0a\u8be5\u5b9a\u7406\u7684\u8bc1\u660e\u4e0e\u65e0\u7a77\u96c6\u5408\u548c\u57fa\u6570\u7684\u7b49\u4ef7\u6027\u5bc6\u5207\u76f8\u5173\u3002\u672c\u6587\u5173\u6ce8\u5c06\u8fd9\u4e00\u7ecf\u5178\u5b9a\u7406\u5728ACL2\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u5f62\u5f0f\u5316\uff0c\u6ee1\u8db3\u81ea\u52a8\u5316\u9a8c\u8bc1\u9700\u6c42\u3002", "method": "\u4f5c\u8005\u91c7\u7528ACL2\u5b9a\u7406\u8bc1\u660e\u5668\uff0c\u5b9e\u73b0\u5e76\u9a8c\u8bc1\u4e86Schr\u00f6der-Bernstein\u5b9a\u7406\u3002\u4ed6\u4eec\u9075\u5faa\u4e86\u4e00\u79cd\u8457\u540d\u7684\u8bc1\u660e\u601d\u8def\uff0c\u5f15\u5165\u4e86\u94fe\u7406\u8bba\uff08theory of chains\uff09\u6765\u6784\u9020\u975e\u53ef\u8ba1\u7b97\u7684\u89c1\u8bc1\u3002", "result": "\u5b9e\u73b0\u4e86Schr\u00f6der-Bernstein\u5b9a\u7406\u5728ACL2\u4e2d\u7684\u5f62\u5f0f\u5316\u8bc1\u660e\uff0c\u5e76\u7528\u94fe\u7406\u8bba\u5b9a\u4e49\u4e86\u5173\u952e\u7684\u975e\u53ef\u8ba1\u7b97\u6620\u5c04\u3002\u9a8c\u8bc1\u4e86\u8be5\u5b9a\u7406\u5728ACL2\u4e0b\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u4e3aSchr\u00f6der-Bernstein\u5b9a\u7406\u5728\u673a\u68b0\u5316\u8bc1\u660e\u73af\u5883\u4e2d\u7684\u9a8c\u8bc1\u5efa\u7acb\u4e86\u65b9\u6cd5\u8bba\u57fa\u7840\u3002\u63d0\u51fa\u7684\u94fe\u7406\u8bba\u601d\u8def\u4e3a\u7c7b\u4f3c\u96c6\u5408\u8bba\u5b9a\u7406\u7684\u81ea\u52a8\u5316\u8bc1\u660e\u63d0\u4f9b\u4e86\u53c2\u8003\u3002"}}
{"id": "2507.18762", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2507.18762", "abs": "https://arxiv.org/abs/2507.18762", "authors": ["Abdulhady Abas Abdullah", "Amir H. Gandomi", "Tarik A Rashid", "Seyedali Mirjalili", "Laith Abualigah", "Milena \u017divkovi\u0107", "Hadi Veisi"], "title": "The Role of Orthographic Consistency in Multilingual Embedding Models for Text Classification in Arabic-Script Languages", "comment": null, "summary": "In natural language processing, multilingual models like mBERT and\nXLM-RoBERTa promise broad coverage but often struggle with languages that share\na script yet differ in orthographic norms and cultural context. This issue is\nespecially notable in Arabic-script languages such as Kurdish Sorani, Arabic,\nPersian, and Urdu. We introduce the Arabic Script RoBERTa (AS-RoBERTa) family:\nfour RoBERTa-based models, each pre-trained on a large corpus tailored to its\nspecific language. By focusing pre-training on language-specific script\nfeatures and statistics, our models capture patterns overlooked by\ngeneral-purpose models. When fine-tuned on classification tasks, AS-RoBERTa\nvariants outperform mBERT and XLM-RoBERTa by 2 to 5 percentage points. An\nablation study confirms that script-focused pre-training is central to these\ngains. Error analysis using confusion matrices shows how shared script traits\nand domain-specific content affect performance. Our results highlight the value\nof script-aware specialization for languages using the Arabic script and\nsupport further work on pre-training strategies rooted in script and language\nspecificity.", "AI": {"tldr": "\u4e3a\u5e93\u5c14\u5fb7\u7d22\u62c9\u5c3c\u3001\u963f\u62c9\u4f2f\u3001\u6ce2\u65af\u548c\u4e4c\u5c14\u90fd\u7b49\u963f\u62c9\u4f2f\u6587\u4e66\u5199\u7684\u8bed\u8a00\u5206\u522b\u8bad\u7ec3RoBERTa\u6a21\u578b\uff0c\u4e13\u6ce8\u4e8e\u6587\u5b57\u7cfb\u7edf\u5dee\u5f02\uff0c\u4f18\u4e8e\u901a\u7528\u591a\u8bed\u79cd\u6a21\u578b2-5%\uff1b\u6587\u5b57\u7cfb\u7edf\u77e5\u8bc6\u9884\u8bad\u7ec3\u5bf9\u63d0\u5347\u8868\u73b0\u81f3\u5173\u91cd\u8981\u3002", "motivation": "\u591a\u8bed\u79cd\u6a21\u578b\u5982mBERT\u548cXLM-RoBERTa\u867d\u7136\u8986\u76d6\u9762\u5e7f\uff0c\u4f46\u5bf9\u4e8e\u4f7f\u7528\u76f8\u540c\u6587\u5b57\u7cfb\u7edf\uff08\u5982\u963f\u62c9\u4f2f\u5b57\u6bcd\uff09\uff0c\u4f46\u5728\u6b63\u5b57\u6cd5\u548c\u6587\u5316\u80cc\u666f\u4e0a\u6709\u5dee\u5f02\u7684\u8bed\u8a00\uff08\u5982\u5e93\u5c14\u5fb7\u8bed\u7d22\u62c9\u5c3c\u3001\u963f\u62c9\u4f2f\u8bed\u3001\u6ce2\u65af\u8bed\u548c\u4e4c\u5c14\u90fd\u8bed\uff09\u8868\u73b0\u6709\u9650\u3002\u8fd9\u4e2a\u95ee\u9898\u5c24\u5176\u7a81\u51fa\u3002", "method": "\u63d0\u51fa\u963f\u62c9\u4f2f\u5b57\u6bcdRoBERTa\uff08AS-RoBERTa\uff09\u5bb6\u65cf\uff0c\u4e3a\u6bcf\u79cd\u76ee\u6807\u8bed\u8a00\uff08\u5e93\u5c14\u5fb7\u7d22\u62c9\u5c3c\u8bed\u3001\u963f\u62c9\u4f2f\u8bed\u3001\u6ce2\u65af\u8bed\u3001\u4e4c\u5c14\u90fd\u8bed\uff09\u5404\u8bad\u7ec3\u4e00\u4e2a\u4ee5RoBERTa\u4e3a\u57fa\u7840\u3001\u4e13\u95e8\u9488\u5bf9\u5176\u5927\u89c4\u6a21\u8bed\u6599\u9884\u8bad\u7ec3\u7684\u6a21\u578b\u3002\u9884\u8bad\u7ec3\u65f6\u6ce8\u91cd\u8bed\u8a00\u7279\u5b9a\u7684\u6587\u5b57\u7cfb\u7edf\u7279\u5f81\u548c\u7edf\u8ba1\u4fe1\u606f\u3002", "result": "\u5728\u5206\u7c7b\u4efb\u52a1\u5fae\u8c03\u540e\uff0cAS-RoBERTa\u6a21\u578b\u6bd4mBERT\u548cXLM-RoBERTa\u9ad8\u51fa2~5\u4e2a\u767e\u5206\u70b9\u3002\u6d88\u878d\u5b9e\u9a8c\u663e\u793a\uff0c\u6587\u5b57\u7cfb\u7edf\u805a\u7126\u7684\u9884\u8bad\u7ec3\u65b9\u5f0f\u662f\u6027\u80fd\u63d0\u5347\u7684\u5173\u952e\u3002\u6df7\u6dc6\u77e9\u9635\u5206\u6790\u5c55\u793a\u4e86\u6587\u5b57\u5171\u6027\u548c\u9886\u57df\u5185\u5bb9\u5dee\u5f02\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\u3002", "conclusion": "\u9488\u5bf9\u4f7f\u7528\u963f\u62c9\u4f2f\u6587\u5b57\u7cfb\u7edf\u7684\u591a\u79cd\u8bed\u8a00\uff0c\u4e13\u6ce8\u4e8e\u6587\u5b57\u7cfb\u7edf\u7279\u6027\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u53d6\u5f97\u4e86\u4f18\u4e8e\u901a\u7528\u591a\u8bed\u79cd\u6a21\u578b\u7684\u8868\u73b0\uff0c\u9a8c\u8bc1\u4e86\u201c\u6587\u5b57\u7cfb\u7edf\u611f\u77e5\u201d\u4e13\u95e8\u5316\u7b56\u7565\u7684\u6709\u6548\u6027\uff0c\u503c\u5f97\u5728\u76f8\u5173\u8bed\u79cd\u548c\u9884\u8bad\u7ec3\u7b56\u7565\u4e0a\u8fdb\u4e00\u6b65\u7814\u7a76\u3002"}}
{"id": "2507.19012", "categories": ["cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2507.19012", "abs": "https://arxiv.org/abs/2507.19012", "authors": ["Alessandro Coglio", "Eric McCarthy"], "title": "A Formalization of the Yul Language and Some Verified Yul Code Transformations", "comment": "In Proceedings ACL2 2025, arXiv:2507.18567", "summary": "Yul is an intermediate language used in the compilation of the Solidity\nprogramming language for Ethereum smart contracts. The compiler applies\ncustomizable sequences of transformations to Yul code. To help ensure the\ncorrectness of these transformations and their sequencing, we used the ACL2\ntheorem prover to develop a formalization of the syntax and semantics of Yul,\nproofs relating static and dynamic semantics, a formalization of some Yul code\ntransformations, and correctness proofs for these transformations.", "AI": {"tldr": "\u672c\u6587\u5229\u7528ACL2\u5b9a\u7406\u8bc1\u660e\u5668\uff0c\u5bf9\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7f16\u8bd1\u4e2d\u7528\u5230\u7684Yul\u4e2d\u95f4\u8bed\u8a00\u8fdb\u884c\u4e86\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u5f62\u5f0f\u5316\u53ca\u8f6c\u6362\u6b63\u786e\u6027\u7684\u8bc1\u660e\uff0c\u6709\u52a9\u4e8e\u63d0\u5347\u667a\u80fd\u5408\u7ea6\u7f16\u8bd1\u5b89\u5168\u6027\u3002", "motivation": "\u4e3a\u4e86\u786e\u4fdd\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6Solidity\u8bed\u8a00\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5bf9Yul\u4e2d\u95f4\u8bed\u8a00\u8fdb\u884c\u8f6c\u6362\u7684\u6b63\u786e\u6027\uff0c\u4f5c\u8005\u5e0c\u671b\u5b9e\u73b0Yul\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u5f62\u5f0f\u5316\u4ee5\u53ca\u76f8\u5173\u8f6c\u6362\u7684\u9a8c\u8bc1\u3002", "method": "\u4f5c\u8005\u91c7\u7528\u4e86ACL2\u5b9a\u7406\u8bc1\u660e\u5668\uff0c\u5bf9Yul\u8bed\u8a00\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u8fdb\u884c\u4e86\u5f62\u5f0f\u5316\uff0c\u8bc1\u660e\u4e86\u9759\u6001\u8bed\u4e49\u4e0e\u52a8\u6001\u8bed\u4e49\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u5bf9\u90e8\u5206Yul\u4ee3\u7801\u8f6c\u6362\u8fdb\u884c\u4e86\u5f62\u5f0f\u5316\u53ca\u5176\u6b63\u786e\u6027\u8bc1\u660e\u3002", "result": "\u5f97\u5230\u4e86Yul\u7684\u6b63\u5f0f\u8bed\u6cd5\u548c\u8bed\u4e49\u63cf\u8ff0\uff0c\u4ee5\u53ca\u90e8\u5206Yul\u8f6c\u6362\u64cd\u4f5c\u7684\u5f62\u5f0f\u5316\u548c\u6b63\u786e\u6027\u8bc1\u660e\u3002", "conclusion": "\u901a\u8fc7\u4f7f\u7528ACL2\u5f62\u6210\u4e86Yul\u8bed\u8a00\u53ca\u5176\u8f6c\u6362\u7684\u5f62\u5f0f\u5316\u6a21\u578b\uff0c\u5b9e\u73b0\u4e86Yul\u4ee3\u7801\u8f6c\u6362\u6b63\u786e\u6027\u7684\u4fdd\u969c\uff0c\u4e3a\u667a\u80fd\u5408\u7ea6\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u63d0\u4f9b\u4e86\u7406\u8bba\u652f\u6301\u3002"}}
