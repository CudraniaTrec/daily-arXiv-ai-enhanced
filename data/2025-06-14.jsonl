{"id": "2506.10311", "categories": ["cs.DM"], "pdf": "https://arxiv.org/pdf/2506.10311", "abs": "https://arxiv.org/abs/2506.10311", "authors": ["E Su", "Hu Qin", "Jiliu Li", "Rui Zhang"], "title": "The Freight Multimodal Transport Problem with Buses and Drones: An Integrated Approach for Last-Mile Delivery", "comment": null, "summary": "This paper proposes a novel freight multimodal transport problem with buses\nand drones, where buses are responsible for transporting parcels to lockers at\nbus stops for storage, while drones are used to deliver each parcel from the\nlocker to the corresponding customer. The integrated bus-drone system\nsynergistically expands drone service coverage using the bus network to ensure\nefficient final delivery. Minimizing the total operational costs while\nsatisfying customer demands necessitates the joint optimization of parcel\nassignments and drone flights. We model the problem into a compact\nmixed-integer linear programming formulation and propose an integer programming\nformulation with exponentially many variables. To address real-world scale\ninstances, we propose a Branch-Price-and-Benders-Cut algorithm for this\nnon-deterministic polynomial-time (NP)-hard problem. This algorithm,\nintegrating column generation and Benders decomposition within a\nBranch-and-Bound framework, is developed to obtain optimal or near-optimal\nsolutions. Additionally, we introduce algorithmic enhancements aimed at\naccelerating the convergence of the algorithm. Computational experiments on\ninstances generated from real-world bus data demonstrate that the proposed\nalgorithms outperform CPLEX regarding both efficiency and solution quality.\nMoreover, our approaches can lead to over 6% cost savings compared to\nsituations where we determine parcel assignments and drone flights\nsequentially. We evaluate the environmental advantages of integrating buses and\ndrones, study the impact of different cost parameters in the system, and\ninvestigate the impact of the parcel locker configuration on performance. These\nfindings provide valuable managerial insights for urban logistics managers,\nhighlighting the potential of the integrated bus-drone system to improve\ntraditional last-mile delivery."}
{"id": "2506.10471", "categories": ["cs.DM", "math.CO", "05C10, 05C35, 05C69"], "pdf": "https://arxiv.org/pdf/2506.10471", "abs": "https://arxiv.org/abs/2506.10471", "authors": ["Kengo Enami", "Naoki Matsumoto", "Takamasa Yashima"], "title": "Contributions to conjectures in planar graphs: Induced Substructures, Treewidth, and Dominating Sets", "comment": null, "summary": "Two of the most prominent unresolved conjectures in graph theory, the\nAlbertson-Berman conjecture and the Matheson-Tarjan conjecture, have been\nextensively studied by many researchers.\n  (AB) Every planar graph of order $n$ has an induced forest of order at least\n$\\frac{n}{2}$.\n  (MT) Every plane triangulation of sufficiently large order $n$ has a\ndominating set of cardinality at most $\\frac{n}{4}$.\n  Although partial results and weaker bounds than those originally conjectured\nhave been obtained, both problems remain open. To contribute to their\nresolution, various generalizations and variations of the original concepts\nhave been investigated, such as total dominating set, induced linear forests,\nand others. In this paper, we clarify the relations among several notions\nrelated to these two major conjectures, such as connected domination and\ninduced outerplanar subgraphs, etc., and survey the associated conjectures. We\nthen provide counterexamples to some of these conjectures and establish the\nbest bounds on the gap between the maximum orders of induced subgraphs under\ndifferent structural conditions. In addition, we present a general upper bound\non the order of induced subgraphs in terms of treewidth, a fundamental graph\ninvariant."}
{"id": "2506.10482", "categories": ["cs.DM"], "pdf": "https://arxiv.org/pdf/2506.10482", "abs": "https://arxiv.org/abs/2506.10482", "authors": ["Victor Lutfalla"], "title": "The LLLR generalised Langton's ant", "comment": "A short note to clarify a bit of folklore on generalised Langton's\n  ants. arXiv admin note: text overlap with arXiv:2505.05426", "summary": "We present a short note on the dynamics of the LLLR generalised Langton's\nant. We describe two different asymptotic behaviours for the LLLR ant."}
{"id": "2506.10758", "categories": ["cs.DM", "cs.DS", "math.CO"], "pdf": "https://arxiv.org/pdf/2506.10758", "abs": "https://arxiv.org/abs/2506.10758", "authors": ["Samuel C. Gutekunst"], "title": "Circulant TSP: Vertices of the Edge-Length Polytope and Superpolynomial Lower Bounds", "comment": null, "summary": "We study the edge-length polytope, motivated both by algorithmic research on\nthe Circulant Traveling Salesman Problem (Circulant TSP) and number-theoretic\nresearch related to the Buratti-Horak-Rosa conjecture. Circulant TSP is a\nspecial case of TSP whose overall complexity is a significant still-open\nquestion, and where on an input with vertices $\\{1, 2, ..., n\\}$, the cost of\nan edge $\\{i, j\\}$ depends only on its length $\\min\\{|i-j|, n-|i-j|\\}$. The\nedge-length polytope provides one path to solving circulant TSP instances, and\nwe show that it is intimately connected to the factorization of $n$: the number\nof vertices scales with $n$ whenever $n$ is prime and with $n^{3/2}$ whenever\n$n$ is a prime-squared, but there are a superpolynomial number of vertices\nwhenever $n$ is a power of 2. In contrast, the more-standard Symmetric TSP\nPolytope has roughly $n!$ vertices. Hence, for Circulant TSP, a brute-force\nalgorithm checking every vertex is actually efficient in some cases, based on\nthe factorization of $n$. As an intermediate step, we give superpolynomial\nlower-bounds on two combinatorial sequences related to the Buratti-Horak-Rosa\nconjecture, which asks what combinations of edge lengths can comprise a\nHamiltonian path."}
{"id": "2506.10021", "categories": ["cs.PL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10021", "abs": "https://arxiv.org/abs/2506.10021", "authors": ["Jordi de la Torre"], "title": "From Tool Calling to Symbolic Thinking: LLMs in a Persistent Lisp Metaprogramming Loop", "comment": null, "summary": "We propose a novel architecture for integrating large language models (LLMs)\nwith a persistent, interactive Lisp environment. This setup enables LLMs to\ndefine, invoke, and evolve their own tools through programmatic interaction\nwith a live REPL. By embedding Lisp expressions within generation and\nintercepting them via a middleware layer, the system allows for stateful\nexternal memory, reflective programming, and dynamic tool creation. We present\na design framework and architectural principles to guide future implementations\nof interactive AI systems that integrate symbolic programming with neural\nlanguage generation."}
{"id": "2506.10377", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2506.10377", "abs": "https://arxiv.org/abs/2506.10377", "authors": ["Yun Chen Tsai", "Kittiphon Phalakarn", "S. Akshay", "Ichiro Hasuo"], "title": "Chance and Mass Interpretations of Probabilities in Markov Decision Processes (Extended Version)", "comment": null, "summary": "Markov decision processes (MDPs) are a popular model for decision-making in\nthe presence of uncertainty. The conventional view of MDPs in verification\ntreats them as state transformers with probabilities defined over sequences of\nstates and with schedulers making random choices. An alternative view,\nespecially well-suited for modeling dynamical systems, defines MDPs as\ndistribution transformers with schedulers distributing probability masses. Our\nmain contribution is a unified semantical framework that accommodates these two\nviews and two new ones. These four semantics of MDPs arise naturally through\nidentifying different sources of randomness in an MDP (namely schedulers,\nconfigurations, and transitions) and providing different ways of interpreting\nthese probabilities (called the chance and mass interpretations). These\nsemantics are systematically unified through a mathematical construct called\nchance-mass (CM) classifier. As another main contribution, we study a\nreachability problem in each of the two new semantics, demonstrating their\nhardness and providing two algorithms for solving them."}
{"id": "2506.10048", "categories": ["cs.LO", "math.LO"], "pdf": "https://arxiv.org/pdf/2506.10048", "abs": "https://arxiv.org/abs/2506.10048", "authors": ["Antonella Bilotta"], "title": "Growing a Modular Framework for Modal Systems- HOLMS: a HOL Light Library", "comment": "Master's Thesis", "summary": "The present dissertation introduces the research project on HOLMS\n(\\textbf{HOL} Light Library for \\textbf{M}odal \\textbf{S}ystems), a growing\nmodular framework for modal reasoning within the HOL Light proof assistant. To\nprovide an accessible introduction to the library, the fundamentals of modal\nlogic are outlined first, followed by a concise manual for the proof assistant\nitself. The core contribution of this work on HOLMS is the development of a\nunified and modular strategy for proving adequacy theorems with respect to\nrelational semantics directly within HOL Light for several normal modal\nsystems, currently including K, T, K4, and GL. Adequacy theorems establish a\nformal connection between syntactic proof systems and their intended relational\nmodels, ensuring that derivable statements align with valid ones. This approach\nextends previous research on G\\\"odel-L\\\"ob logic (GL) by two HOLMS developers.\nIt also assesses the generality and compositionality of the completeness proofs\nin George Boolos' monograph \\textit{The logic of provability}. Beyond\ntheoretical contributions, HOLMS incorporates automated decision procedures and\na countermodel constructor for K, T, K4, and GL, illustrating how\ngeneral-purpose proof assistants can be effectively combined with research on\nlabelled sequent calculi and key insights from correspondence and bisimulation\ntheories. The implementation in HOL Light demonstrates the feasibility of\nmechanising modal reasoning in a flexible and robust manner, paving the way for\nfurther developments of the HOLMS framework."}
{"id": "2506.10043", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10043", "abs": "https://arxiv.org/abs/2506.10043", "authors": ["Yongqian Sun", "Yu Luo", "Xidao Wen", "Yuan Yuan", "Xiaohui Nie", "Shenglin Zhang", "Tong Liu", "Xi Luo"], "title": "TrioXpert: An automated incident management framework for microservice system", "comment": null, "summary": "Automated incident management plays a pivotal role in large-scale\nmicroservice systems. However, many existing methods rely solely on\nsingle-modal data (e.g., metrics, logs, and traces) and struggle to\nsimultaneously address multiple downstream tasks, including anomaly detection\n(AD), failure triage (FT), and root cause localization (RCL). Moreover, the\nlack of clear reasoning evidence in current techniques often leads to\ninsufficient interpretability. To address these limitations, we propose\nTrioXpert, an end-to-end incident management framework capable of fully\nleveraging multimodal data. TrioXpert designs three independent data processing\npipelines based on the inherent characteristics of different modalities,\ncomprehensively characterizing the operational status of microservice systems\nfrom both numerical and textual dimensions. It employs a collaborative\nreasoning mechanism using large language models (LLMs) to simultaneously handle\nmultiple tasks while providing clear reasoning evidence to ensure strong\ninterpretability. We conducted extensive evaluations on two popular\nmicroservice system datasets, and the experimental results demonstrate that\nTrioXpert achieves outstanding performance in AD (improving by 4.7% to 57.7%),\nFT (improving by 2.1% to 40.6%), and RCL (improving by 1.6% to 163.1%) tasks."}
{"id": "2506.10019", "categories": ["cs.CL", "cs.AI", "cs.CV", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10019", "abs": "https://arxiv.org/abs/2506.10019", "authors": ["Tian Lan", "Yang-Hao Zhou", "Zi-Ao Ma", "Fanshu Sun", "Rui-Qing Sun", "Junyu Luo", "Rong-Cheng Tu", "Heyan Huang", "Chen Xu", "Zhijing Wu", "Xian-Ling Mao"], "title": "A Survey of Automatic Evaluation Methods on Text, Visual and Speech Generations", "comment": null, "summary": "Recent advances in deep learning have significantly enhanced generative AI\ncapabilities across text, images, and audio. However, automatically evaluating\nthe quality of these generated outputs presents ongoing challenges. Although\nnumerous automatic evaluation methods exist, current research lacks a\nsystematic framework that comprehensively organizes these methods across text,\nvisual, and audio modalities. To address this issue, we present a comprehensive\nreview and a unified taxonomy of automatic evaluation methods for generated\ncontent across all three modalities; We identify five fundamental paradigms\nthat characterize existing evaluation approaches across these domains. Our\nanalysis begins by examining evaluation methods for text generation, where\ntechniques are most mature. We then extend this framework to image and audio\ngeneration, demonstrating its broad applicability. Finally, we discuss\npromising directions for future research in cross-modal evaluation\nmethodologies."}
{"id": "2506.10610", "categories": ["cs.FL", "cs.CC", "cs.DM", "math.DS", "37B51 37B05 68Q17", "F.1.3; G.2"], "pdf": "https://arxiv.org/pdf/2506.10610", "abs": "https://arxiv.org/abs/2506.10610", "authors": ["Djamel Eddine Amir", "Benjamin Hellouin de Menibus"], "title": "Minimality and computability of languages of G-shifts", "comment": "Accepted to ICALP 2025", "summary": "Motivated by the notion of strong computable type for sets in computable\nanalysis, we define the notion of strong computable type for $G$-shifts, where\n$G$ is a finitely generated group with decidable word problem. A $G$-shift has\nstrong computable type if one can compute its language from the complement of\nits language. We obtain a characterization of $G$-shifts with strong computable\ntype in terms of a notion of minimality with respect to properties with a\nbounded computational complexity. We provide a self-contained direct proof, and\nalso explain how this characterization can be obtained from an existing similar\ncharacterization for sets by Amir and Hoyrup, and discuss its connexions with\nresults by Jeandel on closure spaces. We apply this characterization to several\nclasses of shifts that are minimal with respect to specific properties. This\nprovides a unifying approach that not only generalizes many existing results\nbut also has the potential to yield new findings effortlessly. In contrast to\nthe case of sets, we prove that strong computable type for G-shifts is\npreserved under products. We conclude by discussing some generalizations and\nfuture directions."}
{"id": "2506.10026", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10026", "abs": "https://arxiv.org/abs/2506.10026", "authors": ["Tesla Zhang", "Sonya Simkin", "Rui Li", "Yue Yao", "Stephanie Balzer"], "title": "A Language-Agnostic Logical Relation for Message-Passing Protocols", "comment": "19 pages, 8 figures", "summary": "Today's computing landscape has been gradually shifting to applications\ntargeting distributed and *heterogeneous* systems, such as cloud computing and\nInternet of Things (IoT) applications. These applications are predominantly\n*concurrent*, employ *message-passing*, and interface with *foreign objects*,\nranging from externally implemented code to actual physical devices such as\nsensors. Verifying that the resulting systems adhere to the intended protocol\nof interaction is challenging -- the usual assumption of a common\nimplementation language, let alone a type system, no longer applies, ruling out\nany verification method based on them. This paper develops a framework for\ncertifying *protocol compliance* of heterogeneous message-passing systems. It\ncontributes the first mechanization of a *language-agnostic logical relation*,\nasserting that its inhabitants comply with the protocol specified. This\ndefinition relies entirely on a labelled transition-based semantics,\naccommodating arbitrary inhabitants, typed and untyped alike, including foreign\nobjects. As a case study, the paper considers two scenarios: (1) *per-instance\nverification* of a specific application or hardware device, and (2)\n*once-and-for-all verification* of well-typed applications for a given type\nsystem. The logical relation and both scenarios are mechanized in the Coq\ntheorem prover."}
{"id": "2506.10610", "categories": ["cs.FL", "cs.CC", "cs.DM", "math.DS", "37B51 37B05 68Q17", "F.1.3; G.2"], "pdf": "https://arxiv.org/pdf/2506.10610", "abs": "https://arxiv.org/abs/2506.10610", "authors": ["Djamel Eddine Amir", "Benjamin Hellouin de Menibus"], "title": "Minimality and computability of languages of G-shifts", "comment": "Accepted to ICALP 2025", "summary": "Motivated by the notion of strong computable type for sets in computable\nanalysis, we define the notion of strong computable type for $G$-shifts, where\n$G$ is a finitely generated group with decidable word problem. A $G$-shift has\nstrong computable type if one can compute its language from the complement of\nits language. We obtain a characterization of $G$-shifts with strong computable\ntype in terms of a notion of minimality with respect to properties with a\nbounded computational complexity. We provide a self-contained direct proof, and\nalso explain how this characterization can be obtained from an existing similar\ncharacterization for sets by Amir and Hoyrup, and discuss its connexions with\nresults by Jeandel on closure spaces. We apply this characterization to several\nclasses of shifts that are minimal with respect to specific properties. This\nprovides a unifying approach that not only generalizes many existing results\nbut also has the potential to yield new findings effortlessly. In contrast to\nthe case of sets, we prove that strong computable type for G-shifts is\npreserved under products. We conclude by discussing some generalizations and\nfuture directions."}
{"id": "2506.10088", "categories": ["cs.LO", "math.LO", "03B70, 68Q55", "F.3.1"], "pdf": "https://arxiv.org/pdf/2506.10088", "abs": "https://arxiv.org/abs/2506.10088", "authors": ["Laurentiu Leustean"], "title": "Notes on applicative matching logic", "comment": null, "summary": "Matching logic (ML) was developed by Grigore Ro\\c{s}u and collaborators as a\nlogic for defining the formal semantics of programming languages and for\nspecifying and reasoning about the behavior of programs. These lecture notes\npresent basic definitions and results on applicative matching logic (AML), a\nfunctional variant of ML introduced recently by Xiaohong Chen and Grigore\nRo\\c{s}u. They can be used as an introductory text in the theory of AML. Monk's\ntextbook on mathematical logic has an enormous influence on the notes."}
{"id": "2506.10049", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10049", "abs": "https://arxiv.org/abs/2506.10049", "authors": ["Francesco Vinci", "Gyunam Park", "Wil van der Aalst", "Massimiliano de Leoni"], "title": "Online Discovery of Simulation Models for Evolving Business Processes (Extended Version)", "comment": null, "summary": "Business Process Simulation (BPS) refers to techniques designed to replicate\nthe dynamic behavior of a business process. Many approaches have been proposed\nto automatically discover simulation models from historical event logs,\nreducing the cost and time to manually design them. However, in dynamic\nbusiness environments, organizations continuously refine their processes to\nenhance efficiency, reduce costs, and improve customer satisfaction. Existing\ntechniques to process simulation discovery lack adaptability to real-time\noperational changes. In this paper, we propose a streaming process simulation\ndiscovery technique that integrates Incremental Process Discovery with Online\nMachine Learning methods. This technique prioritizes recent data while\npreserving historical information, ensuring adaptation to evolving process\ndynamics. Experiments conducted on four different event logs demonstrate the\nimportance in simulation of giving more weight to recent data while retaining\nhistorical knowledge. Our technique not only produces more stable simulations\nbut also exhibits robustness in handling concept drift, as highlighted in one\nof the use cases."}
{"id": "2506.10055", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10055", "abs": "https://arxiv.org/abs/2506.10055", "authors": ["Dingfeng Shi", "Jingyi Cao", "Qianben Chen", "Weichen Sun", "Weizhen Li", "Hongxuan Lu", "Fangchen Dong", "Tianrui Qin", "King Zhu", "Minghao Yang", "Jian Yang", "Ge Zhang", "Jiaheng Liu", "Changwang Zhang", "Jun Wang", "Yuchen Eleanor Jiang", "Wangchunshu Zhou"], "title": "TaskCraft: Automated Generation of Agentic Tasks", "comment": null, "summary": "Agentic tasks, which require multi-step problem solving with autonomy, tool\nuse, and adaptive reasoning, are becoming increasingly central to the\nadvancement of NLP and AI. However, existing instruction data lacks tool\ninteraction, and current agentic benchmarks rely on costly human annotation,\nlimiting their scalability. We introduce \\textsc{TaskCraft}, an automated\nworkflow for generating difficulty-scalable, multi-tool, and verifiable agentic\ntasks with execution trajectories. TaskCraft expands atomic tasks using\ndepth-based and width-based extensions to create structurally and\nhierarchically complex challenges. Empirical results show that these tasks\nimprove prompt optimization in the generation workflow and enhance supervised\nfine-tuning of agentic foundation models. We present a large-scale synthetic\ndataset of approximately 36,000 tasks with varying difficulty to support future\nresearch on agent tuning and evaluation."}
{"id": "2506.10781", "categories": ["cs.PL", "68N15, 68U35", "D.3.0; K.3.2"], "pdf": "https://arxiv.org/pdf/2506.10781", "abs": "https://arxiv.org/abs/2506.10781", "authors": ["Zhiyao Zhong", "Cyrus Omar"], "title": "Hazel Deriver: A Live Editor for Constructing Rule-Based Derivations", "comment": "5 pages, 2 figures, includes a preliminary user study; intended for\n  computer science education and PL/HCI conference audiences", "summary": "Students in programming languages and formal logic courses often struggle\nwith constructing rule-based derivation trees due to the complexity of applying\ninference rules, the lack of immediate feedback, and the manual effort required\nfor handwritten proofs. We present Hazel Deriver, a live, web-based editor\ndesigned to scaffold derivation construction through multiple layers of\nsupport. Built on the Hazel live programming environment, it provides a\nstructured, interactive experience that encourages iterative exploration and\nreal-time feedback. A preliminary user study with former students suggests that\nHazel Deriver reduces the perceived difficulty of derivation tasks while\nimproving conceptual understanding and engagement. We discuss the design of its\nlayered scaffolding features and raise questions about balancing system\nguidance with learner autonomy."}
{"id": "2506.10558", "categories": ["cs.LO", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10558", "abs": "https://arxiv.org/abs/2506.10558", "authors": ["Xiaolin Hu", "Qinghua Zhou", "Bogdan Grechuk", "Ivan Y. Tyukin"], "title": "StepProof: Step-by-step verification of natural language mathematical proofs", "comment": null, "summary": "Interactive theorem provers (ITPs) are powerful tools for the formal\nverification of mathematical proofs down to the axiom level. However, their\nlack of a natural language interface remains a significant limitation. Recent\nadvancements in large language models (LLMs) have enhanced the understanding of\nnatural language inputs, paving the way for autoformalization - the process of\ntranslating natural language proofs into formal proofs that can be verified.\nDespite these advancements, existing autoformalization approaches are limited\nto verifying complete proofs and lack the capability for finer, sentence-level\nverification. To address this gap, we propose StepProof, a novel\nautoformalization method designed for granular, step-by-step verification.\nStepProof breaks down complete proofs into multiple verifiable subproofs,\nenabling sentence-level verification. Experimental results demonstrate that\nStepProof significantly improves proof success rates and efficiency compared to\ntraditional methods. Additionally, we found that minor manual adjustments to\nthe natural language proofs, tailoring them for step-level verification,\nfurther enhanced StepProof's performance in autoformalization."}
{"id": "2506.10051", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10051", "abs": "https://arxiv.org/abs/2506.10051", "authors": ["Md Istiak Hossain Shihab", "Christopher Hundhausen", "Ahsun Tariq", "Summit Haque", "Yunhan Qiao", "Brian Mulanda"], "title": "The Effects of GitHub Copilot on Computing Students' Programming Effectiveness, Efficiency, and Processes in Brownfield Programming Tasks", "comment": "14 pages, 5 figures", "summary": "When graduates of computing degree programs enter the software industry, they\nwill most likely join teams working on legacy code bases developed by people\nother than themselves. In these so-called brownfield software development\nsettings, generative artificial intelligence (GenAI) coding assistants like\nGitHub Copilot are rapidly transforming software development practices, yet the\nimpact of GenAI on student programmers performing brownfield development tasks\nremains underexplored. This paper investigates how GitHub Copilot influences\nundergraduate students' programming performance, behaviors, and understanding\nwhen completing brownfield programming tasks in which they add new code to an\nunfamiliar code base. We conducted a controlled experiment in which 10\nundergraduate computer science students completed highly similar brownfield\ndevelopment tasks with and without Copilot in a legacy web application. Using a\nmixed-methods approach combining performance analysis, behavioral analysis, and\nexit interviews, we found that students completed tasks 35% faster (p < 0.05)\nand made 50% more solution progress p (< 0.05) when using Copilot. Moreover,\nour analysis revealed that, when using Copilot, students spent 11% less time\nmanually writing code (p < 0.05), and 12% less time conducting web searches (p\n< 0.05), providing evidence of a fundamental shift in how they engaged in\nprogramming. In exit interviews, students reported concerns about not\nunderstanding how or why Copilot suggestions work. This research suggests the\nneed for computing educators to develop new pedagogical approaches that\nleverage GenAI assistants' benefits while fostering reflection on how and why\nGenAI suggestions address brownfield programming tasks. Complete study results\nand analysis are presented at https://ghcopilot-icer.github.io/."}
{"id": "2506.10077", "categories": ["cs.CL", "cs.AI", "cs.IR", "cs.IT", "math.IT"], "pdf": "https://arxiv.org/pdf/2506.10077", "abs": "https://arxiv.org/abs/2506.10077", "authors": ["Christopher J. Agostino", "Quan Le Thien", "Molly Apsel", "Denizhan Pak", "Elina Lesyk", "Ashabari Majumdar"], "title": "A quantum semantic framework for natural language processing", "comment": "12 pages, 2 figures, accepted submission to Quantum AI and NLP 2025", "summary": "Semantic degeneracy represents a fundamental property of natural language\nthat extends beyond simple polysemy to encompass the combinatorial explosion of\npotential interpretations that emerges as semantic expressions increase in\ncomplexity. Large Language Models (LLMs) and other modern NLP systems face\ninherent limitations precisely because they operate within natural language\nitself, making them subject to the same interpretive constraints imposed by\nsemantic degeneracy. In this work, we argue using Kolmogorov complexity that as\nan expression's complexity grows, the likelihood of any interpreting agent\n(human or LLM-powered AI) recovering the single intended meaning vanishes. This\ncomputational intractability suggests the classical view that linguistic forms\npossess meaning in and of themselves is flawed. We alternatively posit that\nmeaning is instead actualized through an observer-dependent interpretive act.\nTo test this, we conducted a semantic Bell inequality test using diverse LLM\nagents as ``computational cognitive systems'' to interpret ambiguous word pairs\nunder varied contextual settings. Across several independent experiments, we\nfound average CHSH expectation values ranging from 1.2 to 2.8, with several\nruns yielding values (e.g., 2.3-2.4) that significantly violate the classical\nboundary ($|S|\\leq2$). This demonstrates that linguistic interpretation under\nambiguity can exhibit non-classical contextuality, consistent with results from\nhuman cognition experiments. These results inherently imply that classical\nfrequentist-based analytical approaches for natural language are necessarily\nlossy. Instead, we propose that Bayesian-style repeated sampling approaches can\nprovide more practically useful and appropriate characterizations of linguistic\nmeaning in context."}
{"id": "2506.10913", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10913", "abs": "https://arxiv.org/abs/2506.10913", "authors": ["Ashley Samuelson", "Andrew K. Hirsch", "Ethan Cecchetti"], "title": "Choreographic Quick Changes: First-Class Location (Set) Polymorphism", "comment": "In submission to OOPSLA 2025", "summary": "Choreographic programming is a promising new paradigm for programming\nconcurrent systems where a developer writes a single centralized program that\ncompiles to individual programs for each node. Existing choreographic\nlanguages, however, lack critical features integral to modern systems, like the\nability of one node to dynamically compute who should perform a computation and\nsend that decision to others. This work addresses this gap with $\\lambda_{QC}$,\nthe first typed choreographic language with \\emph{first class process names}\nand polymorphism over both types and (sets of) locations. $\\lambda_{QC}$ also\nimproves expressive power over previous work by supporting algebraic and\nrecursive data types as well as multiply-located values. We formalize and\nmechanically verify our results in Rocq, including the standard choreographic\nguarantee of deadlock freedom."}
{"id": "2506.10584", "categories": ["cs.LO", "cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10584", "abs": "https://arxiv.org/abs/2506.10584", "authors": ["Benjamin Bennetzen", "Nikolaj Rossander Kristensen", "Peter Buus Steffensen"], "title": "Encoding call-by-push-value in the pi-calculus", "comment": "56 pages", "summary": "In this report we define an encoding of Levys call-by-push-value\nlambda-calculus (CBPV) in the pi-calculus, and prove that our encoding is both\nsound and complete. We present informal (by-hand) proofs of soundness,\ncompleteness, and all required lemmas. The encoding is specialized to the\ninternal pi-calculus (pi-i-calculus) to circumvent certain challenges\nassociated with using de Bruijn index in a formalization, and it also helps\nwith bisimulation as early-, late- and open-bisimulation coincide in this\nsetting, furthermore bisimulation is a congruence. Additionally, we argue that\nour encoding also satisfies the five criteria for good encodings proposed by\nGorla, as well as show similarities between Milners and our encoding. This\npaper includes encodings from CBPV in the pi-i-calculus, asynchronous polyadic\npi-calculus and the local pi-calculus. We begin a formalization of the proof in\nCoq for the soundness and completeness of the encoding in the pi-i-calculus.\nNot all lemmas used in the formalization are themselves formally proven.\nHowever, we argue that the non-proven lemmas are reasonable, as they are proven\nby hand, or amount to Coq formalities that are straightforward given informal\narguments."}
{"id": "2506.10056", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10056", "abs": "https://arxiv.org/abs/2506.10056", "authors": ["Gabriel Orlanski", "Nicholas Roberts", "Aws Albarghouthi", "Frederic Sala"], "title": "Reward Models Enable Scalable Code Verification by Trading Accuracy for Throughput", "comment": "29 pages, 6 figures, code released here:\n  https://github.com/SprocketLab/orm-code-verifier", "summary": "The standard paradigm for solving coding tasks via large language models\n(LLMs) is to generate-then-rank programs, where the latter step uses a verifier\nin the ranking process. The growing consensus is that a comprehensive verifier\n(e.g., a full test suite) should be prioritized over an outcome reward model\n(ORM) whenever possible, with little consideration given to the trade-offs\ninvolved. We aim to challenge this assumption by systematically exploring the\ntradeoff between speed and accuracy. We find that ORMs play a crucial role in\nscaling verification through trading accuracy for speed, even when a\ncomprehensive verifier is available. Their value becomes especially apparent\nwhen used in a generate-prune-then-rank approach, where a faster but less\naccurate verifier removes incorrect solutions prior to ranking -- leading to a\nsystem that is 11.65x faster while only being 8.33% less accurate than the full\ntest suite. We analyze the generate-prune-then-rank approach and show that it\nworks by filtering out incorrect but highly ranked solutions. These findings\nenable the design of scalable and accurate program ranking systems."}
{"id": "2506.10086", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10086", "abs": "https://arxiv.org/abs/2506.10086", "authors": ["Christodoulos Constantinides", "Shuxin Lin", "Nianjun Zhou", "Dhaval Patel"], "title": "Chat-of-Thought: Collaborative Multi-Agent System for Generating Domain Specific Information", "comment": null, "summary": "This paper presents a novel multi-agent system called Chat-of-Thought,\ndesigned to facilitate the generation of Failure Modes and Effects Analysis\n(FMEA) documents for industrial assets. Chat-of-Thought employs multiple\ncollaborative Large Language Model (LLM)-based agents with specific roles,\nleveraging advanced AI techniques and dynamic task routing to optimize the\ngeneration and validation of FMEA tables. A key innovation in this system is\nthe introduction of a Chat of Thought, where dynamic, multi-persona-driven\ndiscussions enable iterative refinement of content. This research explores the\napplication domain of industrial equipment monitoring, highlights key\nchallenges, and demonstrates the potential of Chat-of-Thought in addressing\nthese challenges through interactive, template-driven workflows and\ncontext-aware agent collaboration."}
{"id": "2506.10056", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10056", "abs": "https://arxiv.org/abs/2506.10056", "authors": ["Gabriel Orlanski", "Nicholas Roberts", "Aws Albarghouthi", "Frederic Sala"], "title": "Reward Models Enable Scalable Code Verification by Trading Accuracy for Throughput", "comment": "29 pages, 6 figures, code released here:\n  https://github.com/SprocketLab/orm-code-verifier", "summary": "The standard paradigm for solving coding tasks via large language models\n(LLMs) is to generate-then-rank programs, where the latter step uses a verifier\nin the ranking process. The growing consensus is that a comprehensive verifier\n(e.g., a full test suite) should be prioritized over an outcome reward model\n(ORM) whenever possible, with little consideration given to the trade-offs\ninvolved. We aim to challenge this assumption by systematically exploring the\ntradeoff between speed and accuracy. We find that ORMs play a crucial role in\nscaling verification through trading accuracy for speed, even when a\ncomprehensive verifier is available. Their value becomes especially apparent\nwhen used in a generate-prune-then-rank approach, where a faster but less\naccurate verifier removes incorrect solutions prior to ranking -- leading to a\nsystem that is 11.65x faster while only being 8.33% less accurate than the full\ntest suite. We analyze the generate-prune-then-rank approach and show that it\nworks by filtering out incorrect but highly ranked solutions. These findings\nenable the design of scalable and accurate program ranking systems."}
{"id": "2506.10204", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10204", "abs": "https://arxiv.org/abs/2506.10204", "authors": ["Andrei Paleyes", "Radzim Sendyka", "Diana Robinson", "Christian Cabrera", "Neil D. Lawrence"], "title": "Prompt Variability Effects On LLM Code Generation", "comment": null, "summary": "Code generation is one of the most active areas of application of Large\nLanguage Models (LLMs). While LLMs lower barriers to writing code and\naccelerate development process, the overall quality of generated programs\ndepends on the quality of given prompts. Specifically, functionality and\nquality of generated code can be sensitive to user's background and familiarity\nwith software development. It is therefore important to quantify LLM's\nsensitivity to variations in the input. To this end we propose a synthetic\nevaluation pipeline for code generation with LLMs, as well as a systematic\npersona-based evaluation approach to expose qualitative differences of LLM\nresponses dependent on prospective user background. Both proposed methods are\ncompletely independent from specific programming tasks and LLMs, and thus are\nwidely applicable. We provide experimental evidence illustrating utility of our\nmethods and share our code for the benefit of the community."}
{"id": "2506.10095", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10095", "abs": "https://arxiv.org/abs/2506.10095", "authors": ["Xiao Li", "Joel Kreuzwieser", "Alan Peters"], "title": "When Meaning Stays the Same, but Models Drift: Evaluating Quality of Service under Token-Level Behavioral Instability in LLMs", "comment": "This paper was developed for presentation at ICML 2025 Tokshop\n  Workshop, but is now submitted as a standalone contribution", "summary": "We investigate how large language models respond to prompts that differ only\nin their token-level realization but preserve the same semantic intent, a\nphenomenon we call prompt variance. We propose Prompt-Based Semantic Shift\n(PBSS), a diagnostic framework for measuring behavioral drift in LLMs under\nsemantically equivalent prompt rewordings. Applied to ten constrained tasks,\nPBSS reveals consistent, model-specific response shifts, suggesting statistical\nregularities linked to tokenization and decoding. These results highlight an\noverlooked dimension of model evaluation stability under rephrasing and suggest\nthat tokenization strategies and decoding dynamics may contribute to\npost-training quality of service instability."}
{"id": "2506.10803", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10803", "abs": "https://arxiv.org/abs/2506.10803", "authors": ["Ryan Gibb", "Patrick Ferris", "David Allsopp", "Michael Winston Dales", "Mark Elvers", "Thomas Gazagnaire", "Sadiq Jaffer", "Thomas Leonard", "Jon Ludlam", "Anil Madhavapeddy"], "title": "Solving Package Management via Hypergraph Dependency Resolution", "comment": "Submitted to SPLASH 2025", "summary": "Package managers are everywhere, with seemingly every language and operating\nsystem implementing their own solution. The lack of interoperability between\nthese systems means that multi-lingual projects are unable to express precise\ndependencies across language ecosystems, and external system and hardware\ndependencies are typically implicit and unversioned. We define HyperRes, a\nformal system for describing versioned dependency resolution using a hypergraph\nthat is expressive enough to model many ecosystems and solve dependency\nconstraints across them. We define translations from dozens of existing package\nmanagers to HyperRes and comprehensively demonstrate that dependency resolution\ncan work across ecosystems that are currently distinct. This does not require\nusers to shift their choice of package managers; instead, HyperRes allows for\nthe translation of packaging metadata between ecosystems, and for solving to be\nprecisely specialised to a particular deployment environment."}
{"id": "2506.10280", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2506.10280", "abs": "https://arxiv.org/abs/2506.10280", "authors": ["Samiha Shimmi", "Hamed Okhravi", "Mona Rahimi"], "title": "AI-Based Software Vulnerability Detection: A Systematic Literature Review", "comment": null, "summary": "Software vulnerabilities in source code pose serious cybersecurity risks,\nprompting a shift from traditional detection methods (e.g., static analysis,\nrule-based matching) to AI-driven approaches. This study presents a systematic\nreview of software vulnerability detection (SVD) research from 2018 to 2023,\noffering a comprehensive taxonomy of techniques, feature representations, and\nembedding methods. Our analysis reveals that 91% of studies use AI-based\nmethods, with graph-based models being the most prevalent. We identify key\nlimitations, including dataset quality, reproducibility, and interpretability,\nand highlight emerging opportunities in underexplored techniques such as\nfederated learning and quantum neural networks, providing a roadmap for future\nresearch."}
{"id": "2506.10116", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10116", "abs": "https://arxiv.org/abs/2506.10116", "authors": ["Caijun Jia", "Nan Xu", "Jingxuan Wei", "Qingli Wang", "Lei Wang", "Bihui Yu", "Junnan Zhu"], "title": "ChartReasoner: Code-Driven Modality Bridging for Long-Chain Reasoning in Chart Question Answering", "comment": null, "summary": "Recently, large language models have shown remarkable reasoning capabilities\nthrough long-chain reasoning before responding. However, how to extend this\ncapability to visual reasoning tasks remains an open challenge. Existing\nmultimodal reasoning approaches transfer such visual reasoning task into\ntextual reasoning task via several image-to-text conversions, which often lose\ncritical structural and semantic information embedded in visualizations,\nespecially for tasks like chart question answering that require a large amount\nof visual details. To bridge this gap, we propose ChartReasoner, a code-driven\nnovel two-stage framework designed to enable precise, interpretable reasoning\nover charts. We first train a high-fidelity model to convert diverse chart\nimages into structured ECharts codes, preserving both layout and data semantics\nas lossless as possible. Then, we design a general chart reasoning data\nsynthesis pipeline, which leverages this pretrained transport model to\nautomatically and scalably generate chart reasoning trajectories and utilizes a\ncode validator to filter out low-quality samples. Finally, we train the final\nmultimodal model using a combination of supervised fine-tuning and\nreinforcement learning on our synthesized chart reasoning dataset and\nexperimental results on four public benchmarks clearly demonstrate the\neffectiveness of our proposed ChartReasoner. It can preserve the original\ndetails of the charts as much as possible and perform comparably with\nstate-of-the-art open-source models while using fewer parameters, approaching\nthe performance of proprietary systems like GPT-4o in out-of-domain settings."}
{"id": "2506.10322", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10322", "abs": "https://arxiv.org/abs/2506.10322", "authors": ["Xueying Du", "Kai Yu", "Chong Wang", "Yi Zou", "Wentai Deng", "Zuoyu Ou", "Xin Peng", "Lingming Zhang", "Yiling Lou"], "title": "Minimizing False Positives in Static Bug Detection via LLM-Enhanced Path Feasibility Analysis", "comment": null, "summary": "Static bug analyzers play a crucial role in ensuring software quality.\nHowever, existing analyzers for bug detection in large codebases often suffer\nfrom high false positive rates. This is primarily due to the limited\ncapabilities of analyzers in path feasibility validation with multiple\nconditional branches and complex data dependencies. While current LLM-based\napproaches attempt to address this issue, their effectiveness remains limited\ndue to insufficient constraint cascade analysis and scalability challenges in\nlarge projects. To address this challenge, we propose an iterative path\nfeasibility analysis framework LLM4PFA. By leveraging LLM agent based targeted\nconstraint reasoning, and key context-aware analysis driven by agent planning,\nLLM4PFA effectively enhances complex inter-procedural path feasibility analysis\nfor minimizing false positives in static bug detection. Evaluation results show\nthat LLM4PFA precisely filters out 72% to 96% false positives reported during\nstatic bug detection, significantly outperforming all the baselines by 41.1% -\n105.7% improvements; meanwhile LLM4PFA only misses 3 real bugs of 45 true\npositives."}
{"id": "2506.10139", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10139", "abs": "https://arxiv.org/abs/2506.10139", "authors": ["Jiaxin Wen", "Zachary Ankner", "Arushi Somani", "Peter Hase", "Samuel Marks", "Jacob Goldman-Wetzler", "Linda Petrini", "Henry Sleight", "Collin Burns", "He He", "Shi Feng", "Ethan Perez", "Jan Leike"], "title": "Unsupervised Elicitation of Language Models", "comment": null, "summary": "To steer pretrained language models for downstream tasks, today's\npost-training paradigm relies on humans to specify desired behaviors. However,\nfor models with superhuman capabilities, it is difficult or impossible to get\nhigh-quality human supervision. To address this challenge, we introduce a new\nunsupervised algorithm, Internal Coherence Maximization (ICM), to fine-tune\npretrained language models on their own generated labels, \\emph{without\nexternal supervision}. On GSM8k-verification, TruthfulQA, and Alpaca reward\nmodeling tasks, our method matches the performance of training on golden\nsupervision and outperforms training on crowdsourced human supervision. On\ntasks where LMs' capabilities are strongly superhuman, our method can elicit\nthose capabilities significantly better than training on human labels. Finally,\nwe show that our method can improve the training of frontier LMs: we use our\nmethod to train an unsupervised reward model and use reinforcement learning to\ntrain a Claude 3.5 Haiku-based assistant. Both the reward model and the\nassistant outperform their human-supervised counterparts."}
{"id": "2506.10330", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10330", "abs": "https://arxiv.org/abs/2506.10330", "authors": ["Seyed Moein Abtahi", "Akramul Azim"], "title": "Augmenting Large Language Models with Static Code Analysis for Automated Code Quality Improvements", "comment": "Accepted at FORGE 2025", "summary": "This study examined code issue detection and revision automation by\nintegrating Large Language Models (LLMs) such as OpenAI's GPT-3.5 Turbo and\nGPT-4o into software development workflows. A static code analysis framework\ndetects issues such as bugs, vulnerabilities, and code smells within a\nlarge-scale software project. Detailed information on each issue was extracted\nand organized to facilitate automated code revision using LLMs. An iterative\nprompt engineering process is applied to ensure that prompts are structured to\nproduce accurate and organized outputs aligned with the project requirements.\nRetrieval-augmented generation (RAG) is implemented to enhance the relevance\nand precision of the revisions, enabling LLM to access and integrate real-time\nexternal knowledge. The issue of LLM hallucinations - where the model generates\nplausible but incorrect outputs - is addressed by a custom-built \"Code\nComparison App,\" which identifies and corrects erroneous changes before\napplying them to the codebase. Subsequent scans using the static code analysis\nframework revealed a significant reduction in code issues, demonstrating the\neffectiveness of combining LLMs, static analysis, and RAG to improve code\nquality, streamline the software development process, and reduce time and\nresource expenditure."}
{"id": "2506.10150", "categories": ["cs.CL", "cs.HC"], "pdf": "https://arxiv.org/pdf/2506.10150", "abs": "https://arxiv.org/abs/2506.10150", "authors": ["Aakriti Kumar", "Nalin Poungpeth", "Diyi Yang", "Erina Farrell", "Bruce Lambert", "Matthew Groh"], "title": "When Large Language Models are Reliable for Judging Empathic Communication", "comment": null, "summary": "Large language models (LLMs) excel at generating empathic responses in\ntext-based conversations. But, how reliably do they judge the nuances of\nempathic communication? We investigate this question by comparing how experts,\ncrowdworkers, and LLMs annotate empathic communication across four evaluative\nframeworks drawn from psychology, natural language processing, and\ncommunications applied to 200 real-world conversations where one speaker shares\na personal problem and the other offers support. Drawing on 3,150 expert\nannotations, 2,844 crowd annotations, and 3,150 LLM annotations, we assess\ninter-rater reliability between these three annotator groups. We find that\nexpert agreement is high but varies across the frameworks' sub-components\ndepending on their clarity, complexity, and subjectivity. We show that expert\nagreement offers a more informative benchmark for contextualizing LLM\nperformance than standard classification metrics. Across all four frameworks,\nLLMs consistently approach this expert level benchmark and exceed the\nreliability of crowdworkers. These results demonstrate how LLMs, when validated\non specific tasks with appropriate benchmarks, can support transparency and\noversight in emotionally sensitive applications including their use as\nconversational companions."}
{"id": "2506.10365", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10365", "abs": "https://arxiv.org/abs/2506.10365", "authors": ["Shuyang Hou", "Zhangxiao Shen", "Huayi Wu", "Haoyue Jiao", "Ziqi Liu", "Lutong Xie", "Chang Liu", "Jianyuan Liang", "Yaxian Qing", "Xiaopu Zhang", "Dehua Peng", "Zhipeng Gui", "Xuefeng Guan"], "title": "AutoGEEval++: A Multi-Level and Multi-Geospatial-Modality Automated Evaluation Framework for Large Language Models in Geospatial Code Generation on Google Earth Engine", "comment": null, "summary": "Geospatial code generation is becoming a key frontier in integrating\nartificial intelligence with geo-scientific analysis, yet standardised\nautomated evaluation tools for this task remain absent. This study presents\nAutoGEEval++, an enhanced framework building on AutoGEEval, and the first\nautomated assessment system for large language models (LLMs) generating\ngeospatial code on Google Earth Engine (GEE). It supports diverse data\nmodalities and varying task complexities. Built on the GEE Python API,\nAutoGEEval++ features a benchmark dataset-AutoGEEval++-Bench-with 6,365 test\ncases across 26 data types and three task categories: unit, combo, and theme\ntests. It includes a submission programme and a judge module to realise an\nend-to-end automated evaluation pipeline from code generation to\nexecution-based validation. The framework adopts multi-dimensional\nmetrics-accuracy, resource usage, run-time efficiency, and error\ntypes-balancing hallucination control and efficiency, and enabling boundary\ntesting and error pattern analysis. Using AutoGEEval++, we evaluate 24\nstate-of-the-art LLMs (as of June 2025), including general-purpose,\nreasoning-enhanced, code-centric, and geoscience-specific models. Results\nreveal clear performance, stability, and error differences across task types,\nmodel designs, and deployment settings, confirming AutoGEEval++'s practical\nvalue and scalability in vertical-domain code generation. This work establishes\nthe first standardised evaluation protocol and foundational benchmark for\nGEE-based LLM code generation, providing a unified basis for performance\ncomparison and a methodological framework for systematic, domain-specific code\nevaluation."}
{"id": "2506.10154", "categories": ["cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10154", "abs": "https://arxiv.org/abs/2506.10154", "authors": ["Bidyarthi Paul", "SM Musfiqur Rahman", "Dipta Biswas", "Md. Ziaul Hasan", "Md. Zahid Hossain"], "title": "Analyzing Emotions in Bangla Social Media Comments Using Machine Learning and LIME", "comment": null, "summary": "Research on understanding emotions in written language continues to expand,\nespecially for understudied languages with distinctive regional expressions and\ncultural features, such as Bangla. This study examines emotion analysis using\n22,698 social media comments from the EmoNoBa dataset. For language analysis,\nwe employ machine learning models: Linear SVM, KNN, and Random Forest with\nn-gram data from a TF-IDF vectorizer. We additionally investigated how PCA\naffects the reduction of dimensionality. Moreover, we utilized a BiLSTM model\nand AdaBoost to improve decision trees. To make our machine learning models\neasier to understand, we used LIME to explain the predictions of the AdaBoost\nclassifier, which uses decision trees. With the goal of advancing sentiment\nanalysis in languages with limited resources, our work examines various\ntechniques to find efficient techniques for emotion identification in Bangla."}
{"id": "2506.10376", "categories": ["cs.SE", "cs.HC"], "pdf": "https://arxiv.org/pdf/2506.10376", "abs": "https://arxiv.org/abs/2506.10376", "authors": ["Fan Wu", "Cuiyun Gao", "Shuqing Li", "Xin-Cheng Wen", "Qing Liao"], "title": "MLLM-Based UI2Code Automation Guided by UI Layout Information", "comment": "Accepted by the 34th International Symposium on Software Testing and\n  Analysis (ISSTA 2025)", "summary": "Converting user interfaces into code (UI2Code) is a crucial step in website\ndevelopment, which is time-consuming and labor-intensive. The automation of\nUI2Code is essential to streamline this task, beneficial for improving the\ndevelopment efficiency. There exist deep learning-based methods for the task;\nhowever, they heavily rely on a large amount of labeled training data and\nstruggle with generalizing to real-world, unseen web page designs. The advent\nof Multimodal Large Language Models (MLLMs) presents potential for alleviating\nthe issue, but they are difficult to comprehend the complex layouts in UIs and\ngenerate the accurate code with layout preserved. To address these issues, we\npropose LayoutCoder, a novel MLLM-based framework generating UI code from\nreal-world webpage images, which includes three key modules: (1) Element\nRelation Construction, which aims at capturing UI layout by identifying and\ngrouping components with similar structures; (2) UI Layout Parsing, which aims\nat generating UI layout trees for guiding the subsequent code generation\nprocess; and (3) Layout-Guided Code Fusion, which aims at producing the\naccurate code with layout preserved. For evaluation, we build a new benchmark\ndataset which involves 350 real-world websites named Snap2Code, divided into\nseen and unseen parts for mitigating the data leakage issue, besides the\npopular dataset Design2Code. Extensive evaluation shows the superior\nperformance of LayoutCoder over the state-of-the-art approaches. Compared with\nthe best-performing baseline, LayoutCoder improves 10.14% in the BLEU score and\n3.95% in the CLIP score on average across all datasets."}
{"id": "2506.10155", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10155", "abs": "https://arxiv.org/abs/2506.10155", "authors": ["Elizabeth Demers", "Victor Xiaoqi Wang", "Kean Wu"], "title": "Measuring Corporate Human Capital Disclosures: Lexicon, Data, Code, and Research Opportunities", "comment": "50 pages, 6 figures, 5 tables", "summary": "Human capital (HC) is increasingly important to corporate value creation.\nUnlike other assets, however, HC is not currently subject to well-defined\nmeasurement or disclosure rules. We use a machine learning algorithm (word2vec)\ntrained on a confirmed set of HC disclosures to develop a comprehensive list of\nHC-related keywords classified into five subcategories (DEI; health and safety;\nlabor relations and culture; compensation and benefits; and demographics and\nother) that capture the multidimensional nature of HC management. We share our\nlexicon, corporate HC disclosures, and the Python code used to develop the\nlexicon, and we provide detailed examples of using our data and code, including\nfor fine-tuning a BERT model. Researchers can use our HC lexicon (or modify the\ncode to capture another construct of interest) with their samples of corporate\ncommunications to address pertinent HC questions. We close with a discussion of\nfuture research opportunities related to HC management and disclosure."}
{"id": "2506.10397", "categories": ["cs.SE", "cs.CY", "cs.DC"], "pdf": "https://arxiv.org/pdf/2506.10397", "abs": "https://arxiv.org/abs/2506.10397", "authors": ["Mir Mohammad Yousuf", "Shabir Ahmad Sofi"], "title": "Bug Classification in Quantum Software: A Rule-Based Framework and Its Evaluation", "comment": "25 pages, 5 figures", "summary": "Accurate classification of software bugs is essential for improving software\nquality. This paper presents a rule-based automated framework for classifying\nissues in quantum software repositories by bug type, category, severity, and\nimpacted quality attributes, with additional focus on quantum-specific bug\ntypes. The framework applies keyword and heuristic-based techniques tailored to\nquantum computing. To assess its reliability, we manually classified a\nstratified sample of 4,984 issues from a dataset of 12,910 issues across 36\nQiskit repositories. Automated classifications were compared with ground truth\nusing accuracy, precision, recall, and F1-score. The framework achieved up to\n85.21% accuracy, with F1-scores ranging from 0.7075 (severity) to 0.8393\n(quality attribute). Statistical validation via paired t-tests and Cohen's\nKappa showed substantial to almost perfect agreement for bug type (k = 0.696),\ncategory (k = 0.826), quality attribute (k = 0.818), and quantum-specific bug\ntype (k = 0.712). Severity classification showed slight agreement (k = 0.162),\nsuggesting room for improvement. Large-scale analysis revealed that classical\nbugs dominate (67.2%), with quantum-specific bugs at 27.3%. Frequent bug\ncategories included compatibility, functional, and quantum-specific defects,\nwhile usability, maintainability, and interoperability were the most impacted\nquality attributes. Most issues (93.7%) were low severity; only 4.3% were\ncritical. A detailed review of 1,550 quantum-specific bugs showed that over\nhalf involved quantum circuit-level problems, followed by gate errors and\nhardware-related issues."}
{"id": "2506.10161", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10161", "abs": "https://arxiv.org/abs/2506.10161", "authors": ["Yi Wang", "Max Kreminski"], "title": "Can LLMs Generate Good Stories? Insights and Challenges from a Narrative Planning Perspective", "comment": "In 2025 IEEE Conference on Games (CoG)", "summary": "Story generation has been a prominent application of Large Language Models\n(LLMs). However, understanding LLMs' ability to produce high-quality stories\nremains limited due to challenges in automatic evaluation methods and the high\ncost and subjectivity of manual evaluation. Computational narratology offers\nvaluable insights into what constitutes a good story, which has been applied in\nthe symbolic narrative planning approach to story generation. This work aims to\ndeepen the understanding of LLMs' story generation capabilities by using them\nto solve narrative planning problems. We present a benchmark for evaluating\nLLMs on narrative planning based on literature examples, focusing on causal\nsoundness, character intentionality, and dramatic conflict. Our experiments\nshow that GPT-4 tier LLMs can generate causally sound stories at small scales,\nbut planning with character intentionality and dramatic conflict remains\nchallenging, requiring LLMs trained with reinforcement learning for complex\nreasoning. The results offer insights on the scale of stories that LLMs can\ngenerate while maintaining quality from different aspects. Our findings also\nhighlight interesting problem solving behaviors and shed lights on challenges\nand considerations for applying LLM narrative planning in game environments."}
{"id": "2506.10426", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10426", "abs": "https://arxiv.org/abs/2506.10426", "authors": ["Xiao Yu", "Haoxuan Chen", "Feifei Niu", "Xing Hu", "Jacky Wai Keung", "Xin Xia"], "title": "Towards Understanding Bugs in Distributed Training and Inference Frameworks for Large Language Models", "comment": null, "summary": "With the rapid development of large language models (LLMs), distributed\ntraining and inference frameworks like DeepSpeed have become essential for\nscaling model training and inference across multiple GPUs or nodes. However,\nthe increasing complexity of these frameworks brings non-trivial software bugs,\nwhich may degrade training performance, cause unexpected failures, and result\nin significant resource waste. Understanding framework bugs' characteristics is\nfundamental for quality assurance, allowing the design of more effective\ndebugging and repair methods. Thus, our paper conducts the first large-scale\nempirical analysis of 308 fixed bugs across three popular distributed\ntraining/inference frameworks: DeepSpeed, Megatron-LM, and Colossal-AI. We\nexamine bug symptoms, root causes, bug identification and fixing efforts, and\ncommon low-effort fixing strategies. Additionally, the distributed nature of\nthese frameworks introduces unique bug root causes, such as allocation strategy\nerror and distributed communication error. Diagnosing and fixing complex bugs\nremains challenging due to factors like the disconnect between symptoms and\nroot causes, high bug reproduction costs, and low-level or cross-component\ninteractions. Interestingly, we observe that 48% of bug fixes require minimal\ncode changes (<=10 LOC) and follow simple strategies such as conditional logic\noptimization, parameter handling enhancement, or version compatibility\nhandling, indicating potential for automation. Based on these insights, we\noffer several implications for improving the reliability of both distributed\ntraining and inference frameworks and their dependent LLM projects, while also\nidentifying opportunities to leverage LLM-based tools for automated debugging\nand repair."}
{"id": "2506.10202", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10202", "abs": "https://arxiv.org/abs/2506.10202", "authors": ["Shubhashis Roy Dipta", "Francis Ferraro"], "title": "Q2E: Query-to-Event Decomposition for Zero-Shot Multilingual Text-to-Video Retrieval", "comment": null, "summary": "Recent approaches have shown impressive proficiency in extracting and\nleveraging parametric knowledge from Large-Language Models (LLMs) and\nVision-Language Models (VLMs). In this work, we consider how we can improve the\nidentification and retrieval of videos related to complex real-world events by\nautomatically extracting latent parametric knowledge about those events. We\npresent Q2E: a Query-to-Event decomposition method for zero-shot multilingual\ntext-to-video retrieval, adaptable across datasets, domains, LLMs, or VLMs. Our\napproach demonstrates that we can enhance the understanding of otherwise overly\nsimplified human queries by decomposing the query using the knowledge embedded\nin LLMs and VLMs. We additionally show how to apply our approach to both visual\nand speech-based inputs. To combine this varied multimodal knowledge, we adopt\nentropy-based fusion scoring for zero-shot fusion. Through evaluations on two\ndiverse datasets and multiple retrieval metrics, we demonstrate that Q2E\noutperforms several state-of-the-art baselines. Our evaluation also shows that\nintegrating audio information can significantly improve text-to-video\nretrieval. We have released code and data for future research."}
{"id": "2506.10484", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10484", "abs": "https://arxiv.org/abs/2506.10484", "authors": ["Fangwen Mu", "Junjie Wang", "Lin Shi", "Song Wang", "Shoubin Li", "Qing Wang"], "title": "EXPEREPAIR: Dual-Memory Enhanced LLM-based Repository-Level Program Repair", "comment": null, "summary": "Automatically repairing software issues remains a fundamental challenge at\nthe intersection of software engineering and AI. Although recent advancements\nin Large Language Models (LLMs) have demonstrated potential for\nrepository-level repair tasks, current methodologies exhibit two notable\nlimitations: (1) they often address issues in isolation, neglecting to\nincorporate insights from previously resolved issues, and (2) they rely on\nstatic and rigid prompting strategies, which constrain their ability to\ngeneralize across diverse and evolving issue scenarios. Inspired by the dual\nmemory systems of human cognition, where episodic and semantic memories work\nsynergistically to support human reasoning and decision-making, we propose\nExpeRepair, a novel LLM-based approach that continuously learns from historical\nrepair experiences through dual-channel knowledge accumulation. ExpeRepair\norganizes historical repair experiences into two complementary memories: an\nepisodic memory that stores concrete repair demonstrations, and a semantic\nmemory that encodes abstract reflective insights. At inference time, ExpeRepair\nactivates both memory systems by retrieving relevant demonstrations from\nepisodic memory and recalling high-level repair insights from semantic memory.\nIt further enhances adaptability through dynamic prompt composition,\nsynergistically integrating both memory types to replace static prompts with\ncontext-aware, experience-driven prompts. Experiments on the SWE-bench Lite\nbenchmark demonstrate that ExpeRepair achieves a pass@1 score of 49.3% with\nClaude 3.7 Sonnet, outperforming all state-of-the-art open-source methods."}
{"id": "2506.10209", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10209", "abs": "https://arxiv.org/abs/2506.10209", "authors": ["Prakamya Mishra", "Jiang Liu", "Jialian Wu", "Xiaodong Yu", "Zicheng Liu", "Emad Barsoum"], "title": "TTT-Bench: A Benchmark for Evaluating Reasoning Ability with Simple and Novel Tic-Tac-Toe-style Games", "comment": null, "summary": "Large reasoning models (LRMs) have demonstrated impressive reasoning\ncapabilities across a broad range of tasks including Olympiad-level\nmathematical problems, indicating evidence of their complex reasoning\nabilities. While many reasoning benchmarks focus on the STEM domain, the\nability of LRMs to reason correctly in broader task domains remains\nunderexplored. In this work, we introduce \\textbf{TTT-Bench}, a new benchmark\nthat is designed to evaluate basic strategic, spatial, and logical reasoning\nabilities in LRMs through a suite of four two-player Tic-Tac-Toe-style games\nthat humans can effortlessly solve from a young age. We propose a simple yet\nscalable programmatic approach for generating verifiable two-player game\nproblems for TTT-Bench. Although these games are trivial for humans, they\nrequire reasoning about the intentions of the opponent, as well as the game\nboard's spatial configurations, to ensure a win. We evaluate a diverse set of\nstate-of-the-art LRMs, and \\textbf{discover that the models that excel at hard\nmath problems frequently fail at these simple reasoning games}. Further testing\nreveals that our evaluated reasoning models score on average $\\downarrow$ 41\\%\n\\& $\\downarrow$ 5\\% lower on TTT-Bench compared to MATH 500 \\& AIME 2024\nrespectively, with larger models achieving higher performance using shorter\nreasoning traces, where most of the models struggle on long-term strategic\nreasoning situations on simple and new TTT-Bench tasks."}
{"id": "2506.10501", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10501", "abs": "https://arxiv.org/abs/2506.10501", "authors": ["Surya Jasper", "Minh Luu", "Evan Pan", "Aakash Tyagi", "Michael Quinn", "Jiang Hu", "David Kebo Houngninou"], "title": "BugGen: A Self-Correcting Multi-Agent LLM Pipeline for Realistic RTL Bug Synthesis", "comment": null, "summary": "Hardware complexity continues to strain verification resources, motivating\nthe adoption of machine learning (ML) methods to improve debug efficiency.\nHowever, ML-assisted debugging critically depends on diverse and scalable bug\ndatasets, which existing manual or automated bug insertion methods fail to\nreliably produce. We introduce BugGen, a first of its kind, fully autonomous,\nmulti-agent pipeline leveraging Large Language Models (LLMs) to systematically\ngenerate, insert, and validate realistic functional bugs in RTL. BugGen\npartitions modules, selects mutation targets via a closed-loop agentic\narchitecture, and employs iterative refinement and rollback mechanisms to\nensure syntactic correctness and functional detectability. Evaluated across\nfive OpenTitan IP blocks, BugGen produced 500 unique bugs with 94% functional\naccuracy and achieved a throughput of 17.7 validated bugs per hour-over five\ntimes faster than typical manual expert insertion. Additionally, BugGen\nidentified 104 previously undetected bugs in OpenTitan regressions,\nhighlighting its utility in exposing verification coverage gaps. Compared\nagainst Certitude, BugGen demonstrated over twice the syntactic accuracy,\ndeeper exposure of testbench blind spots, and more functionally meaningful and\ncomplex bug scenarios. Furthermore, when these BugGen-generated datasets were\nemployed to train ML-based failure triage models, we achieved high\nclassification accuracy (88.1%-93.2%) across different IP blocks, confirming\nthe practical utility and realism of generated bugs. BugGen thus provides a\nscalable solution for generating high-quality bug datasets, significantly\nenhancing verification efficiency and ML-assisted debugging."}
{"id": "2506.10231", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10231", "abs": "https://arxiv.org/abs/2506.10231", "authors": ["Anneliese Brei", "Katharine Henry", "Abhisheik Sharma", "Shashank Srivastava", "Snigdha Chaturvedi"], "title": "Classifying Unreliable Narrators with Large Language Models", "comment": "ACL 2025", "summary": "Often when we interact with a first-person account of events, we consider\nwhether or not the narrator, the primary speaker of the text, is reliable. In\nthis paper, we propose using computational methods to identify unreliable\nnarrators, i.e. those who unintentionally misrepresent information. Borrowing\nliterary theory from narratology to define different types of unreliable\nnarrators based on a variety of textual phenomena, we present TUNa, a\nhuman-annotated dataset of narratives from multiple domains, including blog\nposts, subreddit posts, hotel reviews, and works of literature. We define\nclassification tasks for intra-narrational, inter-narrational, and\ninter-textual unreliabilities and analyze the performance of popular\nopen-weight and proprietary LLMs for each. We propose learning from literature\nto perform unreliable narrator classification on real-world text data. To this\nend, we experiment with few-shot, fine-tuning, and curriculum learning\nsettings. Our results show that this task is very challenging, and there is\npotential for using LLMs to identify unreliable narrators. We release our\nexpert-annotated dataset and code and invite future research in this area."}
{"id": "2506.10525", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10525", "abs": "https://arxiv.org/abs/2506.10525", "authors": ["Junhang Cheng", "Fang Liu", "Chengru Wu", "Li Zhang"], "title": "AdaptiveLLM: A Framework for Selecting Optimal Cost-Efficient LLM for Code-Generation Based on CoT Length", "comment": "Accepted by Internetware 2025", "summary": "While Large Language Models (LLMs) have significantly advanced code\ngeneration efficiency, they face inherent challenges in balancing performance\nand inference costs across diverse programming tasks. Dynamically selecting the\noptimal LLM based on task difficulty and resource constraints offers a\npromising approach to achieve an optimal balance between efficiency and\nperformance. However, existing model selection methods are resource-intensive\nand often neglect cost efficiency. Moreover, these approaches rely on\nhuman-annotated difficulty labels that are frequently inaccessible in\nreal-world settings and may not align with the LLM's own assessment of task\ndifficulty. In this paper, we introduce AdaptiveLLM, a framework that\ndynamically selects optimal LLMs for a given coding task by automatically\nassessing task difficulty. Our framework first estimates task difficulty using\nChain-of-Thought lengths generated by reasoning model, clusters these into\nthree difficulty levels via k-means, and fine-tunes CodeBERT to embed\ndifficulty-aware features. A trained XGBoost classifier then selects the best\nmodel for each problem, optimizing the performance-cost trade-off. Experimental\nresults show that AdaptiveLLM achieves a 7.86% improvement in pass@1 score\nwhile reducing resource consumption by 88.9% compared to baseline method\nComplexityNet. When compared to a single model, AdaptiveLLM demonstrates an\napproximately 15% accuracy improvement, while maintaining the same level of\ncost consumption. Apart from that, the difficulty assessment using CoT provides\nmore reliable selection criteria than human evaluation. Our replication package\nis available at https://github.com/cjhCoder7/AdaptiveLLM."}
{"id": "2506.10245", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10245", "abs": "https://arxiv.org/abs/2506.10245", "authors": ["Iago Alves Brito", "Julia Soares Dollis", "Fernanda Bufon Färber", "Diogo Fernandes Costa Silva", "Arlindo Rodrigues Galvão Filho"], "title": "ToxSyn-PT: A Large-Scale Synthetic Dataset for Hate Speech Detection in Portuguese", "comment": "8 pages, 5 tables, 1 figure", "summary": "We present ToxSyn-PT, the first large-scale Portuguese corpus that enables\nfine-grained hate-speech classification across nine legally protected minority\ngroups. The dataset contains 53,274 synthetic sentences equally distributed\nbetween minorities groups and toxicity labels. ToxSyn-PT is created through a\nnovel four-stage pipeline: (1) a compact, manually curated seed; (2) few-shot\nexpansion with an instruction-tuned LLM; (3) paraphrase-based augmentation; and\n(4) enrichment, plus additional neutral texts to curb overfitting to\ngroup-specific cues. The resulting corpus is class-balanced, stylistically\ndiverse, and free from the social-media domain that dominate existing\nPortuguese datasets. Despite domain differences with traditional benchmarks,\nexperiments on both binary and multi-label classification on the corpus yields\nstrong results across five public Portuguese hate-speech datasets,\ndemonstrating robust generalization even across domain boundaries. The dataset\nis publicly released to advance research on synthetic data and hate-speech\ndetection in low-resource settings."}
{"id": "2506.10624", "categories": ["cs.SE", "cs.AR"], "pdf": "https://arxiv.org/pdf/2506.10624", "abs": "https://arxiv.org/abs/2506.10624", "authors": ["Lukas Jünger", "Jan Henrik Weinstock", "Tim Kraus"], "title": "Scalable Software Testing in Fast Virtual Platforms: Leveraging SystemC, QEMU and Containerization", "comment": "Published in DVCon China 2025", "summary": "The ever-increasing complexity of HW/SW systems presents a persistent\nchallenge, particularly in safety-critical domains like automotive, where\nextensive testing is imperative. However, the availability of hardware often\nlags behind, hindering early-stage software development. To address this,\nVirtual Platforms (VPs) based on the SystemC TLM-2.0 standard have emerged as a\npivotal solution, enabling pre-silicon execution and testing of unmodified\ntarget software. In this study, we propose an approach leveraging\ncontainerization to encapsulate VPs in order to reduce environment dependencies\nand enable cloud deployment for fast, parallelized test execution, as well as\nopen-source VP technologies such as QEMU and VCML to obviate the need for seat\nlicenses. To demonstrate the efficacy of our approach, we present an Artificial\nIntelligence (AI) accelerator VP case study. Through our research, we offer a\nrobust solution to address the challenges posed by the complexity of HW/SW\nsystems, with practical implications for accelerating HW/SW co-development."}
{"id": "2506.10268", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10268", "abs": "https://arxiv.org/abs/2506.10268", "authors": ["Andrea Yaoyun Cui", "Pengfei Yu"], "title": "Do Language Models Have Bayesian Brains? Distinguishing Stochastic and Deterministic Decision Patterns within Large Language Models", "comment": null, "summary": "Language models are essentially probability distributions over token\nsequences. Auto-regressive models generate sentences by iteratively computing\nand sampling from the distribution of the next token. This iterative sampling\nintroduces stochasticity, leading to the assumption that language models make\nprobabilistic decisions, similar to sampling from unknown distributions.\nBuilding on this assumption, prior research has used simulated Gibbs sampling,\ninspired by experiments designed to elicit human priors, to infer the priors of\nlanguage models. In this paper, we revisit a critical question: Do language\nmodels possess Bayesian brains? Our findings show that under certain\nconditions, language models can exhibit near-deterministic decision-making,\nsuch as producing maximum likelihood estimations, even with a non-zero sampling\ntemperature. This challenges the sampling assumption and undermines previous\nmethods for eliciting human-like priors. Furthermore, we demonstrate that\nwithout proper scrutiny, a system with deterministic behavior undergoing\nsimulated Gibbs sampling can converge to a \"false prior.\" To address this, we\npropose a straightforward approach to distinguish between stochastic and\ndeterministic decision patterns in Gibbs sampling, helping to prevent the\ninference of misleading language model priors. We experiment on a variety of\nlarge language models to identify their decision patterns under various\ncircumstances. Our results provide key insights in understanding decision\nmaking of large language models."}
{"id": "2506.10654", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10654", "abs": "https://arxiv.org/abs/2506.10654", "authors": ["Abir Bouraffa", "Carolin Brandt", "Andy Zaidmann", "Walid Maalej"], "title": "Not One to Rule Them All: Mining Meaningful Code Review Orders From GitHub", "comment": null, "summary": "Developers use tools such as GitHub pull requests to review code, discuss\nproposed changes, and request modifications. While changed files are commonly\npresented in alphabetical order, this does not necessarily coincide with the\nreviewer's preferred navigation sequence. This study investigates the different\nnavigation orders developers follow while commenting on changes submitted in\npull requests. We mined code review comments from 23,241 pull requests in 100\npopular Java and Python repositories on GitHub to analyze the order in which\nthe reviewers commented on the submitted changes. Our analysis shows that for\n44.6% of pull requests, the reviewers comment in a non-alphabetical order.\nAmong these pull requests, we identified traces of alternative meaningful\norders: 20.6% (2,134) followed a largest-diff-first order, 17.6% (1,827) were\ncommented in the order of the files' similarity to the pull request's title and\ndescription, and 29% (1,188) of pull requests containing changes to both\nproduction and test files adhered to a test-first order. We also observed that\nthe proportion of reviewed files to total submitted files was significantly\nhigher in non-alphabetically ordered reviews, which also received slightly\nfewer approvals from reviewers, on average. Our findings highlight the need for\nadditional support during code reviews, particularly for larger pull requests,\nwhere reviewers are more likely to adopt complex strategies rather than\nfollowing a single predefined order."}
{"id": "2506.10288", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10288", "abs": "https://arxiv.org/abs/2506.10288", "authors": ["Zige Wang", "Qi Zhu", "Fei Mi", "Minghui Xu", "Ruochun Jin", "Wenjing Yang"], "title": "ClusterUCB: Efficient Gradient-Based Data Selection for Targeted Fine-Tuning of LLMs", "comment": null, "summary": "Gradient-based data influence approximation has been leveraged to select\nuseful data samples in the supervised fine-tuning of large language models.\nHowever, the computation of gradients throughout the fine-tuning process\nrequires too many resources to be feasible in practice. In this paper, we\npropose an efficient gradient-based data selection framework with clustering\nand a modified Upper Confidence Bound (UCB) algorithm. Based on the intuition\nthat data samples with similar gradient features will have similar influences,\nwe first perform clustering on the training data pool. Then, we frame the\ninter-cluster data selection as a constrained computing budget allocation\nproblem and consider it a multi-armed bandit problem. A modified UCB algorithm\nis leveraged to solve this problem. Specifically, during the iterative sampling\nprocess, historical data influence information is recorded to directly estimate\nthe distributions of each cluster, and a cold start is adopted to balance\nexploration and exploitation. Experimental results on various benchmarks show\nthat our proposed framework, ClusterUCB, can achieve comparable results to the\noriginal gradient-based data selection methods while greatly reducing computing\nconsumption."}
{"id": "2506.10704", "categories": ["cs.SE", "cs.AI", "D.2.1; D.2.4; D.2.10; F.4.1; F.4.3"], "pdf": "https://arxiv.org/pdf/2506.10704", "abs": "https://arxiv.org/abs/2506.10704", "authors": ["Arshad Beg", "Diarmuid O'Donoghue", "Rosemary Monahan"], "title": "Formalising Software Requirements using Large Language Models", "comment": "Accepted and presented as a poster in ADAPT Annual Conference\n  (AACS2025) on 15th of May, 2025", "summary": "This paper is a brief introduction to our recently initiated project named\nVERIFAI: Traceability and verification of natural language requirements. The\nproject addresses the challenges in the traceability and verification of formal\nspecifications through providing support for the automatic generation of the\nformal specifications and the traceability of the requirements from the initial\nsoftware design stage through the systems implementation and verification.\nApproaches explored in this project include Natural Language Processing, use of\nontologies to describe the software system domain, reuse of existing software\nartefacts from similar systems (i.e. through similarity based reuse) and large\nlanguage models to identify and declare the specifications as well as use of\nartificial intelligence to guide the process."}
{"id": "2506.10292", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10292", "abs": "https://arxiv.org/abs/2506.10292", "authors": ["Ali Almutairi", "Abdullah Alsuhaibani", "Shoaib Jameel", "Usman Naseem", "Gelareh Mohammadi", "Imran Razzak"], "title": "Flick: Few Labels Text Classification using K-Aware Intermediate Learning in Multi-Task Low-Resource Languages", "comment": null, "summary": "Training deep learning networks with minimal supervision has gained\nsignificant research attention due to its potential to reduce reliance on\nextensive labelled data. While self-training methods have proven effective in\nsemi-supervised learning, they remain vulnerable to errors from noisy pseudo\nlabels. Moreover, most recent approaches to the few-label classification\nproblem are either designed for resource-rich languages such as English or\ninvolve complex cascading models that are prone to overfitting. To address the\npersistent challenge of few-label text classification in truly low-resource\nlinguistic contexts, where existing methods often struggle with noisy\npseudo-labels and domain adaptation, we propose Flick. Unlike prior methods\nthat rely on generic multi-cluster pseudo-labelling or complex cascading\narchitectures, Flick leverages the fundamental insight that distilling\nhigh-confidence pseudo-labels from a broader set of initial clusters can\ndramatically improve pseudo-label quality, particularly for linguistically\ndiverse, low-resource settings. Flick introduces a novel pseudo-label\nrefinement component, a departure from traditional pseudo-labelling strategies\nby identifying and leveraging top-performing pseudo-label clusters. This\ncomponent specifically learns to distil highly reliable pseudo-labels from an\ninitial broad set by focusing on single-cluster cohesion and leveraging an\nadaptive top-k selection mechanism. This targeted refinement process is crucial\nfor mitigating the propagation of errors inherent in low-resource data,\nallowing for robust fine-tuning of pre-trained language models with only a\nhandful of true labels. We demonstrate Flick's efficacy across 14 diverse\ndatasets, encompassing challenging low-resource languages such as Arabic, Urdu,\nand Setswana, alongside English, showcasing its superior performance and\nadaptability."}
{"id": "2506.10770", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10770", "abs": "https://arxiv.org/abs/2506.10770", "authors": ["Joran Leest", "Claudia Raibulet", "Patricia Lago", "Ilias Gerostathopoulos"], "title": "From Tea Leaves to System Maps: Context-awareness in Monitoring Operational Machine Learning Models", "comment": null, "summary": "Machine learning (ML) models in production do not fail due to statistical\nanomalies in their input data; they fail due to contextual misalignment -- when\ntheir environment deviates from training assumptions, leading to unreliable\npredictions. Effective ML monitoring requires rich contextual information to\nmove beyond detecting statistical shifts toward meaningful alerts and\nsystematic root-cause analysis. Yet, surprisingly, despite extensive research\nin ML monitoring and related disciplines (drift detection, data validation,\nout-of-distribution detection), there is no shared understanding of how to use\ncontextual information -- striking, given that monitoring involves\ninterpretation of information in context. In response, this paper presents a\nsystematic review to characterize and structure the various types of contextual\ninformation in this domain. Our analysis examines 94 primary studies across\ndata mining, databases, software engineering, and ML. We introduce the\nContextual System--Aspect--Representation (C-SAR) framework, a conceptual model\nthat synthesizes our findings. We also identify 20 recurring and potentially\nreusable patterns of specific system, aspect, and representation combinations,\nand map them to the monitoring activities they support. This study provides a\nnew perspective on ML monitoring: from interpreting \"tea leaves\" of\nobservational statistics into constructing and managing \"system maps\" that\nenable systematic and reliable ML monitoring practices."}
{"id": "2506.10297", "categories": ["cs.CL", "cs.CY"], "pdf": "https://arxiv.org/pdf/2506.10297", "abs": "https://arxiv.org/abs/2506.10297", "authors": ["Chuck Arvin"], "title": "\"Check My Work?\": Measuring Sycophancy in a Simulated Educational Context", "comment": "Presented at KDD Workshop on Ethical Artificial Intelligence: Methods\n  and Applications (EAI) 2025", "summary": "This study examines how user-provided suggestions affect Large Language\nModels (LLMs) in a simulated educational context, where sycophancy poses\nsignificant risks. Testing five different LLMs from the OpenAI GPT-4o and\nGPT-4.1 model classes across five experimental conditions, we show that\nresponse quality varies dramatically based on query framing. In cases where the\nstudent mentions an incorrect answer, the LLM correctness can degrade by as\nmuch as 15 percentage points, while mentioning the correct answer boosts\naccuracy by the same margin. Our results also show that this bias is stronger\nin smaller models, with an effect of up to 30% for the GPT-4.1-nano model,\nversus 8% for the GPT-4o model. Our analysis of how often LLMs \"flip\" their\nanswer, and an investigation into token level probabilities, confirm that the\nmodels are generally changing their answers to answer choices mentioned by\nstudents in line with the sycophancy hypothesis. This sycophantic behavior has\nimportant implications for educational equity, as LLMs may accelerate learning\nfor knowledgeable students while the same tools may reinforce misunderstanding\nfor less knowledgeable students. Our results highlight the need to better\nunderstand the mechanism, and ways to mitigate, such bias in the educational\ncontext."}
{"id": "2506.10785", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10785", "abs": "https://arxiv.org/abs/2506.10785", "authors": ["Vinaik Chhetri", "Krishna Upadhyay", "A. B. Siddique", "Umar Farooq"], "title": "What Users Value and Critique: Large-Scale Analysis of User Feedback on AI-Powered Mobile Apps", "comment": "12 pages, 6 figures, 5 tables", "summary": "Artificial Intelligence (AI)-powered features have rapidly proliferated\nacross mobile apps in various domains, including productivity, education,\nentertainment, and creativity. However, how users perceive, evaluate, and\ncritique these AI features remains largely unexplored, primarily due to the\noverwhelming volume of user feedback. In this work, we present the first\ncomprehensive, large-scale study of user feedback on AI-powered mobile apps,\nleveraging a curated dataset of 292 AI-driven apps across 14 categories with\n894K AI-specific reviews from Google Play. We develop and validate a\nmulti-stage analysis pipeline that begins with a human-labeled benchmark and\nsystematically evaluates large language models (LLMs) and prompting strategies.\nEach stage, including review classification, aspect-sentiment extraction, and\nclustering, is validated for accuracy and consistency. Our pipeline enables\nscalable, high-precision analysis of user feedback, extracting over one million\naspect-sentiment pairs clustered into 18 positive and 15 negative user topics.\nOur analysis reveals that users consistently focus on a narrow set of themes:\npositive comments emphasize productivity, reliability, and personalized\nassistance, while negative feedback highlights technical failures (e.g.,\nscanning and recognition), pricing concerns, and limitations in language\nsupport. Our pipeline surfaces both satisfaction with one feature and\nfrustration with another within the same review. These fine-grained,\nco-occurring sentiments are often missed by traditional approaches that treat\npositive and negative feedback in isolation or rely on coarse-grained analysis.\nTo this end, our approach provides a more faithful reflection of the real-world\nuser experiences with AI-powered apps. Category-aware analysis further uncovers\nboth universal drivers of satisfaction and domain-specific frustrations."}
{"id": "2506.10299", "categories": ["cs.CL", "cs.SD", "eess.AS"], "pdf": "https://arxiv.org/pdf/2506.10299", "abs": "https://arxiv.org/abs/2506.10299", "authors": ["Hayato Futami", "Emiru Tsunoo", "Yosuke Kashiwagi", "Yuki Ito", "Hassan Shahmohammadi", "Siddhant Arora", "Shinji Watanabe"], "title": "Scheduled Interleaved Speech-Text Training for Speech-to-Speech Translation with LLMs", "comment": "Accepted to Interspeech2025", "summary": "Speech-to-speech translation (S2ST) has been advanced with large language\nmodels (LLMs), which are fine-tuned on discrete speech units. In such\napproaches, modality adaptation from text to speech has been an issue. LLMs are\ntrained on text-only data, which presents challenges to adapt them to speech\nmodality with limited speech-to-speech data. To address the training\ndifficulty, we propose scheduled interleaved speech--text training in this\nstudy. We use interleaved speech--text units instead of speech units during\ntraining, where aligned text tokens are interleaved at the word level. We\ngradually decrease the ratio of text as training progresses, to facilitate\nprogressive modality adaptation from text to speech. We conduct experimental\nevaluations by fine-tuning LLaMA3.2-1B for S2ST on the CVSS dataset. We show\nthat the proposed method consistently improves the translation performances,\nespecially for languages with limited training data."}
{"id": "2506.10803", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10803", "abs": "https://arxiv.org/abs/2506.10803", "authors": ["Ryan Gibb", "Patrick Ferris", "David Allsopp", "Michael Winston Dales", "Mark Elvers", "Thomas Gazagnaire", "Sadiq Jaffer", "Thomas Leonard", "Jon Ludlam", "Anil Madhavapeddy"], "title": "Solving Package Management via Hypergraph Dependency Resolution", "comment": "Submitted to SPLASH 2025", "summary": "Package managers are everywhere, with seemingly every language and operating\nsystem implementing their own solution. The lack of interoperability between\nthese systems means that multi-lingual projects are unable to express precise\ndependencies across language ecosystems, and external system and hardware\ndependencies are typically implicit and unversioned. We define HyperRes, a\nformal system for describing versioned dependency resolution using a hypergraph\nthat is expressive enough to model many ecosystems and solve dependency\nconstraints across them. We define translations from dozens of existing package\nmanagers to HyperRes and comprehensively demonstrate that dependency resolution\ncan work across ecosystems that are currently distinct. This does not require\nusers to shift their choice of package managers; instead, HyperRes allows for\nthe translation of packaging metadata between ecosystems, and for solving to be\nprecisely specialised to a particular deployment environment."}
{"id": "2506.10343", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10343", "abs": "https://arxiv.org/abs/2506.10343", "authors": ["Dongwon Jung", "Wenxuan Zhou", "Muhao Chen"], "title": "Code Execution as Grounded Supervision for LLM Reasoning", "comment": null, "summary": "Training large language models (LLMs) with chain-of-thought (CoT) supervision\nhas proven effective for enhancing their reasoning abilities. However,\nobtaining reliable and accurate reasoning supervision remains a significant\nchallenge. We propose a scalable method for generating a high-quality CoT\nsupervision dataset by leveraging the determinism of program execution. Unlike\nexisting reasoning dataset generation methods that rely on costly human\nannotations or error-prone LLM-generated CoT, our approach extracts verifiable,\nstep-by-step reasoning traces from code execution and transforms them into a\nnatural language CoT reasoning. Experiments on reasoning benchmarks across\nvarious domains show that our method effectively equips LLMs with transferable\nreasoning abilities across diverse tasks. Furthermore, the ablation studies\nvalidate that our method produces highly accurate reasoning data and reduces\noverall token length during inference by reducing meaningless repetition and\noverthinking."}
{"id": "2506.10833", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10833", "abs": "https://arxiv.org/abs/2506.10833", "authors": ["Fabian C. Peña", "Steffen Herbold"], "title": "Evaluating Large Language Models on Non-Code Software Engineering Tasks", "comment": null, "summary": "Large Language Models (LLMs) have demonstrated remarkable capabilities in\ncode understanding and generation; however, their effectiveness on non-code\nSoftware Engineering (SE) tasks remains underexplored. We present the first\ncomprehensive benchmark, which we name `Software Engineering Language\nUnderstanding' (SELU), for evaluating LLMs on 17 non-code tasks, spanning from\nidentifying whether a requirement is functional or non-functional to estimating\nthe effort and complexity of backlog items. SELU covers classification,\nregression, Named Entity Recognition (NER), and Masked Language Modeling (MLM)\ntargets, with data drawn from diverse sources such as code repositories, issue\ntracking systems, and developer forums. We fine-tune 22 open-source LLMs,\nprompt two proprietary alternatives, and train two baselines. Performance is\nmeasured using metrics such as F1-macro, SMAPE, F1-micro, and accuracy, and\ncompared via the Bayesian signed-rank test. Our results show that\nmoderate-scale decoder-only models consistently form a top-tier, exhibiting\nhigh mean performance and low across-task variance, while domain adaptation via\ncode-focused pre-training might yield only modest improvements. These insights\nguide model selection for non-code SE workflows and highlight directions for\nexpanding SELU to generative and design-oriented scenarios."}
{"id": "2506.10380", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2506.10380", "abs": "https://arxiv.org/abs/2506.10380", "authors": ["Xiaohan Yu", "Pu Jian", "Chong Chen"], "title": "TableRAG: A Retrieval Augmented Generation Framework for Heterogeneous Document Reasoning", "comment": "Under review. Codes are available at\n  https://github.com/yxh-y/TableRAG/tree/main", "summary": "Retrieval-Augmented Generation (RAG) has demonstrated considerable\neffectiveness in open-domain question answering. However, when applied to\nheterogeneous documents, comprising both textual and tabular components,\nexisting RAG approaches exhibit critical limitations. The prevailing practice\nof flattening tables and chunking strategies disrupts the intrinsic tabular\nstructure, leads to information loss, and undermines the reasoning capabilities\nof LLMs in multi-hop, global queries. To address these challenges, we propose\nTableRAG, an hybrid framework that unifies textual understanding and complex\nmanipulations over tabular data. TableRAG iteratively operates in four steps:\ncontext-sensitive query decomposition, text retrieval, SQL programming and\nexecution, and compositional intermediate answer generation. We also develop\nHeteQA, a novel benchmark designed to evaluate the multi-hop heterogeneous\nreasoning capabilities. Experimental results demonstrate that TableRAG\nconsistently outperforms existing baselines on both public datasets and our\nHeteQA, establishing a new state-of-the-art for heterogeneous document question\nanswering. We release TableRAG at https://github.com/yxh-y/TableRAG/tree/main."}
{"id": "2506.10869", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10869", "abs": "https://arxiv.org/abs/2506.10869", "authors": ["Quinn Thibeault", "Giulia Pedrielli"], "title": "MultiCoSim: A Python-based Multi-Fidelity Co-Simulation Framework", "comment": null, "summary": "Simulation is a foundational tool for the analysis and testing of\ncyber-physical systems (CPS), underpinning activities such as algorithm\ndevelopment, runtime monitoring, and system verification. As CPS grow in\ncomplexity and scale, particularly in safety-critical and learning-enabled\nsettings, accurate analysis and synthesis increasingly rely on the rapid use of\nsimulation experiments. Because CPS inherently integrate hardware, software,\nand physical processes, simulation platforms must support co-simulation of\nheterogeneous components at varying levels of fidelity. Despite recent advances\nin high-fidelity modeling of hardware, firmware, and physics, co-simulation in\ndiverse environments remains challenging. These limitations hinder the\ndevelopment of reusable benchmarks and impede the use of simulation for\nautomated and comparative evaluation.\n  Existing simulation tools often rely on rigid configurations, lack automation\nsupport, and present obstacles to portability and modularity. Many are\nconfigured through static text files or impose constraints on how simulation\ncomponents are represented and connected, making it difficult to flexibly\ncompose systems or integrate components across platforms.\n  To address these challenges, we introduce MultiCoSim, a Python-based\nsimulation framework that enables users to define, compose, and configure\nsimulation components programmatically. MultiCoSim supports distributed,\ncomponent-based co-simulation and allows seamless substitution and\nreconfiguration of components. We demonstrate the flexibility of MultiCoSim\nthrough case studies that include co-simulations involving custom\nautomaton-based controllers, as well as integration with off-the-shelf\nplatforms like the PX4 autopilot for aerial robotics. These examples highlight\nMultiCoSim's capability to streamline CPS simulation pipelines for research and\ndevelopment."}
{"id": "2506.10406", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10406", "abs": "https://arxiv.org/abs/2506.10406", "authors": ["Yuhua Jiang", "Yuwen Xiong", "Yufeng Yuan", "Chao Xin", "Wenyuan Xu", "Yu Yue", "Qianchuan Zhao", "Lin Yan"], "title": "PAG: Multi-Turn Reinforced LLM Self-Correction with Policy as Generative Verifier", "comment": null, "summary": "Large Language Models (LLMs) have demonstrated impressive capabilities in\ncomplex reasoning tasks, yet they still struggle to reliably verify the\ncorrectness of their own outputs. Existing solutions to this verification\nchallenge often depend on separate verifier models or require multi-stage\nself-correction training pipelines, which limit scalability. In this paper, we\npropose Policy as Generative Verifier (PAG), a simple and effective framework\nthat empowers LLMs to self-correct by alternating between policy and verifier\nroles within a unified multi-turn reinforcement learning (RL) paradigm.\nDistinct from prior approaches that always generate a second attempt regardless\nof model confidence, PAG introduces a selective revision mechanism: the model\nrevises its answer only when its own generative verification step detects an\nerror. This verify-then-revise workflow not only alleviates model collapse but\nalso jointly enhances both reasoning and verification abilities. Extensive\nexperiments across diverse reasoning benchmarks highlight PAG's dual\nadvancements: as a policy, it enhances direct generation and self-correction\naccuracy; as a verifier, its self-verification outperforms self-consistency."}
{"id": "2506.10954", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10954", "abs": "https://arxiv.org/abs/2506.10954", "authors": ["Lianghong Guo", "Yanlin Wang", "Caihua Li", "Pengyu Yang", "Jiachi Chen", "Wei Tao", "Yingtian Zou", "Duyu Tang", "Zibin Zheng"], "title": "SWE-Factory: Your Automated Factory for Issue Resolution Training Data and Evaluation Benchmarks", "comment": null, "summary": "Constructing large-scale datasets for the GitHub issue resolution task is\ncrucial for both training and evaluating the software engineering capabilities\nof Large Language Models (LLMs). However, the traditional process for creating\nsuch benchmarks is notoriously challenging and labor-intensive, particularly in\nthe stages of setting up evaluation environments, grading test outcomes, and\nvalidating task instances. In this paper, we propose SWE-Factory, an automated\npipeline designed to address these challenges. To tackle these issues, our\npipeline integrates three core automated components. First, we introduce\nSWE-Builder, a multi-agent system that automates evaluation environment\nconstruction, which employs four specialized agents that work in a\ncollaborative, iterative loop and leverages an environment memory pool to\nenhance efficiency. Second, we introduce a standardized, exit-code-based\ngrading method that eliminates the need for manually writing custom parsers.\nFinally, we automate the fail2pass validation process using these reliable exit\ncode signals. Experiments on 671 issues across four programming languages show\nthat our pipeline can effectively construct valid task instances; for example,\nwith GPT-4.1-mini, our SWE-Builder constructs 269 valid instances at $0.045 per\ninstance, while with Gemini-2.5-flash, it achieves comparable performance at\nthe lowest cost of $0.024 per instance. We also demonstrate that our\nexit-code-based grading achieves 100% accuracy compared to manual inspection,\nand our automated fail2pass validation reaches a precision of 0.92 and a recall\nof 1.00. We hope our automated pipeline will accelerate the collection of\nlarge-scale, high-quality GitHub issue resolution datasets for both training\nand evaluation. Our code and datasets are released at\nhttps://github.com/DeepSoftwareAnalytics/swe-factory."}
{"id": "2506.10415", "categories": ["cs.CL", "cs.CV"], "pdf": "https://arxiv.org/pdf/2506.10415", "abs": "https://arxiv.org/abs/2506.10415", "authors": ["Yingjin Song", "Yupei Du", "Denis Paperno", "Albert Gatt"], "title": "Burn After Reading: Do Multimodal Large Language Models Truly Capture Order of Events in Image Sequences?", "comment": "27 pages, 14 figures. Accepted to ACL 2025", "summary": "This paper introduces the TempVS benchmark, which focuses on temporal\ngrounding and reasoning capabilities of Multimodal Large Language Models\n(MLLMs) in image sequences. TempVS consists of three main tests (i.e., event\nrelation inference, sentence ordering and image ordering), each accompanied\nwith a basic grounding test. TempVS requires MLLMs to rely on both visual and\nlinguistic modalities to understand the temporal order of events. We evaluate\n38 state-of-the-art MLLMs, demonstrating that models struggle to solve TempVS,\nwith a substantial performance gap compared to human capabilities. We also\nprovide fine-grained insights that suggest promising directions for future\nresearch. Our TempVS benchmark data and code are available at\nhttps://github.com/yjsong22/TempVS."}
{"id": "2506.10421", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10421", "abs": "https://arxiv.org/abs/2506.10421", "authors": ["Avneet Kaur", "Arnav Arora"], "title": "Beyond the Battlefield: Framing Analysis of Media Coverage in Conflict Reporting", "comment": null, "summary": "Framing used by news media, especially in times of conflict, can have\nsubstantial impact on readers' opinion, potentially aggravating the conflict\nitself. Current studies on the topic of conflict framing have limited insights\ndue to their qualitative nature or only look at surface level generic frames\nwithout going deeper. In this work, we identify indicators of war and peace\njournalism, as outlined by prior work in conflict studies, in a corpus of news\narticles reporting on the Israel-Palestine war. For our analysis, we use\ncomputational approaches, using a combination of frame semantics and large\nlanguage models to identify both communicative framing and its connection to\nlinguistic framing. Our analysis reveals a higher focus on war based reporting\nrather than peace based. We also show substantial differences in reporting\nacross the US, UK, and Middle Eastern news outlets in framing who the assailant\nand victims of the conflict are, surfacing biases within the media."}
{"id": "2506.10446", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10446", "abs": "https://arxiv.org/abs/2506.10446", "authors": ["Zehui Ling", "Deshu Chen", "Hongwei Zhang", "Yifeng Jiao", "Xin Guo", "Yuan Cheng"], "title": "Fast on the Easy, Deep on the Hard: Efficient Reasoning via Powered Length Penalty", "comment": null, "summary": "Large language models (LLMs) have demonstrated significant advancements in\nreasoning capabilities, performing well on various challenging benchmarks.\nTechniques like Chain-of-Thought prompting have been introduced to further\nimprove reasoning. However, these approaches frequently generate longer\noutputs, which in turn increase computational latency. Although some methods\nuse reinforcement learning to shorten reasoning, they often apply uniform\npenalties without considering the problem's complexity, leading to suboptimal\noutcomes. In this study, we seek to enhance the efficiency of LLM reasoning by\npromoting conciseness for simpler problems while preserving sufficient\nreasoning for more complex ones for accuracy, thus improving the model's\noverall performance. Specifically, we manage the model's reasoning efficiency\nby dividing the reward function and including a novel penalty for output\nlength. Our approach has yielded impressive outcomes in benchmark evaluations\nacross three datasets: GSM8K, MATH500, and AIME2024. For the comparatively\nsimpler datasets GSM8K and MATH500, our method has effectively shortened output\nlengths while preserving or enhancing accuracy. On the more demanding AIME2024\ndataset, our approach has resulted in improved accuracy."}
{"id": "2506.10486", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10486", "abs": "https://arxiv.org/abs/2506.10486", "authors": ["Xanh Ho", "Sunisth Kumar", "Yun-Ang Wu", "Florian Boudin", "Atsuhiro Takasu", "Akiko Aizawa"], "title": "Table-Text Alignment: Explaining Claim Verification Against Tables in Scientific Papers", "comment": "8 pages; code and data are available at\n  https://github.com/Alab-NII/SciTabAlign", "summary": "Scientific claim verification against tables typically requires predicting\nwhether a claim is supported or refuted given a table. However, we argue that\npredicting the final label alone is insufficient: it reveals little about the\nmodel's reasoning and offers limited interpretability. To address this, we\nreframe table-text alignment as an explanation task, requiring models to\nidentify the table cells essential for claim verification. We build a new\ndataset by extending the SciTab benchmark with human-annotated cell-level\nrationales. Annotators verify the claim label and highlight the minimal set of\ncells needed to support their decision. After the annotation process, we\nutilize the collected information and propose a taxonomy for handling ambiguous\ncases. Our experiments show that (i) incorporating table alignment information\nimproves claim verification performance, and (ii) most LLMs, while often\npredicting correct labels, fail to recover human-aligned rationales, suggesting\nthat their predictions do not stem from faithful reasoning."}
{"id": "2506.10491", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10491", "abs": "https://arxiv.org/abs/2506.10491", "authors": ["Aleksandra Sorokovikova", "Pavel Chizhov", "Iuliia Eremenko", "Ivan P. Yamshchikov"], "title": "Surface Fairness, Deep Bias: A Comparative Study of Bias in Language Models", "comment": null, "summary": "Modern language models are trained on large amounts of data. These data\ninevitably include controversial and stereotypical content, which contains all\nsorts of biases related to gender, origin, age, etc. As a result, the models\nexpress biased points of view or produce different results based on the\nassigned personality or the personality of the user. In this paper, we\ninvestigate various proxy measures of bias in large language models (LLMs). We\nfind that evaluating models with pre-prompted personae on a multi-subject\nbenchmark (MMLU) leads to negligible and mostly random differences in scores.\nHowever, if we reformulate the task and ask a model to grade the user's answer,\nthis shows more significant signs of bias. Finally, if we ask the model for\nsalary negotiation advice, we see pronounced bias in the answers. With the\nrecent trend for LLM assistant memory and personalization, these problems open\nup from a different angle: modern LLM users do not need to pre-prompt the\ndescription of their persona since the model already knows their\nsocio-demographics."}
{"id": "2506.10504", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10504", "abs": "https://arxiv.org/abs/2506.10504", "authors": ["Sangmin Song", "Juhwan Choi", "JungMin Yun", "YoungBin Kim"], "title": "Beyond Single-User Dialogue: Assessing Multi-User Dialogue State Tracking Capabilities of Large Language Models", "comment": null, "summary": "Large language models (LLMs) have demonstrated remarkable performance in\nzero-shot dialogue state tracking (DST), reducing the need for task-specific\ntraining. However, conventional DST benchmarks primarily focus on structured\nuser-agent conversations, failing to capture the complexities of real-world\nmulti-user interactions. In this study, we assess the robustness of LLMs in\nmulti-user DST while minimizing dataset construction costs. Inspired by recent\nadvances in LLM-based data annotation, we extend an existing DST dataset by\ngenerating utterances of a second user based on speech act theory. Our\nmethodology systematically incorporates a second user's utterances into\nconversations, enabling a controlled evaluation of LLMs in multi-user settings.\nExperimental results reveal a significant performance drop compared to\nsingle-user DST, highlighting the limitations of current LLMs in extracting and\ntracking dialogue states amidst multiple speakers. Our findings emphasize the\nneed for future research to enhance LLMs for multi-user DST scenarios, paving\nthe way for more realistic and robust DST models."}
{"id": "2506.10508", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10508", "abs": "https://arxiv.org/abs/2506.10508", "authors": ["Yilin Xiao", "Chuang Zhou", "Qinggang Zhang", "Bo Li", "Qing Li", "Xiao Huang"], "title": "Reliable Reasoning Path: Distilling Effective Guidance for LLM Reasoning with Knowledge Graphs", "comment": null, "summary": "Large language models (LLMs) often struggle with knowledge-intensive tasks\ndue to a lack of background knowledge and a tendency to hallucinate. To address\nthese limitations, integrating knowledge graphs (KGs) with LLMs has been\nintensively studied. Existing KG-enhanced LLMs focus on supplementary factual\nknowledge, but still struggle with solving complex questions. We argue that\nrefining the relationships among facts and organizing them into a logically\nconsistent reasoning path is equally important as factual knowledge itself.\nDespite their potential, extracting reliable reasoning paths from KGs poses the\nfollowing challenges: the complexity of graph structures and the existence of\nmultiple generated paths, making it difficult to distinguish between useful and\nredundant ones. To tackle these challenges, we propose the RRP framework to\nmine the knowledge graph, which combines the semantic strengths of LLMs with\nstructural information obtained through relation embedding and bidirectional\ndistribution learning. Additionally, we introduce a rethinking module that\nevaluates and refines reasoning paths according to their significance.\nExperimental results on two public datasets show that RRP achieves\nstate-of-the-art performance compared to existing baseline methods. Moreover,\nRRP can be easily integrated into various LLMs to enhance their reasoning\nabilities in a plug-and-play manner. By generating high-quality reasoning paths\ntailored to specific questions, RRP distills effective guidance for LLM\nreasoning."}
{"id": "2506.10614", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10614", "abs": "https://arxiv.org/abs/2506.10614", "authors": ["Promise Dodzi Kpoglu"], "title": "Unsupervised Protoform Reconstruction through Parsimonious Rule-guided Heuristics and Evolutionary Search", "comment": null, "summary": "We propose an unsupervised method for the reconstruction of protoforms i.e.,\nancestral word forms from which modern language forms are derived. While prior\nwork has primarily relied on probabilistic models of phonological edits to\ninfer protoforms from cognate sets, such approaches are limited by their\npredominantly data-driven nature. In contrast, our model integrates data-driven\ninference with rule-based heuristics within an evolutionary optimization\nframework. This hybrid approach leverages on both statistical patterns and\nlinguistically motivated constraints to guide the reconstruction process. We\nevaluate our method on the task of reconstructing Latin protoforms using a\ndataset of cognates from five Romance languages. Experimental results\ndemonstrate substantial improvements over established baselines across both\ncharacter-level accuracy and phonological plausibility metrics."}
{"id": "2506.10622", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10622", "abs": "https://arxiv.org/abs/2506.10622", "authors": ["Sergio Burdisso", "Esaú Villatoro-Tello", "Petr Motlicek"], "title": "SDialog: A Python Toolkit for Synthetic Dialogue Generation and Analysis", "comment": "https://github.com/idiap/sdialog", "summary": "The advancement of conversational AI systems relies on the availability of\nhigh-quality, flexible, and reproducible synthetic dialogues for training,\nevaluation, and benchmarking. SDialog is a modular, extensible Python toolkit\ndesigned to address the challenges of synthetic dialogue generation and\nanalysis. By leveraging instruction-tuned Large Language Models (LLMs), SDialog\nprovides abstractions for personas, orchestration, and scenario management,\nenabling the creation of realistic, diverse, and controllable conversational\ndata for research and development. SDialog supports workflows such as\nmulti-agent simulation and scenario-driven generation, and represents a step\nforward in the standardization of tools and frameworks for synthetic data\ngeneration, a crucial advancement for ensuring reproducibility in today's\nfast-evolving research landscape."}
{"id": "2506.10627", "categories": ["cs.CL", "cs.AI", "I.2.7"], "pdf": "https://arxiv.org/pdf/2506.10627", "abs": "https://arxiv.org/abs/2506.10627", "authors": ["Numaan Naeem", "Sarfraz Ahmad", "Momina Ahsan", "Hasan Iqbal"], "title": "NeuralNexus at BEA 2025 Shared Task: Retrieval-Augmented Prompting for Mistake Identification in AI Tutors", "comment": "6 pages, 2 figures, 1 table", "summary": "This paper presents our system for Track 1: Mistake Identification in the BEA\n2025 Shared Task on Pedagogical Ability Assessment of AI-powered Tutors. The\ntask involves evaluating whether a tutor's response correctly identifies a\nmistake in a student's mathematical reasoning. We explore four approaches: (1)\nan ensemble of machine learning models over pooled token embeddings from\nmultiple pretrained language models (LMs); (2) a frozen sentence-transformer\nusing [CLS] embeddings with an MLP classifier; (3) a history-aware model with\nmulti-head attention between token-level history and response embeddings; and\n(4) a retrieval-augmented few-shot prompting system with a large language model\n(LLM) i.e. GPT 4o. Our final system retrieves semantically similar examples,\nconstructs structured prompts, and uses schema-guided output parsing to produce\ninterpretable predictions. It outperforms all baselines, demonstrating the\neffectiveness of combining example-driven prompting with LLM reasoning for\npedagogical feedback assessment. Our code is available at\nhttps://github.com/NaumanNaeem/BEA_2025."}
{"id": "2506.10641", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10641", "abs": "https://arxiv.org/abs/2506.10641", "authors": ["Tatsuya Hiraoka", "Kentaro Inui"], "title": "Spelling-out is not Straightforward: LLMs' Capability of Tokenization from Token to Characters", "comment": null, "summary": "Large language models (LLMs) can spell out tokens character by character with\nhigh accuracy, yet they struggle with more complex character-level tasks, such\nas identifying compositional subcomponents within tokens. In this work, we\ninvestigate how LLMs internally represent and utilize character-level\ninformation during the spelling-out process. Our analysis reveals that,\nalthough spelling out is a simple task for humans, it is not handled in a\nstraightforward manner by LLMs. Specifically, we show that the embedding layer\ndoes not fully encode character-level information, particularly beyond the\nfirst character. As a result, LLMs rely on intermediate and higher Transformer\nlayers to reconstruct character-level knowledge, where we observe a distinct\n\"breakthrough\" in their spelling behavior. We validate this mechanism through\nthree complementary analyses: probing classifiers, identification of knowledge\nneurons, and inspection of attention weights."}
{"id": "2506.10687", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10687", "abs": "https://arxiv.org/abs/2506.10687", "authors": ["Thanh Thi Nguyen", "Campbell Wilson", "Janis Dalins"], "title": "Large Language Models for Detection of Life-Threatening Texts", "comment": null, "summary": "Detecting life-threatening language is essential for safeguarding individuals\nin distress, promoting mental health and well-being, and preventing potential\nharm and loss of life. This paper presents an effective approach to identifying\nlife-threatening texts using large language models (LLMs) and compares them\nwith traditional methods such as bag of words, word embedding, topic modeling,\nand Bidirectional Encoder Representations from Transformers. We fine-tune three\nopen-source LLMs including Gemma, Mistral, and Llama-2 using their 7B parameter\nvariants on different datasets, which are constructed with class balance,\nimbalance, and extreme imbalance scenarios. Experimental results demonstrate a\nstrong performance of LLMs against traditional methods. More specifically,\nMistral and Llama-2 models are top performers in both balanced and imbalanced\ndata scenarios while Gemma is slightly behind. We employ the upsampling\ntechnique to deal with the imbalanced data scenarios and demonstrate that while\nthis method benefits traditional approaches, it does not have as much impact on\nLLMs. This study demonstrates a great potential of LLMs for real-world\nlife-threatening language detection problems."}
{"id": "2506.10715", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10715", "abs": "https://arxiv.org/abs/2506.10715", "authors": ["Lorenzo Augello", "John P. McCrae"], "title": "Inferring Adjective Hypernyms with Language Models to Increase the Connectivity of Open English Wordnet", "comment": null, "summary": "Open English Wordnet is a key resource published in OntoLex-lemon as part of\nthe linguistic linked open data cloud. There are, however, many links missing\nin the resource, and in this paper, we look at how we can establish hypernymy\nbetween adjectives. We present a theoretical discussion of the hypernymy\nrelation and how it differs for adjectives in contrast to nouns and verbs. We\ndevelop a new resource for adjective hypernymy and fine-tune large language\nmodels to predict adjective hypernymy, showing that the methodology of\nTaxoLLaMa can be adapted to this task."}
{"id": "2506.10716", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10716", "abs": "https://arxiv.org/abs/2506.10716", "authors": ["Ye Yu", "Yaoning Yu", "Haohan Wang"], "title": "PREMISE: Scalable and Strategic Prompt Optimization for Efficient Mathematical Reasoning in Large Models", "comment": null, "summary": "Large reasoning models (LRMs) such as Claude 3.7 Sonnet and OpenAI o1 achieve\nstrong performance on mathematical benchmarks using lengthy chain-of-thought\n(CoT) reasoning, but the resulting traces are often unnecessarily verbose. This\ninflates token usage and cost, limiting deployment in latency-sensitive or\nAPI-constrained settings. We introduce PREMISE (PRompt-based Efficient\nMathematical Inference with Strategic Evaluation), a prompt-only framework that\nreduces reasoning overhead without modifying model weights. PREMISE combines\ntrace-level diagnostics with gradient-inspired prompt optimization to minimize\nredundant computation while preserving answer accuracy. The approach jointly\noptimizes brevity and correctness through a multi-objective textual search that\nbalances token length and answer validity. Unlike prior work, PREMISE runs in a\nsingle-pass black-box interface, so it can be applied directly to commercial\nLLMs. On GSM8K, SVAMP, and Math500 we match or exceed baseline accuracy\n($96\\%\\rightarrow96\\%$ with Claude, $91\\%\\rightarrow92\\%$ with Gemini) while\nreducing reasoning tokens by up to $87.5\\%$ and cutting dollar cost by\n$69$--$82\\%$. These results show that prompt-level optimization is a practical\nand scalable path to efficient LRM inference without compromising reasoning\nquality."}
{"id": "2506.10728", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2506.10728", "abs": "https://arxiv.org/abs/2506.10728", "authors": ["Priyanka Kargupta", "Runchu Tian", "Jiawei Han"], "title": "Beyond True or False: Retrieval-Augmented Hierarchical Analysis of Nuanced Claims", "comment": "Accepted to ACL 2025 Main Conference. Code available at:\n  https://github.com/pkargupta/claimspect", "summary": "Claims made by individuals or entities are oftentimes nuanced and cannot be\nclearly labeled as entirely \"true\" or \"false\" -- as is frequently the case with\nscientific and political claims. However, a claim (e.g., \"vaccine A is better\nthan vaccine B\") can be dissected into its integral aspects and sub-aspects\n(e.g., efficacy, safety, distribution), which are individually easier to\nvalidate. This enables a more comprehensive, structured response that provides\na well-rounded perspective on a given problem while also allowing the reader to\nprioritize specific angles of interest within the claim (e.g., safety towards\nchildren). Thus, we propose ClaimSpect, a retrieval-augmented generation-based\nframework for automatically constructing a hierarchy of aspects typically\nconsidered when addressing a claim and enriching them with corpus-specific\nperspectives. This structure hierarchically partitions an input corpus to\nretrieve relevant segments, which assist in discovering new sub-aspects.\nMoreover, these segments enable the discovery of varying perspectives towards\nan aspect of the claim (e.g., support, neutral, or oppose) and their respective\nprevalence (e.g., \"how many biomedical papers believe vaccine A is more\ntransportable than B?\"). We apply ClaimSpect to a wide variety of real-world\nscientific and political claims featured in our constructed dataset, showcasing\nits robustness and accuracy in deconstructing a nuanced claim and representing\nperspectives within a corpus. Through real-world case studies and human\nevaluation, we validate its effectiveness over multiple baselines."}
{"id": "2506.10737", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2506.10737", "abs": "https://arxiv.org/abs/2506.10737", "authors": ["Priyanka Kargupta", "Nan Zhang", "Yunyi Zhang", "Rui Zhang", "Prasenjit Mitra", "Jiawei Han"], "title": "TaxoAdapt: Aligning LLM-Based Multidimensional Taxonomy Construction to Evolving Research Corpora", "comment": "Accepted to ACL 2025 Main Conference. Code available at:\n  https://github.com/pkargupta/taxoadapt", "summary": "The rapid evolution of scientific fields introduces challenges in organizing\nand retrieving scientific literature. While expert-curated taxonomies have\ntraditionally addressed this need, the process is time-consuming and expensive.\nFurthermore, recent automatic taxonomy construction methods either (1)\nover-rely on a specific corpus, sacrificing generalizability, or (2) depend\nheavily on the general knowledge of large language models (LLMs) contained\nwithin their pre-training datasets, often overlooking the dynamic nature of\nevolving scientific domains. Additionally, these approaches fail to account for\nthe multi-faceted nature of scientific literature, where a single research\npaper may contribute to multiple dimensions (e.g., methodology, new tasks,\nevaluation metrics, benchmarks). To address these gaps, we propose TaxoAdapt, a\nframework that dynamically adapts an LLM-generated taxonomy to a given corpus\nacross multiple dimensions. TaxoAdapt performs iterative hierarchical\nclassification, expanding both the taxonomy width and depth based on corpus'\ntopical distribution. We demonstrate its state-of-the-art performance across a\ndiverse set of computer science conferences over the years to showcase its\nability to structure and capture the evolution of scientific fields. As a\nmultidimensional method, TaxoAdapt generates taxonomies that are 26.51% more\ngranularity-preserving and 50.41% more coherent than the most competitive\nbaselines judged by LLMs."}
{"id": "2506.10766", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10766", "abs": "https://arxiv.org/abs/2506.10766", "authors": ["Diana Abagyan", "Alejandro R. Salamanca", "Andres Felipe Cruz-Salinas", "Kris Cao", "Hangyu Lin", "Acyr Locatelli", "Marzieh Fadaee", "Ahmet Üstün", "Sara Hooker"], "title": "One Tokenizer To Rule Them All: Emergent Language Plasticity via Multilingual Tokenizers", "comment": null, "summary": "Pretraining massively multilingual Large Language Models (LLMs) for many\nlanguages at once is challenging due to limited model capacity, scarce\nhigh-quality data, and compute constraints. Moreover, the lack of language\ncoverage of the tokenizer makes it harder to address the gap for new languages\npurely at the post-training stage. In this work, we study what relatively cheap\ninterventions early on in training improve \"language plasticity\", or adaptation\ncapabilities of the model post-training to new languages. We focus on tokenizer\ndesign and propose using a universal tokenizer that is trained for more\nlanguages than the primary pretraining languages to enable efficient adaptation\nin expanding language coverage after pretraining. Our systematic experiments\nacross diverse groups of languages and different training strategies show that\na universal tokenizer enables significantly higher language adaptation, with up\nto 20.2% increase in win rates compared to tokenizers specific to pretraining\nlanguages. Furthermore, a universal tokenizer also leads to better plasticity\ntowards languages that are completely unseen in the tokenizer and pretraining,\nby up to 5% win rate gain. We achieve this adaptation to an expanded set of\nlanguages with minimal compromise in performance on the majority of languages\nincluded in pretraining."}
{"id": "2506.10769", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10769", "abs": "https://arxiv.org/abs/2506.10769", "authors": ["Alberto Testoni", "Iacer Calixto"], "title": "Different Questions, Different Models: Fine-Grained Evaluation of Uncertainty and Calibration in Clinical QA with LLMs", "comment": null, "summary": "Accurate and well-calibrated uncertainty estimates are essential for\ndeploying large language models (LLMs) in high-stakes domains such as clinical\ndecision support. We present a fine-grained evaluation of uncertainty\nestimation methods for clinical multiple-choice question answering, covering\nten open-source LLMs (general-purpose, biomedical, and reasoning models) across\ntwo datasets, eleven medical specialties, and six question types. We compare\nstandard single-generation and sampling-based methods, and present a case study\nexploring simple, single-pass estimators based on behavioral signals in\nreasoning traces. These lightweight methods approach the performance of\nSemantic Entropy while requiring only one generation. Our results reveal\nsubstantial variation across specialties and question types, underscoring the\nimportance of selecting models based on both the nature of the question and\nmodel-specific strengths."}
{"id": "2506.10779", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10779", "abs": "https://arxiv.org/abs/2506.10779", "authors": ["Viet Anh Trinh", "Xinlu He", "Jacob Whitehill"], "title": "Improving Named Entity Transcription with Contextual LLM-based Revision", "comment": null, "summary": "With recent advances in modeling and the increasing amount of supervised\ntraining data, automatic speech recognition (ASR) systems have achieved\nremarkable performance on general speech. However, the word error rate (WER) of\nstate-of-the-art ASR remains high for named entities. Since named entities are\noften the most critical keywords, misrecognizing them can affect all downstream\napplications, especially when the ASR system functions as the front end of a\ncomplex system. In this paper, we introduce a large language model (LLM)\nrevision mechanism to revise incorrect named entities in ASR predictions by\nleveraging the LLM's reasoning ability as well as local context (e.g., lecture\nnotes) containing a set of correct named entities. Finally, we introduce the\nNER-MIT-OpenCourseWare dataset, containing 45 hours of data from MIT courses\nfor development and testing. On this dataset, our proposed technique achieves\nup to 30\\% relative WER reduction for named entities."}
{"id": "2506.10800", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10800", "abs": "https://arxiv.org/abs/2506.10800", "authors": ["Wei Sun", "Tingyu Qu", "Mingxiao Li", "Jesse Davis", "Marie-Francine Moens"], "title": "Mitigating Negative Interference in Multilingual Sequential Knowledge Editing through Null-Space Constraints", "comment": "ACL 2025 Findings", "summary": "Efficiently updating multilingual knowledge in large language models (LLMs),\nwhile preserving consistent factual representations across languages, remains a\nlong-standing and unresolved challenge. While deploying separate editing\nsystems for each language might seem viable, this approach incurs substantial\ncosts due to the need to manage multiple models. A more efficient solution\ninvolves integrating knowledge updates across all languages into a unified\nmodel. However, performing sequential edits across languages often leads to\ndestructive parameter interference, significantly degrading multilingual\ngeneralization and the accuracy of injected knowledge. To address this\nchallenge, we propose LangEdit, a novel null-space constrained framework\ndesigned to precisely isolate language-specific knowledge updates. The core\ninnovation of LangEdit lies in its ability to project parameter updates for\neach language onto the orthogonal complement of previous updated subspaces.\nThis approach mathematically guarantees update independence while preserving\nmultilingual generalization capabilities. We conduct a comprehensive evaluation\nacross three model architectures, six languages, and four downstream tasks,\ndemonstrating that LangEdit effectively mitigates parameter interference and\noutperforms existing state-of-the-art editing methods. Our results highlight\nits potential for enabling efficient and accurate multilingual knowledge\nupdates in LLMs. The code is available at\nhttps://github.com/VRCMF/LangEdit.git."}
{"id": "2506.10822", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10822", "abs": "https://arxiv.org/abs/2506.10822", "authors": ["Zhensheng Jin", "Xinze Li", "Yifan Ji", "Chunyi Peng", "Zhenghao Liu", "Qi Shi", "Yukun Yan", "Shuo Wang", "Furong Peng", "Ge Yu"], "title": "ReCUT: Balancing Reasoning Length and Accuracy in LLMs via Stepwise Trails and Preference Optimization", "comment": null, "summary": "Recent advances in Chain-of-Thought (CoT) prompting have substantially\nimproved the reasoning capabilities of Large Language Models (LLMs). However,\nthese methods often suffer from overthinking, leading to unnecessarily lengthy\nor redundant reasoning traces. Existing approaches attempt to mitigate this\nissue through curating multiple reasoning chains for training LLMs, but their\neffectiveness is often constrained by the quality of the generated data and\nprone to overfitting. To address the challenge, we propose Reasoning\nCompression ThroUgh Stepwise Trials (ReCUT), a novel method aimed at balancing\nthe accuracy and length of reasoning trajectory. Specifically, ReCUT employs a\nstepwise exploration mechanism and a long-short switched sampling strategy,\nenabling LLMs to incrementally generate diverse reasoning paths. These paths\nare evaluated and used to construct preference pairs to train two specialized\nmodels (Gemini LLMs)-one optimized for reasoning accuracy, the other for\nshorter reasoning. A final integrated model is obtained by interpolating the\nparameters of these two models. Experimental results across multiple math\nreasoning datasets and backbone models demonstrate that ReCUT significantly\nreduces reasoning lengths by approximately 30-50%, while maintaining or\nimproving reasoning accuracy compared to various baselines. All codes and data\nwill be released via https://github.com/NEUIR/ReCUT."}
{"id": "2506.10844", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2506.10844", "abs": "https://arxiv.org/abs/2506.10844", "authors": ["Alireza Salemi", "Mukta Maddipatla", "Hamed Zamani"], "title": "CIIR@LiveRAG 2025: Optimizing Multi-Agent Retrieval Augmented Generation through Self-Training", "comment": null, "summary": "This paper presents mRAG, a multi-agent retrieval-augmented generation (RAG)\nframework composed of specialized agents for subtasks such as planning,\nsearching, reasoning, and coordination. Our system uses a self-training\nparadigm with reward-guided trajectory sampling to optimize inter-agent\ncollaboration and enhance response generation. Evaluated on DataMorgana-derived\ndatasets during the SIGIR 2025 LiveRAG competition, mRAG outperforms\nconventional RAG baselines. We further analyze competition outcomes and\nshowcase the framework's strengths with case studies, demonstrating its\nefficacy for complex, real-world RAG tasks."}
{"id": "2506.10848", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10848", "abs": "https://arxiv.org/abs/2506.10848", "authors": ["Qingyan Wei", "Yaojie Zhang", "Zhiyuan Liu", "Dongrui Liu", "Linfeng Zhang"], "title": "Accelerating Diffusion Large Language Models with SlowFast: The Three Golden Principles", "comment": "11 pages; 5 figures;", "summary": "Diffusion-based language models (dLLMs) have emerged as a promising\nalternative to traditional autoregressive LLMs by enabling parallel token\ngeneration and significantly reducing inference latency. However, existing\nsampling strategies for dLLMs, such as confidence-based or semi-autoregressive\ndecoding, often suffer from static behavior, leading to suboptimal efficiency\nand limited flexibility. In this paper, we propose SlowFast Sampling, a novel\ndynamic sampling strategy that adaptively alternates between exploratory and\naccelerated decoding stages. Our method is guided by three golden principles:\ncertainty principle, convergence principle, and positional principle, which\ngovern when and where tokens can be confidently and efficiently decoded. We\nfurther integrate our strategy with dLLM-Cache to reduce redundant computation.\nExtensive experiments across benchmarks and models show that SlowFast Sampling\nachieves up to 15.63$\\times$ speedup on LLaDA with minimal accuracy drop, and\nup to 34.22$\\times$ when combined with caching. Notably, our approach\noutperforms strong autoregressive baselines like LLaMA3 8B in throughput,\ndemonstrating that well-designed sampling can unlock the full potential of\ndLLMs for fast and high-quality generation."}
{"id": "2506.10855", "categories": ["cs.CL", "eess.AS"], "pdf": "https://arxiv.org/pdf/2506.10855", "abs": "https://arxiv.org/abs/2506.10855", "authors": ["Michele Gubian", "Ioana Krehan", "Oli Liu", "James Kirby", "Sharon Goldwater"], "title": "Analyzing the relationships between pretraining language, phonetic, tonal, and speaker information in self-supervised speech models", "comment": null, "summary": "Analyses of self-supervised speech models have begun to reveal where and how\nthey represent different types of information. However, almost all analyses\nhave focused on English. Here, we examine how wav2vec2 models trained on four\ndifferent languages encode both language-matched and non-matched speech. We use\nprobing classifiers and geometric analyses to examine how phones, lexical\ntones, and speaker information are represented. We show that for all\npretraining and test languages, the subspaces encoding phones, tones, and\nspeakers are largely orthogonal, and that layerwise patterns of probing\naccuracy are similar, with a relatively small advantage for matched-language\nphone and tone (but not speaker) probes in the later layers. Our findings\nsuggest that the structure of representations learned by wav2vec2 is largely\nindependent of the speech material used during pretraining."}
{"id": "2506.10877", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10877", "abs": "https://arxiv.org/abs/2506.10877", "authors": ["Hongda Sun", "Jiaren Peng", "Wenzhong Yang", "Liang He", "Bo Du", "Rui Yan"], "title": "Enhancing Medical Dialogue Generation through Knowledge Refinement and Dynamic Prompt Adjustment", "comment": "ACL 2025 Findings", "summary": "Medical dialogue systems (MDS) have emerged as crucial online platforms for\nenabling multi-turn, context-aware conversations with patients. However,\nexisting MDS often struggle to (1) identify relevant medical knowledge and (2)\ngenerate personalized, medically accurate responses. To address these\nchallenges, we propose MedRef, a novel MDS that incorporates knowledge refining\nand dynamic prompt adjustment. First, we employ a knowledge refining mechanism\nto filter out irrelevant medical data, improving predictions of critical\nmedical entities in responses. Additionally, we design a comprehensive prompt\nstructure that incorporates historical details and evident details. To enable\nreal-time adaptability to diverse patient conditions, we implement two key\nmodules, Triplet Filter and Demo Selector, providing appropriate knowledge and\ndemonstrations equipped in the system prompt. Extensive experiments on MedDG\nand KaMed benchmarks show that MedRef outperforms state-of-the-art baselines in\nboth generation quality and medical entity accuracy, underscoring its\neffectiveness and reliability for real-world healthcare applications."}
{"id": "2506.10885", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10885", "abs": "https://arxiv.org/abs/2506.10885", "authors": ["Qingda", "Mai"], "title": "Slimming Down LLMs Without Losing Their Minds", "comment": "10 pages", "summary": "This paper investigates and validates the impact of fine-tuning on large\nlanguage model performance, focusing on parameter-efficient methods (LoRA and\nQLoRA). We evaluate model capabilities across three key domains: (1)\ncommonsense reasoning (HellaSwag), (2) mathematical reasoning (GSM8K), and (3)\nmulti-domain knowledge (MMLU-CS).\n  Our findings demonstrate that: (1) LoRA-based methods effectively improve\ntask-specific performance while maintaining computational efficiency, and (2)\nperformance strongly depends on alignment between fine-tuning dataset and\nbenchmark tasks. The study provides both theoretical insights into\nparameter-efficient mechanisms and practical guidance for developers\nimplementing efficient LLM adaptation with limited resources."}
{"id": "2506.10887", "categories": ["cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10887", "abs": "https://arxiv.org/abs/2506.10887", "authors": ["Yixiao Huang", "Hanlin Zhu", "Tianyu Guo", "Jiantao Jiao", "Somayeh Sojoudi", "Michael I. Jordan", "Stuart Russell", "Song Mei"], "title": "Generalization or Hallucination? Understanding Out-of-Context Reasoning in Transformers", "comment": null, "summary": "Large language models (LLMs) can acquire new knowledge through fine-tuning,\nbut this process exhibits a puzzling duality: models can generalize remarkably\nfrom new facts, yet are also prone to hallucinating incorrect information.\nHowever, the reasons for this phenomenon remain poorly understood. In this\nwork, we argue that both behaviors stem from a single mechanism known as\nout-of-context reasoning (OCR): the ability to deduce implications by\nassociating concepts, even those without a causal link. Our experiments across\nfive prominent LLMs confirm that OCR indeed drives both generalization and\nhallucination, depending on whether the associated concepts are causally\nrelated. To build a rigorous theoretical understanding of this phenomenon, we\nthen formalize OCR as a synthetic factual recall task. We empirically show that\na one-layer single-head attention-only transformer with factorized output and\nvalue matrices can learn to solve this task, while a model with combined\nweights cannot, highlighting the crucial role of matrix factorization. Our\ntheoretical analysis shows that the OCR capability can be attributed to the\nimplicit bias of gradient descent, which favors solutions that minimize the\nnuclear norm of the combined output-value matrix. This mathematical structure\nexplains why the model learns to associate facts and implications with high\nsample efficiency, regardless of whether the correlation is causal or merely\nspurious. Ultimately, our work provides a theoretical foundation for\nunderstanding the OCR phenomenon, offering a new lens for analyzing and\nmitigating undesirable behaviors from knowledge injection."}
{"id": "2506.10896", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10896", "abs": "https://arxiv.org/abs/2506.10896", "authors": ["Thomas Sounack", "Joshua Davis", "Brigitte Durieux", "Antoine Chaffin", "Tom J. Pollard", "Eric Lehman", "Alistair E. W. Johnson", "Matthew McDermott", "Tristan Naumann", "Charlotta Lindvall"], "title": "BioClinical ModernBERT: A State-of-the-Art Long-Context Encoder for Biomedical and Clinical NLP", "comment": null, "summary": "Encoder-based transformer models are central to biomedical and clinical\nNatural Language Processing (NLP), as their bidirectional self-attention makes\nthem well-suited for efficiently extracting structured information from\nunstructured text through discriminative tasks. However, encoders have seen\nslower development compared to decoder models, leading to limited domain\nadaptation in biomedical and clinical settings. We introduce BioClinical\nModernBERT, a domain-adapted encoder that builds on the recent ModernBERT\nrelease, incorporating long-context processing and substantial improvements in\nspeed and performance for biomedical and clinical NLP. BioClinical ModernBERT\nis developed through continued pretraining on the largest biomedical and\nclinical corpus to date, with over 53.5 billion tokens, and addresses a key\nlimitation of prior clinical encoders by leveraging 20 datasets from diverse\ninstitutions, domains, and geographic regions, rather than relying on data from\na single source. It outperforms existing biomedical and clinical encoders on\nfour downstream tasks spanning a broad range of use cases. We release both base\n(150M parameters) and large (396M parameters) versions of BioClinical\nModernBERT, along with training checkpoints to support further research."}
{"id": "2506.10903", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10903", "abs": "https://arxiv.org/abs/2506.10903", "authors": ["Lan Zhang", "Marco Valentino", "Andre Freitas"], "title": "Beyond Gold Standards: Epistemic Ensemble of LLM Judges for Formal Mathematical Reasoning", "comment": null, "summary": "Autoformalization plays a crucial role in formal mathematical reasoning by\nenabling the automatic translation of natural language statements into formal\nlanguages. While recent advances using large language models (LLMs) have shown\npromising results, methods for automatically evaluating autoformalization\nremain underexplored. As one moves to more complex domains (e.g., advanced\nmathematics), human evaluation requires significant time and domain expertise,\nespecially as the complexity of the underlying statements and background\nknowledge increases. LLM-as-a-judge presents a promising approach for\nautomating such evaluation. However, existing methods typically employ\ncoarse-grained and generic evaluation criteria, which limit their effectiveness\nfor advanced formal mathematical reasoning, where quality hinges on nuanced,\nmulti-granular dimensions. In this work, we take a step toward addressing this\ngap by introducing a systematic, automatic method to evaluate autoformalization\ntasks. The proposed method is based on an epistemically and formally grounded\nensemble (EFG) of LLM judges, defined on criteria encompassing logical\npreservation (LP), mathematical consistency (MC), formal validity (FV), and\nformal quality (FQ), resulting in a transparent assessment that accounts for\ndifferent contributing factors. We validate the proposed framework to serve as\na proxy for autoformalization assessment within the domain of formal\nmathematics. Overall, our experiments demonstrate that the EFG ensemble of LLM\njudges is a suitable emerging proxy for evaluation, more strongly correlating\nwith human assessments than a coarse-grained model, especially when assessing\nformal qualities. These findings suggest that LLM-as-judges, especially when\nguided by a well-defined set of atomic properties, could offer a scalable,\ninterpretable, and reliable support for evaluating formal mathematical\nreasoning."}
{"id": "2506.10910", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10910", "abs": "https://arxiv.org/abs/2506.10910", "authors": ["Mistral-AI", ":", "Abhinav Rastogi", "Albert Q. Jiang", "Andy Lo", "Gabrielle Berrada", "Guillaume Lample", "Jason Rute", "Joep Barmentlo", "Karmesh Yadav", "Kartik Khandelwal", "Khyathi Raghavi Chandu", "Léonard Blier", "Lucile Saulnier", "Matthieu Dinot", "Maxime Darrin", "Neha Gupta", "Roman Soletskyi", "Sagar Vaze", "Teven Le Scao", "Yihan Wang", "Adam Yang", "Alexander H. Liu", "Alexandre Sablayrolles", "Amélie Héliou", "Amélie Martin", "Andy Ehrenberg", "Anmol Agarwal", "Antoine Roux", "Arthur Darcet", "Arthur Mensch", "Baptiste Bout", "Baptiste Rozière", "Baudouin De Monicault", "Chris Bamford", "Christian Wallenwein", "Christophe Renaudin", "Clémence Lanfranchi", "Darius Dabert", "Devon Mizelle", "Diego de las Casas", "Elliot Chane-Sane", "Emilien Fugier", "Emma Bou Hanna", "Gauthier Delerce", "Gauthier Guinet", "Georgii Novikov", "Guillaume Martin", "Himanshu Jaju", "Jan Ludziejewski", "Jean-Hadrien Chabran", "Jean-Malo Delignon", "Joachim Studnia", "Jonas Amar", "Josselin Somerville Roberts", "Julien Denize", "Karan Saxena", "Kush Jain", "Lingxiao Zhao", "Louis Martin", "Luyu Gao", "Lélio Renard Lavaud", "Marie Pellat", "Mathilde Guillaumin", "Mathis Felardos", "Maximilian Augustin", "Mickaël Seznec", "Nikhil Raghuraman", "Olivier Duchenne", "Patricia Wang", "Patrick von Platen", "Patryk Saffer", "Paul Jacob", "Paul Wambergue", "Paula Kurylowicz", "Pavankumar Reddy Muddireddy", "Philomène Chagniot", "Pierre Stock", "Pravesh Agrawal", "Romain Sauvestre", "Rémi Delacourt", "Sanchit Gandhi", "Sandeep Subramanian", "Shashwat Dalal", "Siddharth Gandhi", "Soham Ghosh", "Srijan Mishra", "Sumukh Aithal", "Szymon Antoniak", "Thibault Schueller", "Thibaut Lavril", "Thomas Robert", "Thomas Wang", "Timothée Lacroix", "Valeriia Nemychnikova", "Victor Paltz", "Virgile Richard", "Wen-Ding Li", "William Marshall", "Xuanyu Zhang", "Yunhao Tang"], "title": "Magistral", "comment": null, "summary": "We introduce Magistral, Mistral's first reasoning model and our own scalable\nreinforcement learning (RL) pipeline. Instead of relying on existing\nimplementations and RL traces distilled from prior models, we follow a ground\nup approach, relying solely on our own models and infrastructure. Notably, we\ndemonstrate a stack that enabled us to explore the limits of pure RL training\nof LLMs, present a simple method to force the reasoning language of the model,\nand show that RL on text data alone maintains most of the initial checkpoint's\ncapabilities. We find that RL on text maintains or improves multimodal\nunderstanding, instruction following and function calling. We present Magistral\nMedium, trained for reasoning on top of Mistral Medium 3 with RL alone, and we\nopen-source Magistral Small (Apache 2.0) which further includes cold-start data\nfrom Magistral Medium."}
{"id": "2506.10920", "categories": ["cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10920", "abs": "https://arxiv.org/abs/2506.10920", "authors": ["Or Shafran", "Atticus Geiger", "Mor Geva"], "title": "Decomposing MLP Activations into Interpretable Features via Semi-Nonnegative Matrix Factorization", "comment": null, "summary": "A central goal for mechanistic interpretability has been to identify the\nright units of analysis in large language models (LLMs) that causally explain\ntheir outputs. While early work focused on individual neurons, evidence that\nneurons often encode multiple concepts has motivated a shift toward analyzing\ndirections in activation space. A key question is how to find directions that\ncapture interpretable features in an unsupervised manner. Current methods rely\non dictionary learning with sparse autoencoders (SAEs), commonly trained over\nresidual stream activations to learn directions from scratch. However, SAEs\noften struggle in causal evaluations and lack intrinsic interpretability, as\ntheir learning is not explicitly tied to the computations of the model. Here,\nwe tackle these limitations by directly decomposing MLP activations with\nsemi-nonnegative matrix factorization (SNMF), such that the learned features\nare (a) sparse linear combinations of co-activated neurons, and (b) mapped to\ntheir activating inputs, making them directly interpretable. Experiments on\nLlama 3.1, Gemma 2 and GPT-2 show that SNMF derived features outperform SAEs\nand a strong supervised baseline (difference-in-means) on causal steering,\nwhile aligning with human-interpretable concepts. Further analysis reveals that\nspecific neuron combinations are reused across semantically-related features,\nexposing a hierarchical structure in the MLP's activation space. Together,\nthese results position SNMF as a simple and effective tool for identifying\ninterpretable features and dissecting concept representations in LLMs."}
{"id": "2506.10934", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10934", "abs": "https://arxiv.org/abs/2506.10934", "authors": ["Timothy Obiso", "Kenneth Lai", "Abhijnan Nath", "Nikhil Krishnaswamy", "James Pustejovsky"], "title": "Dynamic Epistemic Friction in Dialogue", "comment": "11 pages, 2 figures, 2 tables, CoNLL 2025", "summary": "Recent developments in aligning Large Language Models (LLMs) with human\npreferences have significantly enhanced their utility in human-AI collaborative\nscenarios. However, such approaches often neglect the critical role of\n\"epistemic friction,\" or the inherent resistance encountered when updating\nbeliefs in response to new, conflicting, or ambiguous information. In this\npaper, we define dynamic epistemic friction as the resistance to epistemic\nintegration, characterized by the misalignment between an agent's current\nbelief state and new propositions supported by external evidence. We position\nthis within the framework of Dynamic Epistemic Logic (Van Benthem and Pacuit,\n2011), where friction emerges as nontrivial belief-revision during the\ninteraction. We then present analyses from a situated collaborative task that\ndemonstrate how this model of epistemic friction can effectively predict belief\nupdates in dialogues, and we subsequently discuss how the model of belief\nalignment as a measure of epistemic resistance or friction can naturally be\nmade more sophisticated to accommodate the complexities of real-world dialogue\nscenarios."}
{"id": "2506.10952", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10952", "abs": "https://arxiv.org/abs/2506.10952", "authors": ["Mozhi Zhang", "Howe Tissue", "Lu Wang", "Xipeng Qiu"], "title": "Domain2Vec: Vectorizing Datasets to Find the Optimal Data Mixture without Training", "comment": "Accepted to ICML2025", "summary": "We introduce~\\textsc{Domain2Vec}, a novel approach that decomposes any\ndataset into a linear combination of several \\emph{meta-domains}, a new concept\ndesigned to capture the key underlying features of datasets.\n\\textsc{Domain2Vec} maintains a vocabulary of meta-domains and uses a\nclassifier to decompose any given dataset into a domain vector that corresponds\nto a distribution over this vocabulary. These domain vectors enable the\nidentification of the optimal data mixture for language model (LM) pretraining\nin a training-free manner under the \\emph{\\textbf{D}istribution\n\\textbf{A}lignment \\textbf{A}ssumption} (DA$^{2}$), which suggests that when\nthe data distributions of the training set and the validation set are better\naligned, a lower validation loss is achieved. Moreover, \\textsc{Domain2vec} can\nbe seamlessly integrated into previous works to model the relationship between\ndomain vectors and LM performance, greatly enhancing the efficiency and\nscalability of previous methods. Extensive experiments demonstrate that\n\\textsc{Domain2Vec} helps find the data mixture that enhances downstream task\nperformance with minimal computational overhead. Specifically,\n\\textsc{Domain2Vec} achieves the same validation loss on Pile-CC using only\n$51.5\\%$ of the computation required when training on the original mixture of\nThe Pile dataset. Under equivalent compute budget, \\textsc{Domain2Vec} improves\ndownstream performance by an average of $2.83\\%$."}
{"id": "2506.10960", "categories": ["cs.CL", "cs.AI", "cs.CR", "cs.IR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10960", "abs": "https://arxiv.org/abs/2506.10960", "authors": ["Kangwei Liu", "Siyuan Cheng", "Bozhong Tian", "Xiaozhuan Liang", "Yuyang Yin", "Meng Han", "Ningyu Zhang", "Bryan Hooi", "Xi Chen", "Shumin Deng"], "title": "ChineseHarm-Bench: A Chinese Harmful Content Detection Benchmark", "comment": "Work in progress", "summary": "Large language models (LLMs) have been increasingly applied to automated\nharmful content detection tasks, assisting moderators in identifying policy\nviolations and improving the overall efficiency and accuracy of content review.\nHowever, existing resources for harmful content detection are predominantly\nfocused on English, with Chinese datasets remaining scarce and often limited in\nscope. We present a comprehensive, professionally annotated benchmark for\nChinese content harm detection, which covers six representative categories and\nis constructed entirely from real-world data. Our annotation process further\nyields a knowledge rule base that provides explicit expert knowledge to assist\nLLMs in Chinese harmful content detection. In addition, we propose a\nknowledge-augmented baseline that integrates both human-annotated knowledge\nrules and implicit knowledge from large language models, enabling smaller\nmodels to achieve performance comparable to state-of-the-art LLMs. Code and\ndata are available at https://github.com/zjunlp/ChineseHarm-bench."}
{"id": "2506.10974", "categories": ["cs.CL", "cs.AI", "cs.HC", "cs.LG", "cs.MA"], "pdf": "https://arxiv.org/pdf/2506.10974", "abs": "https://arxiv.org/abs/2506.10974", "authors": ["Yixin Ou", "Yujie Luo", "Jingsheng Zheng", "Lanning Wei", "Shuofei Qiao", "Jintian Zhang", "Da Zheng", "Huajun Chen", "Ningyu Zhang"], "title": "AutoMind: Adaptive Knowledgeable Agent for Automated Data Science", "comment": "Ongoing work. Code is at https://github.com/innovatingAI/AutoMind", "summary": "Large Language Model (LLM) agents have shown great potential in addressing\nreal-world data science problems. LLM-driven data science agents promise to\nautomate the entire machine learning pipeline, yet their real-world\neffectiveness remains limited. Existing frameworks depend on rigid, pre-defined\nworkflows and inflexible coding strategies; consequently, they excel only on\nrelatively simple, classical problems and fail to capture the empirical\nexpertise that human practitioners bring to complex, innovative tasks. In this\nwork, we introduce AutoMind, an adaptive, knowledgeable LLM-agent framework\nthat overcomes these deficiencies through three key advances: (1) a curated\nexpert knowledge base that grounds the agent in domain expert knowledge, (2) an\nagentic knowledgeable tree search algorithm that strategically explores\npossible solutions, and (3) a self-adaptive coding strategy that dynamically\ntailors code generation to task complexity. Evaluations on two automated data\nscience benchmarks demonstrate that AutoMind delivers superior performance\nversus state-of-the-art baselines. Additional analyses confirm favorable\neffectiveness, efficiency, and qualitative solution quality, highlighting\nAutoMind as an efficient and robust step toward fully automated data science."}
{"id": "2506.10979", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10979", "abs": "https://arxiv.org/abs/2506.10979", "authors": ["Sohee Yang", "Sang-Woo Lee", "Nora Kassner", "Daniela Gottesman", "Sebastian Riedel", "Mor Geva"], "title": "How Well Can Reasoning Models Identify and Recover from Unhelpful Thoughts?", "comment": null, "summary": "Recent reasoning models show the ability to reflect, backtrack, and\nself-validate their reasoning, which is crucial in spotting mistakes and\narriving at accurate solutions. A natural question that arises is how\neffectively models can perform such self-reevaluation. We tackle this question\nby investigating how well reasoning models identify and recover from four types\nof unhelpful thoughts: uninformative rambling thoughts, thoughts irrelevant to\nthe question, thoughts misdirecting the question as a slightly different\nquestion, and thoughts that lead to incorrect answers. We show that models are\neffective at identifying most unhelpful thoughts but struggle to recover from\nthe same thoughts when these are injected into their thinking process, causing\nsignificant performance drops. Models tend to naively continue the line of\nreasoning of the injected irrelevant thoughts, which showcases that their\nself-reevaluation abilities are far from a general \"meta-cognitive\" awareness.\nMoreover, we observe non/inverse-scaling trends, where larger models struggle\nmore than smaller ones to recover from short irrelevant thoughts, even when\ninstructed to reevaluate their reasoning. We demonstrate the implications of\nthese findings with a jailbreak experiment using irrelevant thought injection,\nshowing that the smallest models are the least distracted by\nharmful-response-triggering thoughts. Overall, our findings call for\nimprovement in self-reevaluation of reasoning models to develop better\nreasoning and safer systems."}
{"id": "2506.10584", "categories": ["cs.LO", "cs.CL"], "pdf": "https://arxiv.org/pdf/2506.10584", "abs": "https://arxiv.org/abs/2506.10584", "authors": ["Benjamin Bennetzen", "Nikolaj Rossander Kristensen", "Peter Buus Steffensen"], "title": "Encoding call-by-push-value in the pi-calculus", "comment": "56 pages", "summary": "In this report we define an encoding of Levys call-by-push-value\nlambda-calculus (CBPV) in the pi-calculus, and prove that our encoding is both\nsound and complete. We present informal (by-hand) proofs of soundness,\ncompleteness, and all required lemmas. The encoding is specialized to the\ninternal pi-calculus (pi-i-calculus) to circumvent certain challenges\nassociated with using de Bruijn index in a formalization, and it also helps\nwith bisimulation as early-, late- and open-bisimulation coincide in this\nsetting, furthermore bisimulation is a congruence. Additionally, we argue that\nour encoding also satisfies the five criteria for good encodings proposed by\nGorla, as well as show similarities between Milners and our encoding. This\npaper includes encodings from CBPV in the pi-i-calculus, asynchronous polyadic\npi-calculus and the local pi-calculus. We begin a formalization of the proof in\nCoq for the soundness and completeness of the encoding in the pi-i-calculus.\nNot all lemmas used in the formalization are themselves formally proven.\nHowever, we argue that the non-proven lemmas are reasonable, as they are proven\nby hand, or amount to Coq formalities that are straightforward given informal\narguments."}
