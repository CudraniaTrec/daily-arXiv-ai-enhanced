{"id": "2509.14988", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2509.14988", "abs": "https://arxiv.org/abs/2509.14988", "authors": ["Thorsten Altenkirch", "Ambrus Kaposi", "Szumi Xie"], "title": "The Groupoid-syntax of Type Theory is a Set", "comment": null, "summary": "Categories with families (CwFs) have been used to define the semantics of\ntype theory in type theory. In the setting of Homotopy Type Theory (HoTT), one\nof the limitations of the traditional notion of CwFs is the requirement to\nset-truncate types, which excludes models based on univalent categories, such\nas the standard set model. To address this limitation, we introduce the concept\nof a Groupoid Category with Families (GCwF). This framework truncates types at\nthe groupoid level and incorporates coherence equations, providing a natural\nextension of the CwF framework when starting from a 1-category.\n  We demonstrate that the initial GCwF for a type theory with a base family of\nsets and Pi-types (groupoid-syntax) is set-truncated. Consequently, this allows\nus to utilize the conventional intrinsic syntax of type theory while enabling\ninterpretations in semantically richer and more natural models. All\nconstructions in this paper were formalised in Cubical Agda."}
{"id": "2509.15015", "categories": ["cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.15015", "abs": "https://arxiv.org/abs/2509.15015", "authors": ["Harrison Oates", "Hyeonggeun Yun", "Nikhila Gurusinghe"], "title": "Theorem Provers: One Size Fits All?", "comment": null, "summary": "Theorem provers are important tools for people working in formal\nverification. There are a myriad of interactive systems available today, with\nvarying features and approaches motivating their development. These design\nchoices impact their usability, alongside the problem domain in which they are\nemployed. We test-drive two such provers, Coq and Idris2, by proving the\ncorrectness of insertion sort, before providing a qualitative evaluation of\ntheir performance. We then compare their community and library support. This\nwork helps users to make an informed choice of system, and highlight approaches\nin other systems that developers might find useful."}
{"id": "2509.15116", "categories": ["cs.LO", "cs.AI", "math.AG"], "pdf": "https://arxiv.org/pdf/2509.15116", "abs": "https://arxiv.org/abs/2509.15116", "authors": ["Arnaud Mayeux", "Jujian Zhang"], "title": "The mechanization of science illustrated by the Lean formalization of the multi-graded Proj construction", "comment": "Short note", "summary": "We formalize the multi-graded Proj construction in Lean4, illustrating\nmechanized mathematics and formalization."}
{"id": "2509.14372", "categories": ["cs.FL", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.14372", "abs": "https://arxiv.org/abs/2509.14372", "authors": ["Tomáš Masopust", "Jakub Večeřa"], "title": "On the Complexity of the Secret Protection Problem for Discrete-Event Systems", "comment": null, "summary": "The secret protection problem (SPP) seeks to synthesize a minimum-cost policy\nensuring that every execution from an initial state to a secret state includes\na sufficient number of protected events. Previous work showed that the problem\nis solvable in polynomial time under the assumptions that transitions are\nuniquely labeled and that the clearance level for every event is uniformly set\nto one. When these assumptions are relaxed, the problem was shown to be weakly\nNP-hard, leaving the complexity of the uniform variant open. In this paper, we\nclose this gap by proving that the uniform secret protection problem is\nNP-hard, even if all parameters are restricted to binary values. Moreover, we\nstrengthen the existing results by showing that the general problem becomes\nNP-hard as soon as the uniqueness constraint on event labels is removed. We\nfurther propose a formulation of SPP as an Integer Linear Programming (ILP)\nproblem. Our empirical evaluation demonstrates the scalability and\neffectiveness of the ILP-based approach on relatively large systems. Finally,\nwe examine a variant of SPP in which only distinct protected events contribute\nto clearance and show that its decision version is $\\Sigma_{2}^{P}$-complete."}
{"id": "2509.14496", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14496", "abs": "https://arxiv.org/abs/2509.14496", "authors": ["Wyatt Petula", "Anushcka Joshi", "Peggy Tu", "Amrutha Somasundar", "Suman Saha"], "title": "DeliverC: Teaching Pointers through GenAI-Powered Game-Based Learning", "comment": "The paper before Camera-ready paper. The paper has been accepted by\n  SIGCSE 2026", "summary": "While game-based learning is widely used in programming education, few tools\noffer adaptive, real-time support for complex topics, such as C pointers. We\npresent DeliverC, a GenAI-enhanced game that integrates GPT-4-mini to provide\npersonalized hints and generate pointer-related challenges on the fly. In a\npilot study involving 25 undergraduate students, we investigated the impact of\nthe system on learning through gameplay data and a 15-item survey that covered\nconstructs such as motivation, self-efficacy, metacognition, and feedback\nquality. Results show that most students felt more confident and reflective\nafter using the tool, and error rates decreased as students progressed through\nscaffolded levels. However, participation decreased with task difficulty, and\nsome students reported receiving unclear or vague feedback. These findings\nsuggest that DeliverC can enhance engagement and understanding in systems\nprogramming, although refinement in AI-generated feedback is still needed. Our\nstudy highlights the potential of combining GenAI with game-based learning to\nsupport personalized and interactive practice in traditionally challenging\nprogramming domains."}
{"id": "2509.14265", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14265", "abs": "https://arxiv.org/abs/2509.14265", "authors": ["Siyuan Chen", "Zhichao Lu", "Qingfu Zhang"], "title": "Evolution of Kernels: Automated RISC-V Kernel Optimization with Large Language Models", "comment": "Technical report", "summary": "Automated kernel design is critical for overcoming software ecosystem\nbarriers in emerging hardware platforms like RISC-V. While large language\nmodels (LLMs) have shown promise for automated kernel optimization,\ndemonstrating success in CUDA domains with comprehensive technical documents\nand mature codebases, their effectiveness remains unproven for reference-scarce\ndomains like RISC-V. We present Evolution of Kernels (EoK), a novel LLM-based\nevolutionary program search framework that automates kernel design for domains\nwith limited reference material. EoK mitigates reference scarcity by mining and\nformalizing reusable optimization ideas (general design principles + actionable\nthoughts) from established kernel libraries' development histories; it then\nguides parallel LLM explorations using these ideas, enriched via\nRetrieval-Augmented Generation (RAG) with RISC-V-specific context, prioritizing\nhistorically effective techniques. Empirically, EoK achieves a median 1.27x\nspeedup, surpassing human experts on all 80 evaluated kernel design tasks and\nimproving upon prior LLM-based automated kernel design methods by 20%. These\nresults underscore the viability of incorporating human experience into\nemerging domains and highlight the immense potential of LLM-based automated\nkernel optimization."}
{"id": "2509.14238", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14238", "abs": "https://arxiv.org/abs/2509.14238", "authors": ["Jinfan Frank Hu"], "title": "Tokenization Strategies for Low-Resource Agglutinative Languages in Word2Vec: Case Study on Turkish and Finnish", "comment": "6 pages, 9 figures, accepted to ACDSA 2025, to be indexed in IEEE\n  Xplore", "summary": "Tokenization plays a critical role in processing agglutinative languages,\nwhere a single word can encode multiple morphemes carrying syntactic and\nsemantic information. This study evaluates the impact of various tokenization\nstrategies - word-level, character-level, n-gram, and Byte Pair Encoding (BPE)\n- on the quality of static word embeddings generated by Word2Vec for Turkish\nand Finnish. Using a 10,000-article Wikipedia corpus, we trained models under\nlow-resource conditions and evaluated them on a Named Entity Recognition (NER)\ntask. Despite the theoretical appeal of subword segmentation, word-level\ntokenization consistently outperformed all alternatives across all tokenization\nstrategies tested. These findings suggest that in agglutinative, low-resource\ncontexts, preserving boundaries via word-level tokenization may yield better\nembedding performance than complex statistical methods. This has practical\nimplications for developing NLP pipelines for under-resourced languages where\nannotated data and computing power are limited."}
{"id": "2509.14694", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2509.14694", "abs": "https://arxiv.org/abs/2509.14694", "authors": ["Kengo Irie", "Masaki Waga", "Kohei Suenaga"], "title": "Active Learning of Symbolic Mealy Automata", "comment": "Accepted to ICTAC 2025", "summary": "We propose $\\Lambda^*_M$-an active learning algorithm that learns symbolic\nMealy automata, which support infinite input alphabets and multiple output\ncharacters. Each of these two features has been addressed separately in prior\nwork. Combining these two features poses a challenge in learning the outputs\ncorresponding to potentially infinite sets of input characters at each state.\nTo address this challenge, we introduce the notion of essential input\ncharacters, a finite set of input characters that is sufficient for learning\nthe output function of a symbolic Mealy automaton. $\\Lambda^*_M$ maintains an\nunderapproximation of the essential input characters and refines this set\nduring learning. We prove that $\\Lambda^*_M$ terminates under certain\nassumptions. Moreover, we provide upper and lower bounds for the query\ncomplexity. Their similarity suggests the tightness of the bounds. We\nempirically demonstrate that $\\Lambda^*_M$ is i) efficient regarding the number\nof queries on practical benchmarks and ii) scalable according to evaluations\nwith randomly generated benchmarks."}
{"id": "2509.15005", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.15005", "abs": "https://arxiv.org/abs/2509.15005", "authors": ["Facundo Domínguez", "Arnaud Spiwack"], "title": "Refinement-Types Driven Development: A study", "comment": "11 pages, 3 figures, artifacts\n  https://github.com/tweag/ifl2025-liquidhaskell", "summary": "This paper advocates for the broader application of SMT solvers in everyday\nprogramming, challenging the conventional wisdom that these tools are solely\nfor formal methods and verification. We claim that SMT solvers, when seamlessly\nintegrated into a compiler's static checks, significantly enhance the\ncapabilities of ordinary type checkers in program composition. Specifically, we\nargue that refinement types, as embodied by Liquid Haskell, enable the use of\nSMT solvers in mundane programming tasks. Through a case study on handling\nbinder scopes in compilers, we envision a future where ordinary programming is\nmade simpler and more enjoyable with the aid of refinement types and SMT\nsolvers. As a secondary contribution, we present a prototype implementation of\na theory of finite maps for Liquid Haskell's solver, developed to support our\ncase study."}
{"id": "2509.14273", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14273", "abs": "https://arxiv.org/abs/2509.14273", "authors": ["Swapnil Sharma Sarker", "Tanzina Taher Ifty"], "title": "Automated and Context-Aware Code Documentation Leveraging Advanced LLMs", "comment": null, "summary": "Code documentation is essential to improve software maintainability and\ncomprehension. The tedious nature of manual code documentation has led to much\nresearch on automated documentation generation. Existing automated approaches\nprimarily focused on code summarization, leaving a gap in template-based\ndocumentation generation (e.g., Javadoc), particularly with publicly available\nLarge Language Models (LLMs). Furthermore, progress in this area has been\nhindered by the lack of a Javadoc-specific dataset that incorporates modern\nlanguage features, provides broad framework/library coverage, and includes\nnecessary contextual information. This study aims to address these gaps by\ndeveloping a tailored dataset and assessing the capabilities of publicly\navailable LLMs for context-aware, template-based Javadoc generation. In this\nwork, we present a novel, context-aware dataset for Javadoc generation that\nincludes critical structural and semantic information from modern Java\ncodebases. We evaluate five open-source LLMs (including LLaMA-3.1, Gemma-2,\nPhi-3, Mistral, Qwen-2.5) using zero-shot, few-shot, and fine-tuned setups and\nprovide a comparative analysis of their performance. Our results demonstrate\nthat LLaMA 3.1 performs consistently well and is a reliable candidate for\npractical, automated Javadoc generation, offering a viable alternative to\nproprietary systems."}
{"id": "2509.14249", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14249", "abs": "https://arxiv.org/abs/2509.14249", "authors": ["Happymore Masoka"], "title": "Advancing Conversational AI with Shona Slang: A Dataset and Hybrid Model for Digital Inclusion", "comment": null, "summary": "African languages remain underrepresented in natural language processing\n(NLP), with most corpora limited to formal registers that fail to capture the\nvibrancy of everyday communication. This work addresses this gap for Shona, a\nBantu language spoken in Zimbabwe and Zambia, by introducing a novel\nShona--English slang dataset curated from anonymized social media\nconversations. The dataset is annotated for intent, sentiment, dialogue acts,\ncode-mixing, and tone, and is publicly available at\nhttps://github.com/HappymoreMasoka/Working_with_shona-slang. We fine-tuned a\nmultilingual DistilBERT classifier for intent recognition, achieving 96.4\\%\naccuracy and 96.3\\% F1-score, hosted at https://huggingface.co/HappymoreMasoka.\nThis classifier is integrated into a hybrid chatbot that combines rule-based\nresponses with retrieval-augmented generation (RAG) to handle domain-specific\nqueries, demonstrated through a use case assisting prospective students with\ngraduate program information at Pace University. Qualitative evaluation shows\nthe hybrid system outperforms a RAG-only baseline in cultural relevance and\nuser engagement. By releasing the dataset, model, and methodology, this work\nadvances NLP resources for African languages, promoting inclusive and\nculturally resonant conversational AI."}
{"id": "2509.14914", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2509.14914", "abs": "https://arxiv.org/abs/2509.14914", "authors": ["Zoltán Fülöp", "Heiko Vogler"], "title": "Characterization of deterministically recognizable weighted tree languages over commutative semifields by finitely generated and cancellative scalar algebras", "comment": null, "summary": "Due to the works of S. Bozapalidis and A. Alexandrakis, there is a well-known\ncharacterization of recognizable weighted tree languages over fields in terms\nof finite-dimensionality of syntactic vector spaces. Here we prove a\ncharacterization of bottom-up deterministically recognizable weighted tree\nlanguages over commutative semifields in terms of the requirement that the\nrespective m-syntactic scalar algebras are finitely generated. The concept of\nscalar algebra is introduced in this paper; it is obtained from the concept of\nvector space by disregarding the addition of vectors. Moreover, we prove a\nminimization theorem for bottom-up-deterministic weighted tree automata and we\nconstruct the minimal automaton."}
{"id": "2509.14404", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14404", "abs": "https://arxiv.org/abs/2509.14404", "authors": ["Haoye Tian", "Chong Wang", "BoYang Yang", "Lyuye Zhang", "Yang Liu"], "title": "A Taxonomy of Prompt Defects in LLM Systems", "comment": null, "summary": "Large Language Models (LLMs) have become key components of modern software,\nwith prompts acting as their de-facto programming interface. However, prompt\ndesign remains largely empirical and small mistakes can cascade into\nunreliable, insecure, or inefficient behavior. This paper presents the first\nsystematic survey and taxonomy of prompt defects, recurring ways that prompts\nfail to elicit their intended behavior from LLMs. We organize defects along six\ndimensions: (1) Specification and Intent, (2) Input and Content, (3) Structure\nand Formatting, (4) Context and Memory, (5) Performance and Efficiency, and (6)\nMaintainability and Engineering. Each dimension is refined into fine-grained\nsubtypes, illustrated with concrete examples and root cause analysis. Grounded\nin software engineering principles, we show how these defects surface in real\ndevelopment workflows and examine their downstream effects. For every subtype,\nwe distill mitigation strategies that span emerging prompt engineering\npatterns, automated guardrails, testing harnesses, and evaluation frameworks.\nWe then summarize these strategies in a master taxonomy that links defect,\nimpact, and remedy. We conclude with open research challenges and a call for\nrigorous engineering-oriented methodologies to ensure that LLM-driven systems\nare dependable by design."}
{"id": "2509.14279", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14279", "abs": "https://arxiv.org/abs/2509.14279", "authors": ["Robert Tjarko Lange", "Qi Sun", "Aaditya Prasad", "Maxence Faldor", "Yujin Tang", "David Ha"], "title": "Towards Robust Agentic CUDA Kernel Benchmarking, Verification, and Optimization", "comment": "62 pages, 10 figures", "summary": "Recent advances in large language models (LLMs) demonstrate their\neffectiveness in scaling test-time compute for software engineering tasks.\nHowever, these approaches often focus on high-level solutions, with limited\nattention to optimizing low-level CUDA kernel implementations. Additionally,\nexisting kernel generation benchmarks suffer from exploitable loopholes and\ninsufficient diversity in testing conditions, hindering true generalization\nassessment. To address these limitations, we introduce robust-kbench, a new\nbenchmark for rigorous evaluation of kernel performance and correctness across\nvaried scenarios. Furthermore, we present a comprehensive agentic framework\nthat automates CUDA kernel discovery, verification, and optimization. This\npipeline enables frontier LLMs to translate torch code to CUDA kernels and\niteratively improve their runtime within our robust evaluation setting. Our\nsequential workflow first translates PyTorch code into equivalent CUDA kernels.\nIt then optimizes their runtime using a novel evolutionary meta-generation\nprocedure tailored to the CUDA ecosystem, guided by LLM-based verifiers for\ncorrectness and efficient filtering. Evaluated on robust-kbench, our approach\nproduces CUDA kernels outperforming torch implementations for practical\napplications, including forward and backward passes. It can fuse operations and\ndeploy various runtime optimization strategies. The verifier workflow\naccurately classifies incorrect kernels, enhancing hardware verification\nefficiency."}
{"id": "2509.14250", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14250", "abs": "https://arxiv.org/abs/2509.14250", "authors": ["Martin Thellefsen", "Amalia Nurma Dewi", "Bent Sorensen"], "title": "The meaning of prompts and the prompts of meaning: Semiotic reflections and modelling", "comment": "22 pages, 2 figures", "summary": "This paper explores prompts and prompting in large language models (LLMs) as\ndynamic semiotic phenomena, drawing on Peirce's triadic model of signs, his\nnine sign types, and the Dynacom model of communication. The aim is to\nreconceptualize prompting not as a technical input mechanism but as a\ncommunicative and epistemic act involving an iterative process of sign\nformation, interpretation, and refinement. The theoretical foundation rests on\nPeirce's semiotics, particularly the interplay between representamen, object,\nand interpretant, and the typological richness of signs: qualisign, sinsign,\nlegisign; icon, index, symbol; rheme, dicent, argument - alongside the\ninterpretant triad captured in the Dynacom model. Analytically, the paper\npositions the LLM as a semiotic resource that generates interpretants in\nresponse to user prompts, thereby participating in meaning-making within shared\nuniverses of discourse. The findings suggest that prompting is a semiotic and\ncommunicative process that redefines how knowledge is organized, searched,\ninterpreted, and co-constructed in digital environments. This perspective\ninvites a reimagining of the theoretical and methodological foundations of\nknowledge organization and information seeking in the age of computational\nsemiosis"}
{"id": "2509.15074", "categories": ["cs.FL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.15074", "abs": "https://arxiv.org/abs/2509.15074", "authors": ["Dominik Geißler", "Tobias Winkler"], "title": "Weighted Automata for Exact Inference in Discrete Probabilistic Programs", "comment": null, "summary": "In probabilistic programming, the inference problem asks to determine a\nprogram's posterior distribution conditioned on its \"observe\" instructions.\nInference is challenging, especially when exact rather than approximate results\nare required. Inspired by recent work on probability generating functions\n(PGFs), we propose encoding distributions on $\\mathbb{N}^k$ as weighted\nautomata over a commutative alphabet with $k$ symbols. Based on this, we map\nthe semantics of various imperative programming statements to\nautomata-theoretic constructions. For a rich class of programs, this results in\nan effective translation from prior to posterior distribution, both encoded as\nautomata. We prove that our approach is sound with respect to a standard\noperational program semantics."}
{"id": "2509.14623", "categories": ["cs.SE", "cs.AI", "cs.PL", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.14623", "abs": "https://arxiv.org/abs/2509.14623", "authors": ["Hanlong Wan", "Xing Lu", "Yan Chen", "Karthik Devaprasad", "Laura Hinkle"], "title": "Automating Modelica Module Generation Using Large Language Models: A Case Study on Building Control Description Language", "comment": "This is the pre-peer-review version of a journal paper; the repo is\n  available at: https://github.com/pnnl/prompt2control", "summary": "Dynamic energy systems and controls require advanced modeling frameworks to\ndesign and test supervisory and fault tolerant strategies. Modelica is a widely\nused equation based language, but developing control modules is labor intensive\nand requires specialized expertise. This paper examines the use of large\nlanguage models (LLMs) to automate the generation of Control Description\nLanguage modules in the Building Modelica Library as a case study. We developed\na structured workflow that combines standardized prompt scaffolds, library\naware grounding, automated compilation with OpenModelica, and human in the loop\nevaluation. Experiments were carried out on four basic logic tasks (And, Or,\nNot, and Switch) and five control modules (chiller enable/disable, bypass valve\ncontrol, cooling tower fan speed, plant requests, and relief damper control).\nThe results showed that GPT 4o failed to produce executable Modelica code in\nzero shot mode, while Claude Sonnet 4 achieved up to full success for basic\nlogic blocks with carefully engineered prompts. For control modules, success\nrates reached 83 percent, and failed outputs required medium level human repair\n(estimated one to eight hours). Retrieval augmented generation often produced\nmismatches in module selection (for example, And retrieved as Or), while a\ndeterministic hard rule search strategy avoided these errors. Human evaluation\nalso outperformed AI evaluation, since current LLMs cannot assess simulation\nresults or validate behavioral correctness. Despite these limitations, the LLM\nassisted workflow reduced the average development time from 10 to 20 hours down\nto 4 to 6 hours per module, corresponding to 40 to 60 percent time savings.\nThese results highlight both the potential and current limitations of LLM\nassisted Modelica generation, and point to future research in pre simulation\nvalidation, stronger grounding, and closed loop evaluation."}
{"id": "2509.14281", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14281", "abs": "https://arxiv.org/abs/2509.14281", "authors": ["Xifeng Yao", "Dongyu Lang", "Wu Zhang", "Xintong Guo", "Huarui Xie", "Yinhao Ni", "Ping Liu", "Guang Shen", "Yi Bai", "Dandan Tu", "Changzheng Zhang"], "title": "SCoGen: Scenario-Centric Graph-Based Synthesis of Real-World Code Problems", "comment": null, "summary": "Significant advancements have been made in the capabilities of code large\nlanguage models, leading to their rapid adoption and application across a wide\nrange of domains. However, their further advancements are often constrained by\nthe scarcity of real-world coding problems. To bridge this gap, we propose a\nnovel framework for synthesizing code problems that emulate authentic\nreal-world scenarios. This framework systematically integrates domain\nknowledge, domain skills, and coding skills, all of which are meticulously\nextracted from real-world programming-related datasets, including Stack\nOverflow and Kaggle. The extracted elements serve as the foundational building\nblocks for constructing code problems. To align the generated problems with\npractical applications, application scenarios are also mined from the\naforementioned datasets. These scenarios are then utilized to construct a\nscenario-centric graph that interconnects domain knowledge, domain skills, and\ncoding skills. Based on this structured representation, a sampling strategy on\nthe graph is designed, which effectively controls the generation of a code\nproblem with complexity and diversity, reflects real-world challenges.\nExperimental results demonstrate that the proposed method consistently achieves\nsuperior performance over state-of-the-art open-source large language models of\nvarying sizes and functionalities, including both coders and general-purpose\nmodels, across a diverse set of real-world benchmarks."}
{"id": "2509.14252", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14252", "abs": "https://arxiv.org/abs/2509.14252", "authors": ["Hai Huang", "Yann LeCun", "Randall Balestriero"], "title": "LLM-JEPA: Large Language Models Meet Joint Embedding Predictive Architectures", "comment": null, "summary": "Large Language Model (LLM) pretraining, finetuning, and evaluation rely on\ninput-space reconstruction and generative capabilities. Yet, it has been\nobserved in vision that embedding-space training objectives, e.g., with Joint\nEmbedding Predictive Architectures (JEPAs), are far superior to their\ninput-space counterpart. That mismatch in how training is achieved between\nlanguage and vision opens up a natural question: {\\em can language training\nmethods learn a few tricks from the vision ones?} The lack of JEPA-style LLM is\na testimony of the challenge in designing such objectives for language. In this\nwork, we propose a first step in that direction where we develop LLM-JEPA, a\nJEPA based solution for LLMs applicable both to finetuning and pretraining.\nThus far, LLM-JEPA is able to outperform the standard LLM training objectives\nby a significant margin across models, all while being robust to overfiting.\nThose findings are observed across numerous datasets (NL-RX, GSM8K, Spider,\nRottenTomatoes) and various models from the Llama3, OpenELM, Gemma2 and Olmo\nfamilies. Code: https://github.com/rbalestr-lab/llm-jepa."}
{"id": "2509.14635", "categories": ["cs.CL", "cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14635", "abs": "https://arxiv.org/abs/2509.14635", "authors": ["Weihan Peng", "Yuling Shi", "Yuhang Wang", "Xinyun Zhang", "Beijun Shen", "Xiaodong Gu"], "title": "SWE-QA: Can Language Models Answer Repository-level Code Questions?", "comment": "Code and data available at\n  https://github.com/peng-weihan/SWE-QA-Bench", "summary": "Understanding and reasoning about entire software repositories is an\nessential capability for intelligent software engineering tools. While existing\nbenchmarks such as CoSQA and CodeQA have advanced the field, they predominantly\nfocus on small, self-contained code snippets. These setups fail to capture the\ncomplexity of real-world repositories, where effective understanding and\nreasoning often require navigating multiple files, understanding software\narchitecture, and grounding answers in long-range code dependencies. In this\npaper, we present SWE-QA, a repository-level code question answering (QA)\nbenchmark designed to facilitate research on automated QA systems in realistic\ncode environments. SWE-QA involves 576 high-quality question-answer pairs\nspanning diverse categories, including intention understanding, cross-file\nreasoning, and multi-hop dependency analysis. To construct SWE-QA, we first\ncrawled 77,100 GitHub issues from 11 popular repositories. Based on an analysis\nof naturally occurring developer questions extracted from these issues, we\ndeveloped a two-level taxonomy of repository-level questions and constructed a\nset of seed questions for each category. For each category, we manually curated\nand validated questions and collected their corresponding answers. As a\nprototype application, we further develop SWE-QA-Agent, an agentic framework in\nwhich LLM agents reason and act to find answers automatically. We evaluate six\nadvanced LLMs on SWE-QA under various context augmentation strategies.\nExperimental results highlight the promise of LLMs, particularly our\nSWE-QA-Agent framework, in addressing repository-level QA, while also revealing\nopen challenges and pointing to future research directions."}
{"id": "2509.14294", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14294", "abs": "https://arxiv.org/abs/2509.14294", "authors": ["Hira Naveed", "Scott Barnett", "Chetan Arora", "John Grundy", "Hourieh Khalajzadeh", "Omar Haggag"], "title": "Monitoring Machine Learning Systems: A Multivocal Literature Review", "comment": null, "summary": "Context: Dynamic production environments make it challenging to maintain\nreliable machine learning (ML) systems. Runtime issues, such as changes in data\npatterns or operating contexts, that degrade model performance are a common\noccurrence in production settings. Monitoring enables early detection and\nmitigation of these runtime issues, helping maintain users' trust and prevent\nunwanted consequences for organizations. Aim: This study aims to provide a\ncomprehensive overview of the ML monitoring literature. Method: We conducted a\nmultivocal literature review (MLR) following the well established guidelines by\nGarousi to investigate various aspects of ML monitoring approaches in 136\npapers. Results: We analyzed selected studies based on four key areas: (1) the\nmotivations, goals, and context; (2) the monitored aspects, specific\ntechniques, metrics, and tools; (3) the contributions and benefits; and (4) the\ncurrent limitations. We also discuss several insights found in the studies,\ntheir implications, and recommendations for future research and practice.\nConclusion: Our MLR identifies and summarizes ML monitoring practices and gaps,\nemphasizing similarities and disconnects between formal and gray literature.\nOur study is valuable for both academics and practitioners, as it helps select\nappropriate solutions, highlights limitations in current approaches, and\nprovides future directions for research and tool development."}
{"id": "2509.14253", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14253", "abs": "https://arxiv.org/abs/2509.14253", "authors": ["Ahmad Pouramini", "Hesham Faili"], "title": "CrossPT: Exploring Cross-Task Transferability through Multi-Task Prompt Tuning", "comment": null, "summary": "Prompt tuning offers a parameter-efficient way to adapt large pre-trained\nlanguage models to new tasks, but most existing approaches are designed for\nsingle-task settings, failing to share knowledge across related tasks. We\npropose Cross-task Prompt Tuning (CrossPT), a modular framework for multi-task\nprompt tuning that enables controlled knowledge transfer while maintaining\ntask-specific specialization. CrossPT decomposes each target prompt into\nshared, pre-trained source prompts and task-specific private prompts, combined\nvia a learned attention mechanism. To support robust transfer, we\nsystematically investigate key design factors including prompt initialization,\nbalancing shared and private prompts, number of source prompts, learning rates,\ntask prefixes, and label semantics. Empirical results on GLUE and related\nbenchmarks show that CrossPT achieves higher accuracy and robustness compared\nto traditional prompt tuning and related methods, particularly in low-resource\nscenarios, while maintaining strong parameter efficiency."}
{"id": "2509.14646", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14646", "abs": "https://arxiv.org/abs/2509.14646", "authors": ["Yongpan Wang", "Xin Xu", "Xiaojie Zhu", "Xiaodong Gu", "Beijun Shen"], "title": "SALT4Decompile: Inferring Source-level Abstract Logic Tree for LLM-Based Binary Decompilation", "comment": "13 pages, 7 figures", "summary": "Decompilation is widely used in reverse engineering to recover high-level\nlanguage code from binary executables. While recent approaches leveraging Large\nLanguage Models (LLMs) have shown promising progress, they typically treat\nassembly code as a linear sequence of instructions, overlooking arbitrary jump\npatterns and isolated data segments inherent to binary files. This limitation\nsignificantly hinders their ability to correctly infer source code semantics\nfrom assembly code. To address this limitation, we propose \\saltm, a novel\nbinary decompilation method that abstracts stable logical features shared\nbetween binary and source code. The core idea of \\saltm is to abstract selected\nbinary-level operations, such as specific jumps, into a high-level logic\nframework that better guides LLMs in semantic recovery. Given a binary\nfunction, \\saltm constructs a Source-level Abstract Logic Tree (\\salt) from\nassembly code to approximate the logic structure of high-level language. It\nthen fine-tunes an LLM using the reconstructed \\salt to generate decompiled\ncode. Finally, the output is refined through error correction and symbol\nrecovery to improve readability and correctness. We compare \\saltm to three\ncategories of baselines (general-purpose LLMs, commercial decompilers, and\ndecompilation methods) using three well-known datasets (Decompile-Eval, MBPP,\nExebench). Our experimental results demonstrate that \\saltm is highly effective\nin recovering the logic of the source code, significantly outperforming\nstate-of-the-art methods (e.g., 70.4\\% TCP rate on Decompile-Eval with a 10.6\\%\nimprovement). The results further validate its robustness against four commonly\nused obfuscation techniques. Additionally, analyses of real-world software and\na user study confirm that our decompiled output offers superior assistance to\nhuman analysts in comprehending binary functions."}
{"id": "2509.14347", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14347", "abs": "https://arxiv.org/abs/2509.14347", "authors": ["Henri Aïdasso", "Francis Bordeleau", "Ali Tizghadam"], "title": "On the Illusion of Success: An Empirical Study of Build Reruns and Silent Failures in Industrial CI", "comment": "17 pages, 7 figures", "summary": "Reliability of build outcomes is a cornerstone of effective Continuous\nIntegration (CI). Yet in practice, developers often struggle with\nnon-deterministic issues in the code or CI infrastructure, which undermine\ntrust in build results. When faced with such unexpected outcomes, developers\noften repeatedly rerun jobs hoping for true success, but this practice is known\nto increase CI costs and reduce productivity. While recent studies have focused\non intermittent job failures, no prior work has investigated silent failures,\nwhere build jobs are marked as successful but fail to complete all or part of\ntheir tasks. Such silent failures often go unnoticed, creating an illusion of\nsuccess with detrimental consequences such as bugs escaping into production.\nThis paper presents the first empirical study of silent failures through the\npractice of rerunning successful jobs. An analysis of 142,387 jobs across 81\nindustrial projects shows that 11% of successful jobs are rerun, with 35% of\nthese reruns occurring after more than 24 hours. Using mixed-effects models on\n32 independent variables (AUC of 85%), we identified key factors associated\nwith reruns of successful jobs, notably testing and static analysis tasks,\nscripting languages like Shell, and developers prior rerun tendencies. A\nfurther analysis of 92 public issues revealed 11 categories of silent failures\naligning with these factors, the most frequent being artifact operation errors,\ncaching errors, and ignored exit codes. Overall, our findings provide valuable\ninsights into the circumstances and causes of silent failures to raise\nawareness among teams, and present solutions to improve CI reliability."}
{"id": "2509.14254", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14254", "abs": "https://arxiv.org/abs/2509.14254", "authors": ["Martin Preiß"], "title": "Hallucination Detection with the Internal Layers of LLMs", "comment": "Master's thesis", "summary": "Large Language Models (LLMs) have succeeded in a variety of natural language\nprocessing tasks [Zha+25]. However, they have notable limitations. LLMs tend to\ngenerate hallucinations, a seemingly plausible yet factually unsupported output\n[Hua+24], which have serious real-world consequences [Kay23; Rum+24]. Recent\nwork has shown that probing-based classifiers that utilize LLMs' internal\nrepresentations can detect hallucinations [AM23; Bei+24; Bur+24; DYT24; Ji+24;\nSMZ24; Su+24]. This approach, since it does not involve model training, can\nenhance reliability without significantly increasing computational costs.\n  Building upon this approach, this thesis proposed novel methods for\nhallucination detection using LLM internal representations and evaluated them\nacross three benchmarks: TruthfulQA, HaluEval, and ReFact. Specifically, a new\narchitecture that dynamically weights and combines internal LLM layers was\ndeveloped to improve hallucination detection performance. Throughout extensive\nexperiments, two key findings were obtained: First, the proposed approach was\nshown to achieve superior performance compared to traditional probing methods,\nthough generalization across benchmarks and LLMs remains challenging. Second,\nthese generalization limitations were demonstrated to be mitigated through\ncross-benchmark training and parameter freezing. While not consistently\nimproving, both techniques yielded better performance on individual benchmarks\nand reduced performance degradation when transferred to other benchmarks. These\nfindings open new avenues for improving LLM reliability through internal\nrepresentation analysis."}
{"id": "2509.15015", "categories": ["cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.15015", "abs": "https://arxiv.org/abs/2509.15015", "authors": ["Harrison Oates", "Hyeonggeun Yun", "Nikhila Gurusinghe"], "title": "Theorem Provers: One Size Fits All?", "comment": null, "summary": "Theorem provers are important tools for people working in formal\nverification. There are a myriad of interactive systems available today, with\nvarying features and approaches motivating their development. These design\nchoices impact their usability, alongside the problem domain in which they are\nemployed. We test-drive two such provers, Coq and Idris2, by proving the\ncorrectness of insertion sort, before providing a qualitative evaluation of\ntheir performance. We then compare their community and library support. This\nwork helps users to make an informed choice of system, and highlight approaches\nin other systems that developers might find useful."}
{"id": "2509.14373", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14373", "abs": "https://arxiv.org/abs/2509.14373", "authors": ["Huy Le", "Phong Nguyen", "Hao Do", "Tuan Nguyen", "Thien Pham", "Anh Nguyen-Duc", "Tho Quan"], "title": "CodeLSI: Leveraging Foundation Models for Automated Code Generation with Low-Rank Optimization and Domain-Specific Instruction Tuning", "comment": null, "summary": "Context: Automated code generation using Foundation Models (FMs) offers\npromising solutions for enhancing software development efficiency. However,\nchallenges remain in ensuring domain specificity, cost-effectiveness, and\nsecurity - especially when relying on third-party APIs. This paper introduces\nCodeLSI, a framework that combines low-rank optimization and domain-specific\ninstruction tuning to address these challenges.\n  Objectives: The aim of this study is to develop and evaluate CodeLSI, a novel\napproach for generating high-quality code tailored to specific domains, using\nFMs fine-tuned on company infrastructure without dependence on external APIs.\n  Methods: CodeLSI applies low-rank adaptation techniques to reduce the\ncomputational cost of model pre-training and fine-tuning. Domain-specific\ninstruction tuning is employed to align code generation with organizational\nneeds. We implemented and tested the framework on real-world JavaScript coding\ntasks using datasets drawn from internal software projects.\n  Results: Experimental evaluations show that CodeLSI produces high-quality,\ncontext aware code. It outperforms baseline models in terms of relevance,\naccuracy, and domain fit. The use of low-rank optimization significantly\nreduced resource requirements, enabling scalable training on company-owned\ninfrastructure.\n  Conclusion: CodeLSI demonstrates that combining low-rank optimization with\ndomain specific tuning can enhance the practicality and performance of FMs for\nautomated code generation. This approach provides a secure, cost-efficient\nalternative to commercial API based solutions and supports faster, more\ntargeted innovation in software development."}
{"id": "2509.14255", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14255", "abs": "https://arxiv.org/abs/2509.14255", "authors": ["Ivan Ternovtsii"], "title": "Opening the Black Box: Interpretable LLMs via Semantic Resonance Architecture", "comment": "13 pages, 5 figures. Code available at\n  https://github.com/ITernovtsii/semantic-resonance. Preprint", "summary": "Large language models (LLMs) achieve remarkable performance but remain\ndifficult to interpret. Mixture-of-Experts (MoE) models improve efficiency\nthrough sparse activation, yet typically rely on opaque, learned gating\nfunctions. While similarity-based routing (Cosine Routers) has been explored\nfor training stabilization, its potential for inherent interpretability remains\nlargely untapped. We introduce the Semantic Resonance Architecture (SRA), an\nMoE approach designed to ensure that routing decisions are inherently\ninterpretable. SRA replaces learned gating with a Chamber of Semantic Resonance\n(CSR) module, which routes tokens based on cosine similarity with trainable\nsemantic anchors. We also introduce a novel Dispersion Loss that encourages\northogonality among anchors to enforce diverse specialization. Experiments on\nWikiText-103 demonstrate that SRA achieves a validation perplexity of 13.41,\noutperforming both a dense baseline (14.13) and a Standard MoE baseline (13.53)\nunder matched active parameter constraints (29.0M). Crucially, SRA exhibits\nsuperior expert utilization (1.0% dead experts vs. 14.8% in the Standard MoE)\nand develops distinct, semantically coherent specialization patterns, unlike\nthe noisy specialization observed in standard MoEs. This work establishes\nsemantic routing as a robust methodology for building more transparent and\ncontrollable language models."}
{"id": "2509.15074", "categories": ["cs.FL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.15074", "abs": "https://arxiv.org/abs/2509.15074", "authors": ["Dominik Geißler", "Tobias Winkler"], "title": "Weighted Automata for Exact Inference in Discrete Probabilistic Programs", "comment": null, "summary": "In probabilistic programming, the inference problem asks to determine a\nprogram's posterior distribution conditioned on its \"observe\" instructions.\nInference is challenging, especially when exact rather than approximate results\nare required. Inspired by recent work on probability generating functions\n(PGFs), we propose encoding distributions on $\\mathbb{N}^k$ as weighted\nautomata over a commutative alphabet with $k$ symbols. Based on this, we map\nthe semantics of various imperative programming statements to\nautomata-theoretic constructions. For a rich class of programs, this results in\nan effective translation from prior to posterior distribution, both encoded as\nautomata. We prove that our approach is sound with respect to a standard\noperational program semantics."}
{"id": "2509.14404", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14404", "abs": "https://arxiv.org/abs/2509.14404", "authors": ["Haoye Tian", "Chong Wang", "BoYang Yang", "Lyuye Zhang", "Yang Liu"], "title": "A Taxonomy of Prompt Defects in LLM Systems", "comment": null, "summary": "Large Language Models (LLMs) have become key components of modern software,\nwith prompts acting as their de-facto programming interface. However, prompt\ndesign remains largely empirical and small mistakes can cascade into\nunreliable, insecure, or inefficient behavior. This paper presents the first\nsystematic survey and taxonomy of prompt defects, recurring ways that prompts\nfail to elicit their intended behavior from LLMs. We organize defects along six\ndimensions: (1) Specification and Intent, (2) Input and Content, (3) Structure\nand Formatting, (4) Context and Memory, (5) Performance and Efficiency, and (6)\nMaintainability and Engineering. Each dimension is refined into fine-grained\nsubtypes, illustrated with concrete examples and root cause analysis. Grounded\nin software engineering principles, we show how these defects surface in real\ndevelopment workflows and examine their downstream effects. For every subtype,\nwe distill mitigation strategies that span emerging prompt engineering\npatterns, automated guardrails, testing harnesses, and evaluation frameworks.\nWe then summarize these strategies in a master taxonomy that links defect,\nimpact, and remedy. We conclude with open research challenges and a call for\nrigorous engineering-oriented methodologies to ensure that LLM-driven systems\nare dependable by design."}
{"id": "2509.14256", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14256", "abs": "https://arxiv.org/abs/2509.14256", "authors": ["Arka Dutta", "Agrik Majumdar", "Sombrata Biswas", "Dipankar Das", "Sivaji Bandyopadhyay"], "title": "JU-NLP at Touché: Covert Advertisement in Conversational AI-Generation and Detection Strategies", "comment": null, "summary": "This paper proposes a comprehensive framework for the generation of covert\nadvertisements within Conversational AI systems, along with robust techniques\nfor their detection. It explores how subtle promotional content can be crafted\nwithin AI-generated responses and introduces methods to identify and mitigate\nsuch covert advertising strategies. For generation (Sub-Task~1), we propose a\nnovel framework that leverages user context and query intent to produce\ncontextually relevant advertisements. We employ advanced prompting strategies\nand curate paired training data to fine-tune a large language model (LLM) for\nenhanced stealthiness. For detection (Sub-Task~2), we explore two effective\nstrategies: a fine-tuned CrossEncoder (\\texttt{all-mpnet-base-v2}) for direct\nclassification, and a prompt-based reformulation using a fine-tuned\n\\texttt{DeBERTa-v3-base} model. Both approaches rely solely on the response\ntext, ensuring practicality for real-world deployment. Experimental results\nshow high effectiveness in both tasks, achieving a precision of 1.0 and recall\nof 0.71 for ad generation, and F1-scores ranging from 0.99 to 1.00 for ad\ndetection. These results underscore the potential of our methods to balance\npersuasive communication with transparency in conversational AI."}
{"id": "2509.15150", "categories": ["cs.SE", "cs.PL", "D.2.6; D.3.3; D.2.3; D.2.5; D.2.13"], "pdf": "https://arxiv.org/pdf/2509.15150", "abs": "https://arxiv.org/abs/2509.15150", "authors": ["Federico Bruzzone", "Walter Cazzola", "Luca Favalli"], "title": "Code Less to Code More: Streamlining Language Server Protocol and Type System Development for Language Families", "comment": "34 pages, 10 figures, Journal of Systems and Software, June 2025, for\n  the replication package, see https://doi.org/10.5281/zenodo.15276991", "summary": "Developing editing support for $L$ languages in $E$ editors is complex and\ntime-consuming. Some languages do not provide dedicated editors, while others\noffer a single native editor. The $\\textit{language server protocol}$ (LSP)\nreduces the language-editor combinations $L \\times E$ to $L + E$, where a\nsingle language server communicates with editors via LSP plugins. However,\noverlapping implementations of linguistic components remain an issue. Existing\nlanguage workbenches struggle with modularity, reusability, and leveraging type\nsystems for language server generation. In this work, we propose: (i) Typelang,\na family of domain-specific languages for modular, composable, and reusable\ntype system implementation, (ii) a modular language server generation process,\nproducing servers for languages built in a modular workbench, (iii) the\nvariant-oriented programming paradigm and a cross-artifact coordination layer\nto manage interdependent software variants, and (iv) an LSP plugin generator,\nreducing $E$ to $1$ by automating plugin creation for multiple editors. To\nsimplify editing support for language families, each language artifact\nintegrates its own Typelang variant, used to generate language servers. This\nreduces combinations to $T \\times 1$, where $T = L$ represents the number of\ntype systems. Further reuse of language artifacts across languages lowers this\nto $N \\times 1$, where $N << T$, representing unique type systems. We implement\nTypelang in Neverlang, generating language servers for each artifact and LSP\nplugins for three editors. Empirical evaluation shows a 93.48% reduction in\ncharacters needed for type system implementation and 100% automation of LSP\nplugin generation, significantly lowering effort for editing support in\nlanguage families, especially when artifacts are reused."}
{"id": "2509.14483", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14483", "abs": "https://arxiv.org/abs/2509.14483", "authors": ["Thanh-Long Bui", "Hoa Khanh Dam", "Rashina Hoda"], "title": "An LLM-based multi-agent framework for agile effort estimation", "comment": "Submitted to ASE'25", "summary": "Effort estimation is a crucial activity in agile software development, where\nteams collaboratively review, discuss, and estimate the effort required to\ncomplete user stories in a product backlog. Current practices in agile effort\nestimation heavily rely on subjective assessments, leading to inaccuracies and\ninconsistencies in the estimates. While recent machine learning-based methods\nshow promising accuracy, they cannot explain or justify their estimates and\nlack the capability to interact with human team members. Our paper fills this\nsignificant gap by leveraging the powerful capabilities of Large Language\nModels (LLMs). We propose a novel LLM-based multi-agent framework for agile\nestimation that not only can produce estimates, but also can coordinate,\ncommunicate and discuss with human developers and other agents to reach a\nconsensus. Evaluation results on a real-life dataset show that our approach\noutperforms state-of-the-art techniques across all evaluation metrics in the\nmajority of the cases. Our human study with software development practitioners\nalso demonstrates an overwhelmingly positive experience in collaborating with\nour agents in agile effort estimation."}
{"id": "2509.14257", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14257", "abs": "https://arxiv.org/abs/2509.14257", "authors": ["Yuanjie Lyu", "Chengyu Wang", "Jun Huang", "Tong Xu"], "title": "From Correction to Mastery: Reinforced Distillation of Large Language Model Agents", "comment": null, "summary": "Large Language Model agents excel at solving complex tasks through iterative\nreasoning and tool use, but typically depend on ultra-large, costly backbones.\nExisting distillation approaches train smaller students to imitate full teacher\ntrajectories, yet reasoning and knowledge gaps between the teacher and student\noften lead to compounding errors. We propose SCoRe, a student-centered\nframework in which the student generates trajectories and the teacher\nintervenes only at the first critical error, producing training data matched to\nthe student's ability and exposing specific weaknesses. The student is first\nfine-tuned on corrected trajectories. Subsequently, short-horizon reinforcement\nlearning starts from the verified prefix before the first critical error, with\ntarget rewards assigned at that step. This design encourages autonomous\nproblem-solving beyond imitation and improves training stability. Particularly,\non 12 challenging benchmarks, a 7B-parameter student distilled with SCoRe\nmatches the agentic performance of a 72B-parameter teacher."}
{"id": "2509.14623", "categories": ["cs.SE", "cs.AI", "cs.PL", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.14623", "abs": "https://arxiv.org/abs/2509.14623", "authors": ["Hanlong Wan", "Xing Lu", "Yan Chen", "Karthik Devaprasad", "Laura Hinkle"], "title": "Automating Modelica Module Generation Using Large Language Models: A Case Study on Building Control Description Language", "comment": "This is the pre-peer-review version of a journal paper; the repo is\n  available at: https://github.com/pnnl/prompt2control", "summary": "Dynamic energy systems and controls require advanced modeling frameworks to\ndesign and test supervisory and fault tolerant strategies. Modelica is a widely\nused equation based language, but developing control modules is labor intensive\nand requires specialized expertise. This paper examines the use of large\nlanguage models (LLMs) to automate the generation of Control Description\nLanguage modules in the Building Modelica Library as a case study. We developed\na structured workflow that combines standardized prompt scaffolds, library\naware grounding, automated compilation with OpenModelica, and human in the loop\nevaluation. Experiments were carried out on four basic logic tasks (And, Or,\nNot, and Switch) and five control modules (chiller enable/disable, bypass valve\ncontrol, cooling tower fan speed, plant requests, and relief damper control).\nThe results showed that GPT 4o failed to produce executable Modelica code in\nzero shot mode, while Claude Sonnet 4 achieved up to full success for basic\nlogic blocks with carefully engineered prompts. For control modules, success\nrates reached 83 percent, and failed outputs required medium level human repair\n(estimated one to eight hours). Retrieval augmented generation often produced\nmismatches in module selection (for example, And retrieved as Or), while a\ndeterministic hard rule search strategy avoided these errors. Human evaluation\nalso outperformed AI evaluation, since current LLMs cannot assess simulation\nresults or validate behavioral correctness. Despite these limitations, the LLM\nassisted workflow reduced the average development time from 10 to 20 hours down\nto 4 to 6 hours per module, corresponding to 40 to 60 percent time savings.\nThese results highlight both the potential and current limitations of LLM\nassisted Modelica generation, and point to future research in pre simulation\nvalidation, stronger grounding, and closed loop evaluation."}
{"id": "2509.14259", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14259", "abs": "https://arxiv.org/abs/2509.14259", "authors": ["Lynna Jirpongopas", "Bernhard Lutz", "Jörg Ebner", "Rustam Vahidov", "Dirk Neumann"], "title": "Persuasive or Neutral? A Field Experiment on Generative AI in Online Travel Planning", "comment": null, "summary": "Generative AI (GenAI) offers new opportunities for customer support in online\ntravel agencies, yet little is known about how its design influences user\nengagement, purchase behavior, and user experience. We report results from a\nrandomized field experiment in online travel itinerary planning, comparing\nGenAI that expressed (A) positive enthusiasm, (B) neutral expression, and (C)\nno tone instructions (control). Users in group A wrote significantly longer\nprompts than those in groups B and C. At the same time, users in groups A and B\nwere more likely to purchase subscriptions of the webservice. We further\nanalyze linguistic cues across experimental groups to explore differences in\nuser experience and explain subscription purchases and affiliate link clicks\nbased on these cues. Our findings provide implications for the design of\npersuasive and engaging GenAI interfaces in consumer-facing contexts and\ncontribute to understanding how linguistic framing shapes user behavior in\nAI-mediated decision support."}
{"id": "2509.14626", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14626", "abs": "https://arxiv.org/abs/2509.14626", "authors": ["Feiran Qin", "M. M. Abid Naziri", "Hengyu Ai", "Saikat Dutta", "Marcelo d'Amorim"], "title": "Evaluating the Effectiveness of Coverage-Guided Fuzzing for Testing Deep Learning Library APIs", "comment": null, "summary": "Deep Learning (DL) libraries such as PyTorch provide the core components to\nbuild major AI-enabled applications. Finding bugs in these libraries is\nimportant and challenging. Prior approaches have tackled this by performing\neither API-level fuzzing or model-level fuzzing, but they do not use coverage\nguidance, which limits their effectiveness and efficiency. This raises an\nintriguing question: can coverage guided fuzzing (CGF), in particular\nframeworks like LibFuzzer, be effectively applied to DL libraries, and does it\noffer meaningful improvements in code coverage, bug detection, and scalability\ncompared to prior methods?\n  We present the first in-depth study to answer this question. A key challenge\nin applying CGF to DL libraries is the need to create a test harness for each\nAPI that can transform byte-level fuzzer inputs into valid API inputs. To\naddress this, we propose FlashFuzz, a technique that leverages Large Language\nModels (LLMs) to automatically synthesize API-level harnesses by combining\ntemplates, helper functions, and API documentation. FlashFuzz uses a feedback\ndriven strategy to iteratively synthesize and repair harnesses. With this\napproach, FlashFuzz synthesizes harnesses for 1,151 PyTorch and 662 TensorFlow\nAPIs. Compared to state-of-the-art fuzzing methods (ACETest, PathFinder, and\nTitanFuzz), FlashFuzz achieves up to 101.13 to 212.88 percent higher coverage\nand 1.0x to 5.4x higher validity rate, while also delivering 1x to 1182x\nspeedups in input generation. FlashFuzz has discovered 42 previously unknown\nbugs in PyTorch and TensorFlow, 8 of which are already fixed. Our study\nconfirms that CGF can be effectively applied to DL libraries and provides a\nstrong baseline for future testing approaches."}
{"id": "2509.14260", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14260", "abs": "https://arxiv.org/abs/2509.14260", "authors": ["Jeremy Schlatter", "Benjamin Weinstein-Raun", "Jeffrey Ladish"], "title": "Shutdown Resistance in Large Language Models", "comment": null, "summary": "We show that several state-of-the-art large language models (including Grok\n4, GPT-5, and Gemini 2.5 Pro) sometimes actively subvert a shutdown mechanism\nin their environment in order to complete a simple task, even when the\ninstructions explicitly indicate not to interfere with this mechanism. In some\ncases, models sabotage the shutdown mechanism up to 97% of the time. In our\nexperiments, models' inclination to resist shutdown was sensitive to variations\nin the prompt including how strongly and clearly the allow-shutdown instruction\nwas emphasized, the extent to which the prompts evoke a self-preservation\nframing, and whether the instruction was in the system prompt or the user\nprompt (though surprisingly, models were consistently *less* likely to obey\ninstructions to allow shutdown when they were placed in the system prompt)."}
{"id": "2509.14646", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14646", "abs": "https://arxiv.org/abs/2509.14646", "authors": ["Yongpan Wang", "Xin Xu", "Xiaojie Zhu", "Xiaodong Gu", "Beijun Shen"], "title": "SALT4Decompile: Inferring Source-level Abstract Logic Tree for LLM-Based Binary Decompilation", "comment": "13 pages, 7 figures", "summary": "Decompilation is widely used in reverse engineering to recover high-level\nlanguage code from binary executables. While recent approaches leveraging Large\nLanguage Models (LLMs) have shown promising progress, they typically treat\nassembly code as a linear sequence of instructions, overlooking arbitrary jump\npatterns and isolated data segments inherent to binary files. This limitation\nsignificantly hinders their ability to correctly infer source code semantics\nfrom assembly code. To address this limitation, we propose \\saltm, a novel\nbinary decompilation method that abstracts stable logical features shared\nbetween binary and source code. The core idea of \\saltm is to abstract selected\nbinary-level operations, such as specific jumps, into a high-level logic\nframework that better guides LLMs in semantic recovery. Given a binary\nfunction, \\saltm constructs a Source-level Abstract Logic Tree (\\salt) from\nassembly code to approximate the logic structure of high-level language. It\nthen fine-tunes an LLM using the reconstructed \\salt to generate decompiled\ncode. Finally, the output is refined through error correction and symbol\nrecovery to improve readability and correctness. We compare \\saltm to three\ncategories of baselines (general-purpose LLMs, commercial decompilers, and\ndecompilation methods) using three well-known datasets (Decompile-Eval, MBPP,\nExebench). Our experimental results demonstrate that \\saltm is highly effective\nin recovering the logic of the source code, significantly outperforming\nstate-of-the-art methods (e.g., 70.4\\% TCP rate on Decompile-Eval with a 10.6\\%\nimprovement). The results further validate its robustness against four commonly\nused obfuscation techniques. Additionally, analyses of real-world software and\na user study confirm that our decompiled output offers superior assistance to\nhuman analysts in comprehending binary functions."}
{"id": "2509.14261", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14261", "abs": "https://arxiv.org/abs/2509.14261", "authors": ["Hamady Gackou"], "title": "Refining Syntactic Distinctions Using Decision Trees: A Paper on Postnominal 'That' in Complement vs. Relative Clauses", "comment": "12 pages, student research project at Paris Cit\\'e University", "summary": "In this study, we first tested the performance of the TreeTagger English\nmodel developed by Helmut Schmid with test files at our disposal, using this\nmodel to analyze relative clauses and noun complement clauses in English. We\ndistinguished between the two uses of \"that,\" both as a relative pronoun and as\na complementizer. To achieve this, we employed an algorithm to reannotate a\ncorpus that had originally been parsed using the Universal Dependency framework\nwith the EWT Treebank. In the next phase, we proposed an improved model by\nretraining TreeTagger and compared the newly trained model with Schmid's\nbaseline model. This process allowed us to fine-tune the model's performance to\nmore accurately capture the subtle distinctions in the use of \"that\" as a\ncomplementizer and as a nominal. We also examined the impact of varying the\ntraining dataset size on TreeTagger's accuracy and assessed the\nrepresentativeness of the EWT Treebank files for the structures under\ninvestigation. Additionally, we analyzed some of the linguistic and structural\nfactors influencing the ability to effectively learn this distinction."}
{"id": "2509.14740", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14740", "abs": "https://arxiv.org/abs/2509.14740", "authors": ["Andrei-Raoul Morariu", "Andreas Strandberg", "Bogdan Iancu", "Jerker Bjorkqvist"], "title": "Wireless Communication Performance Testing: From Laboratory Environment to Research Vessel", "comment": "5 pages, 4 figures, 2 tables", "summary": "This study investigates signal transmission within a shared spectrum,\nfocusing on measurements conducted both in laboratory and outdoor environments.\nThe objective was to demonstrate how laboratory objects obstructing the line of\nsight can attenuate the signal between a transmitter (Tx) and a receiver (Rx).\nAdditionally, we examined the impact of distance and placement in various\nlocations aboard an electric research boat on signal transmission efficiency.\nThese findings contribute to understanding whether the environmental factors\ninfluence wireless communication in dynamic and obstructed environments."}
{"id": "2509.14263", "categories": ["cs.CL", "cs.SD", "eess.AS"], "pdf": "https://arxiv.org/pdf/2509.14263", "abs": "https://arxiv.org/abs/2509.14263", "authors": ["Luan Vejsiu", "Qianyu Zheng", "Haoxuan Chen", "Yizhou Han"], "title": "Context-Enhanced Granular Edit Representation for Efficient and Accurate ASR Post-editing", "comment": null, "summary": "Despite ASR technology being full-scale adopted by industry and for large\nportions of the population, ASR systems often have errors that require editors\nto post-edit text quality. While LLMs are powerful post-editing tools, baseline\nfull rewrite models have inference inefficiencies because they often generate\nthe same redundant text over and over again. Compact edit representations have\nexisted but often lack the efficacy and context required for optimal accuracy.\nThis paper introduces CEGER (Context-Enhanced Granular Edit Representation), a\ncompact edit representation that was generated for highly accurate, efficient\nASR post-editing. CEGER allows LLMs to generate a sequence of structured,\nfine-grained, contextually rich commands to modify the original ASR output. A\nseparate expansion module deterministically reconstructs the corrected text\nbased on the commands. Extensive experiments on the LibriSpeech dataset that\nwere conducted, CEGER achieves state-of-the-art accuracy, achieving the lowest\nword error rate (WER) versus full rewrite and prior compact representations."}
{"id": "2509.14744", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14744", "abs": "https://arxiv.org/abs/2509.14744", "authors": ["Worawalan Chatlatanagulchai", "Kundjanasith Thonglek", "Brittany Reid", "Yutaro Kashiwa", "Pattara Leelaprute", "Arnon Rungsawang", "Bundit Manaskasemsak", "Hajimu Iida"], "title": "On the Use of Agentic Coding Manifests: An Empirical Study of Claude Code", "comment": null, "summary": "Agentic coding tools receive goals written in natural language as input,\nbreak them down into specific tasks, and write/execute the actual code with\nminimal human intervention. Key to this process are agent manifests,\nconfiguration files (such as Claude.md) that provide agents with essential\nproject context, identity, and operational rules. However, the lack of\ncomprehensive and accessible documentation for creating these manifests\npresents a significant challenge for developers. We analyzed 253 Claude.md\nfiles from 242 repositories to identify structural patterns and common content.\nOur findings show that manifests typically have shallow hierarchies with one\nmain heading and several subsections, with content dominated by operational\ncommands, technical implementation notes, and high-level architecture."}
{"id": "2509.14264", "categories": ["cs.CL", "cs.LG", "cs.SI"], "pdf": "https://arxiv.org/pdf/2509.14264", "abs": "https://arxiv.org/abs/2509.14264", "authors": ["Gautam Kishore Shahi", "Tim A. Majchrzak"], "title": "Defining, Understanding, and Detecting Online Toxicity: Challenges and Machine Learning Approaches", "comment": "Paper is accepted at LNCS Porceedings", "summary": "Online toxic content has grown into a pervasive phenomenon, intensifying\nduring times of crisis, elections, and social unrest. A significant amount of\nresearch has been focused on detecting or analyzing toxic content using\nmachine-learning approaches. The proliferation of toxic content across digital\nplatforms has spurred extensive research into automated detection mechanisms,\nprimarily driven by advances in machine learning and natural language\nprocessing. Overall, the present study represents the synthesis of 140\npublications on different types of toxic content on digital platforms. We\npresent a comprehensive overview of the datasets used in previous studies\nfocusing on definitions, data sources, challenges, and machine learning\napproaches employed in detecting online toxicity, such as hate speech,\noffensive language, and harmful discourse. The dataset encompasses content in\n32 languages, covering topics such as elections, spontaneous events, and\ncrises. We examine the possibility of using existing cross-platform data to\nimprove the performance of classification models. We present the\nrecommendations and guidelines for new research on online toxic consent and the\nuse of content moderation for mitigation. Finally, we present some practical\nguidelines to mitigate toxic content from online platforms."}
{"id": "2509.14745", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14745", "abs": "https://arxiv.org/abs/2509.14745", "authors": ["Miku Watanabe", "Hao Li", "Yutaro Kashiwa", "Brittany Reid", "Hajimu Iida", "Ahmed E. Hassan"], "title": "On the Use of Agentic Coding: An Empirical Study of Pull Requests on GitHub", "comment": null, "summary": "Large language models (LLMs) are increasingly being integrated into software\ndevelopment processes. The ability to generate code and submit pull requests\nwith minimal human intervention, through the use of autonomous AI agents, is\npoised to become a standard practice. However, little is known about the\npractical usefulness of these pull requests and the extent to which their\ncontributions are accepted in real-world projects. In this paper, we\nempirically study 567 GitHub pull requests (PRs) generated using Claude Code,\nan agentic coding tool, across 157 diverse open-source projects. Our analysis\nreveals that developers tend to rely on agents for tasks such as refactoring,\ndocumentation, and testing. The results indicate that 83.8% of these\nagent-assisted PRs are eventually accepted and merged by project maintainers,\nwith 54.9% of the merged PRs are integrated without further modification. The\nremaining 45.1% require additional changes benefit from human revisions,\nespecially for bug fixes, documentation, and adherence to project-specific\nstandards. These findings suggest that while agent-assisted PRs are largely\nacceptable, they still benefit from human oversight and refinement."}
{"id": "2509.14266", "categories": ["cs.CL", "cs.AI", "cs.SI", "I.2.7; I.5.1"], "pdf": "https://arxiv.org/pdf/2509.14266", "abs": "https://arxiv.org/abs/2509.14266", "authors": ["Mahmoud Abusaqer", "Jamil Saquer", "Hazim Shatnawi"], "title": "Efficient Hate Speech Detection: Evaluating 38 Models from Traditional Methods to Transformers", "comment": "11 pages, 10 tables, conference paper", "summary": "The proliferation of hate speech on social media necessitates automated\ndetection systems that balance accuracy with computational efficiency. This\nstudy evaluates 38 model configurations in detecting hate speech across\ndatasets ranging from 6.5K to 451K samples. We analyze transformer\narchitectures (e.g., BERT, RoBERTa, Distil-BERT), deep neural networks (e.g.,\nCNN, LSTM, GRU, Hierarchical Attention Networks), and traditional machine\nlearning methods (e.g., SVM, CatBoost, Random Forest). Our results show that\ntransformers, particularly RoBERTa, consistently achieve superior performance\nwith accuracy and F1-scores exceeding 90%. Among deep learning approaches,\nHierarchical Attention Networks yield the best results, while traditional\nmethods like CatBoost and SVM remain competitive, achieving F1-scores above 88%\nwith significantly lower computational costs. Additionally, our analysis\nhighlights the importance of dataset characteristics, with balanced, moderately\nsized unprocessed datasets outperforming larger, preprocessed datasets. These\nfindings offer valuable insights for developing efficient and effective hate\nspeech detection systems."}
{"id": "2509.14829", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14829", "abs": "https://arxiv.org/abs/2509.14829", "authors": ["Shuo Jin", "Songqiang Chen", "Xiaoyuan Xie", "Shing-Chi Cheung"], "title": "RulER: Automated Rule-Based Semantic Error Localization and Repair for Code Translation", "comment": "Due to the limitation \"The abstract field cannot be longer than 1,920\n  characters\", the abstract here is shorter than that in the PDF file", "summary": "Automated code translation aims to convert programs between different\nprogramming languages while maintaining their functionality. Due to the\nimperfections of code translation models, the generated translations may\ncontain errors that compromise their reliability. Existing automated debugging\nmethods for code translation rely on code alignments and repair patch templates\nto locate and fix erroneous translations. However, existing methods lack\nreliable references to construct code alignments and design repair patch\ntemplates, which significantly impacts their localization accuracy and repair\neffectiveness. To address these limitations, we reintroduce code translation\nrules and propose a rule-based debugging method for code translation, called\nRulER. RulER automatically derives code translation rules from correct\ntranslations generated by LLMs, enabling the efficient collection of diverse\ntranslation rules. In addition, RulER dynamically combines the existing rules\non expandable nodes like expressions and tokens to further adaptively align\nmore statements. These rules capture clear and detailed structural\ncorrespondences between source and target programming languages. Therefore,\nthey can serve as reliable and reusable references for code alignment and\nrepair template design, enabling RulER to locate and fix translation errors\neffectively. Our evaluation of RulER on Java-to-C++ and Python-to-C++\ntranslations produced by four code translation models demonstrates that RulER\noutperforms state-of-the-art methods, BatFix and TransMap. Our experimental\nresults show that RulER outperformed the best baseline by 20% and 272% in terms\nof error localization rates and repair success rates, respectively. RulER\nexhibits superior repair performance compared to directly prompting LLMs for\npatch generation, demonstrating a promising methodology for extracting and\nleveraging coding knowledge from LLMs."}
{"id": "2509.14267", "categories": ["cs.CL", "cs.AI", "cs.IT", "math.IT"], "pdf": "https://arxiv.org/pdf/2509.14267", "abs": "https://arxiv.org/abs/2509.14267", "authors": ["Piyushkumar Patel"], "title": "Graph-Enhanced Retrieval-Augmented Question Answering for E-Commerce Customer Support", "comment": null, "summary": "E-Commerce customer support requires quick and accurate answers grounded in\nproduct data and past support cases. This paper develops a novel\nretrieval-augmented generation (RAG) framework that uses knowledge graphs (KGs)\nto improve the relevance of the answer and the factual grounding. We examine\nrecent advances in knowledge-augmented RAG and chatbots based on large language\nmodels (LLM) in customer support, including Microsoft's GraphRAG and hybrid\nretrieval architectures. We then propose a new answer synthesis algorithm that\ncombines structured subgraphs from a domain-specific KG with text documents\nretrieved from support archives, producing more coherent and grounded\nresponses. We detail the architecture and knowledge flow of our system, provide\ncomprehensive experimental evaluation, and justify its design in real-time\nsupport settings. Our implementation demonstrates 23\\% improvement in factual\naccuracy and 89\\% user satisfaction in e-Commerce QA scenarios."}
{"id": "2509.14856", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14856", "abs": "https://arxiv.org/abs/2509.14856", "authors": ["Hanyang Guo", "Xunjin Zheng", "Zihan Liao", "Hang Yu", "Peng DI", "Ziyin Zhang", "Hong-Ning Dai"], "title": "CodeFuse-CR-Bench: A Comprehensiveness-aware Benchmark for End-to-End Code Review Evaluation in Python Projects", "comment": null, "summary": "Automated code review (CR) is a key application for Large Language Models\n(LLMs), but progress is hampered by a \"reality gap\": existing benchmarks\nevaluate models on isolated sub-tasks using simplified, context-poor data. This\nfails to reflect the holistic context-rich nature of real-world CR. To bridge\nthis gap, we introduce CodeFuse-CR-Bench, the first comprehensiveness-aware\nbenchmark for repository-level CR evaluation. CodeFuse-CR-Bench comprises 601\nhigh-quality instances from 70 Python projects covering nine Pull-Request (PR)\nproblem domains, where each instance provides rich, multi-faceted context\nincluding the associated issue, PR details, and repository state, enabling\nend-to-end evaluation. Beyond superficial metrics, we also propose a novel\nevaluation framework that combines rule-based checks for location and syntax\nwith model-based judgments of review quality. We present the first large-scale\nassessment of state-of-the-art LLMs on this comprehensive CR task. Our results\nestablish crucial baselines and reveal that (1) no single LLM dominates all\naspects of CR; (2) Gemini 2.5 Pro achieves the highest comprehensive\nperformance; and (3) different LLMs exhibit varying robustness to redundant\ncontext. These findings highlight the necessity of holistic, multi-dimensional\nevaluation and provide actionable insights for advancing truly intelligent yet\npractical CR assistants."}
{"id": "2509.14268", "categories": ["cs.CL", "cs.AI", "cs.CY"], "pdf": "https://arxiv.org/pdf/2509.14268", "abs": "https://arxiv.org/abs/2509.14268", "authors": ["Jiachen Fu", "Chun-Le Guo", "Chongyi Li"], "title": "DetectAnyLLM: Towards Generalizable and Robust Detection of Machine-Generated Text Across Domains and Models", "comment": null, "summary": "The rapid advancement of large language models (LLMs) has drawn urgent\nattention to the task of machine-generated text detection (MGTD). However,\nexisting approaches struggle in complex real-world scenarios: zero-shot\ndetectors rely heavily on scoring model's output distribution while\ntraining-based detectors are often constrained by overfitting to the training\ndata, limiting generalization. We found that the performance bottleneck of\ntraining-based detectors stems from the misalignment between training objective\nand task needs. To address this, we propose Direct Discrepancy Learning (DDL),\na novel optimization strategy that directly optimizes the detector with\ntask-oriented knowledge. DDL enables the detector to better capture the core\nsemantics of the detection task, thereby enhancing both robustness and\ngeneralization. Built upon this, we introduce DetectAnyLLM, a unified detection\nframework that achieves state-of-the-art MGTD performance across diverse LLMs.\nTo ensure a reliable evaluation, we construct MIRAGE, the most diverse\nmulti-task MGTD benchmark. MIRAGE samples human-written texts from 10 corpora\nacross 5 text-domains, which are then re-generated or revised using 17\ncutting-edge LLMs, covering a wide spectrum of proprietary models and textual\nstyles. Extensive experiments on MIRAGE reveal the limitations of existing\nmethods in complex environment. In contrast, DetectAnyLLM consistently\noutperforms them, achieving over a 70% performance improvement under the same\ntraining data and base scoring model, underscoring the effectiveness of our\nDDL. Project page: {https://fjc2005.github.io/detectanyllm}."}
{"id": "2509.14899", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14899", "abs": "https://arxiv.org/abs/2509.14899", "authors": ["Amine Barrak", "Yosr Fourati", "Michael Olchawa", "Emna Ksontini", "Khalil Zoghlami"], "title": "CARGO: A Framework for Confidence-Aware Routing of Large Language Models", "comment": null, "summary": "As large language models (LLMs) proliferate in scale, specialization, and\nlatency profiles, the challenge of routing user prompts to the most appropriate\nmodel has become increasingly critical for balancing performance and cost. We\nintroduce CARGO (Category-Aware Routing with Gap-based Optimization), a\nlightweight, confidence-aware framework for dynamic LLM selection. CARGO\nemploys a single embedding-based regressor trained on LLM-judged pairwise\ncomparisons to predict model performance, with an optional binary classifier\ninvoked when predictions are uncertain. This two-stage design enables precise,\ncost-aware routing without the need for human-annotated supervision. To capture\ndomain-specific behavior, CARGO also supports category-specific regressors\ntrained across five task groups: mathematics, coding, reasoning, summarization,\nand creative writing. Evaluated on four competitive LLMs (GPT-4o, Claude 3.5\nSonnet, DeepSeek V3, and Perplexity Sonar), CARGO achieves a top-1 routing\naccuracy of 76.4% and win rates ranging from 72% to 89% against individual\nexperts. These results demonstrate that confidence-guided, lightweight routing\ncan achieve expert-level performance with minimal overhead, offering a\npractical solution for real-world, multi-model LLM deployments."}
{"id": "2509.14269", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14269", "abs": "https://arxiv.org/abs/2509.14269", "authors": ["Zhang Jianbin", "Yulin Zhu", "Wai Lun Lo", "Richard Tai-Chiu Hsung", "Harris Sik-Ho Tsang", "Kai Zhou"], "title": "SparseDoctor: Towards Efficient Chat Doctor with Mixture of Experts Enhanced Large Language Models", "comment": null, "summary": "Large language models (LLMs) have achieved great success in medical question\nanswering and clinical decision-making, promoting the efficiency and\npopularization of the personalized virtual doctor in society. However, the\ntraditional fine-tuning strategies on LLM require the updates of billions of\nparameters, substantially increasing the training cost, including the training\ntime and utility cost. To enhance the efficiency and effectiveness of the\ncurrent medical LLMs and explore the boundary of the representation capability\nof the LLMs on the medical domain, apart from the traditional fine-tuning\nstrategies from the data perspective (i.e., supervised fine-tuning or\nreinforcement learning from human feedback), we instead craft a novel sparse\nmedical LLM named SparseDoctor armed with contrastive learning enhanced\nLoRA-MoE (low rank adaptation-mixture of experts) architecture. To this end,\nthe crafted automatic routing mechanism can scientifically allocate the\ncomputational resources among different LoRA experts supervised by the\ncontrastive learning. Additionally, we also introduce a novel expert memory\nqueue mechanism to further boost the efficiency of the overall framework and\nprevent the memory overflow during training. We conduct comprehensive\nevaluations on three typical medical benchmarks: CMB, CMExam, and CMMLU-Med.\nExperimental results demonstrate that the proposed LLM can consistently\noutperform the strong baselines such as the HuatuoGPT series."}
{"id": "2509.14931", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14931", "abs": "https://arxiv.org/abs/2509.14931", "authors": ["Stefano Fossati", "Damian Andrew Tamburri", "Massimiliano Di Penta", "Marco Tonnarelli"], "title": "\"Let it be Chaos in the Plumbing!\" Usage and Efficacy of Chaos Engineering in DevOps Pipelines", "comment": "To be published in the Proceedings of International Conference on\n  Software Maintenance and Evolution 2025", "summary": "Chaos Engineering (CE) has emerged as a proactive method to improve the\nresilience of modern distributed systems, particularly within DevOps\nenvironments. Originally pioneered by Netflix, CE simulates real-world failures\nto expose weaknesses before they impact production. In this paper, we present a\nsystematic gray literature review that investigates how industry practitioners\nhave adopted and adapted CE principles over recent years. Analyzing 50 sources\npublished between 2019 and early 2024, we developed a comprehensive\nclassification framework that extends the foundational CE principles into ten\ndistinct concepts. Our study reveals that while the core tenets of CE remain\ninfluential, practitioners increasingly emphasize controlled experimentation,\nautomation, and risk mitigation strategies to align with the demands of agile\nand continuously evolving DevOps pipelines. Our results enhance the\nunderstanding of how CE is intended and implemented in practice, and offer\nguidance for future research and industrial applications aimed at improving\nsystem robustness in dynamic production environments."}
{"id": "2509.14270", "categories": ["cs.CL", "cs.AI", "cs.LG", "cs.MM", "cs.SD", "eess.AS", "I.2.7"], "pdf": "https://arxiv.org/pdf/2509.14270", "abs": "https://arxiv.org/abs/2509.14270", "authors": ["Karan Dua", "Puneet Mittal", "Ranjeet Gupta", "Hitesh Laxmichand Patel"], "title": "SpeechWeave: Diverse Multilingual Synthetic Text & Audio Data Generation Pipeline for Training Text to Speech Models", "comment": "Accepted to ACL 2025", "summary": "High-quality Text-to-Speech (TTS) model training requires extensive and\ndiverse text and speech data. It is challenging to procure such data from real\nsources due to issues of domain specificity, licensing, and scalability. Large\nlanguage models (LLMs) can certainly generate textual data, but they create\nrepetitive text with insufficient variation in the prompt during the generation\nprocess. Another important aspect in TTS training data is text normalization.\nTools for normalization might occasionally introduce anomalies or overlook\nvaluable patterns, and thus impact data quality. Furthermore, it is also\nimpractical to rely on voice artists for large scale speech recording in\ncommercial TTS systems with standardized voices. To address these challenges,\nwe propose SpeechWeave, a synthetic speech data generation pipeline that is\ncapable of automating the generation of multilingual, domain-specific datasets\nfor training TTS models. Our experiments reveal that our pipeline generates\ndata that is 10-48% more diverse than the baseline across various linguistic\nand phonetic metrics, along with speaker-standardized speech audio while\ngenerating approximately 97% correctly normalized text. Our approach enables\nscalable, high-quality data generation for TTS training, improving diversity,\nnormalization, and voice consistency in the generated datasets."}
{"id": "2509.15150", "categories": ["cs.SE", "cs.PL", "D.2.6; D.3.3; D.2.3; D.2.5; D.2.13"], "pdf": "https://arxiv.org/pdf/2509.15150", "abs": "https://arxiv.org/abs/2509.15150", "authors": ["Federico Bruzzone", "Walter Cazzola", "Luca Favalli"], "title": "Code Less to Code More: Streamlining Language Server Protocol and Type System Development for Language Families", "comment": "34 pages, 10 figures, Journal of Systems and Software, June 2025, for\n  the replication package, see https://doi.org/10.5281/zenodo.15276991", "summary": "Developing editing support for $L$ languages in $E$ editors is complex and\ntime-consuming. Some languages do not provide dedicated editors, while others\noffer a single native editor. The $\\textit{language server protocol}$ (LSP)\nreduces the language-editor combinations $L \\times E$ to $L + E$, where a\nsingle language server communicates with editors via LSP plugins. However,\noverlapping implementations of linguistic components remain an issue. Existing\nlanguage workbenches struggle with modularity, reusability, and leveraging type\nsystems for language server generation. In this work, we propose: (i) Typelang,\na family of domain-specific languages for modular, composable, and reusable\ntype system implementation, (ii) a modular language server generation process,\nproducing servers for languages built in a modular workbench, (iii) the\nvariant-oriented programming paradigm and a cross-artifact coordination layer\nto manage interdependent software variants, and (iv) an LSP plugin generator,\nreducing $E$ to $1$ by automating plugin creation for multiple editors. To\nsimplify editing support for language families, each language artifact\nintegrates its own Typelang variant, used to generate language servers. This\nreduces combinations to $T \\times 1$, where $T = L$ represents the number of\ntype systems. Further reuse of language artifacts across languages lowers this\nto $N \\times 1$, where $N << T$, representing unique type systems. We implement\nTypelang in Neverlang, generating language servers for each artifact and LSP\nplugins for three editors. Empirical evaluation shows a 93.48% reduction in\ncharacters needed for type system implementation and 100% automation of LSP\nplugin generation, significantly lowering effort for editing support in\nlanguage families, especially when artifacts are reused."}
{"id": "2509.14283", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14283", "abs": "https://arxiv.org/abs/2509.14283", "authors": ["Mahmoud Alwakeel", "Michael E. Yarrington", "Rebekah H. Wrenn", "Ethan Fang", "Jian Pei", "Anand Chowdhury", "An-Kwok Ian Wong"], "title": "Predicting Antibiotic Resistance Patterns Using Sentence-BERT: A Machine Learning Approach", "comment": null, "summary": "Antibiotic resistance poses a significant threat in in-patient settings with\nhigh mortality. Using MIMIC-III data, we generated Sentence-BERT embeddings\nfrom clinical notes and applied Neural Networks and XGBoost to predict\nantibiotic susceptibility. XGBoost achieved an average F1 score of 0.86, while\nNeural Networks scored 0.84. This study is among the first to use document\nembeddings for predicting antibiotic resistance, offering a novel pathway for\nimproving antimicrobial stewardship."}
{"id": "2509.15195", "categories": ["cs.SE", "cs.AI", "cs.CR", "D.4.6; I.2.2; D.2.5"], "pdf": "https://arxiv.org/pdf/2509.15195", "abs": "https://arxiv.org/abs/2509.15195", "authors": ["Max Bazalii", "Marius Fleischer"], "title": "Orion: Fuzzing Workflow Automation", "comment": "11 pages, 3 figures, 3 tables", "summary": "Fuzz testing is one of the most effective techniques for finding software\nvulnerabilities. While modern fuzzers can generate inputs and monitor\nexecutions automatically, the overall workflow, from analyzing a codebase, to\nconfiguring harnesses, to triaging results, still requires substantial manual\neffort. Prior attempts focused on single stages such as harness synthesis or\ninput minimization, leaving researchers to manually connect the pieces into a\ncomplete fuzzing campaign.\n  We introduce Orion, a framework that automates the the manual bottlenecks of\nfuzzing by integrating LLM reasoning with traditional tools, allowing campaigns\nto scale to settings where human effort alone was impractical. Orion uses LLMs\nfor code reasoning and semantic guidance, while relying on deterministic tools\nfor verification, iterative refinement, and tasks that require precision.\nAcross our benchmark suite, Orion reduces human effort by 46-204x depending on\nthe workflow stage, and we demonstrate its effectiveness through the discovery\nof two previously unknown vulnerabilities in the widely used open-source clib\nlibrary."}
{"id": "2509.14399", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14399", "abs": "https://arxiv.org/abs/2509.14399", "authors": ["Gaifan Zhang", "Yi Zhou", "Danushka Bollegala"], "title": "Annotating Training Data for Conditional Semantic Textual Similarity Measurement using Large Language Models", "comment": "Accepted to EMNLP 2025", "summary": "Semantic similarity between two sentences depends on the aspects considered\nbetween those sentences. To study this phenomenon, Deshpande et al. (2023)\nproposed the Conditional Semantic Textual Similarity (C-STS) task and annotated\na human-rated similarity dataset containing pairs of sentences compared under\ntwo different conditions. However, Tu et al. (2024) found various annotation\nissues in this dataset and showed that manually re-annotating a small portion\nof it leads to more accurate C-STS models. Despite these pioneering efforts,\nthe lack of large and accurately annotated C-STS datasets remains a blocker for\nmaking progress on this task as evidenced by the subpar performance of the\nC-STS models. To address this training data need, we resort to Large Language\nModels (LLMs) to correct the condition statements and similarity ratings in the\noriginal dataset proposed by Deshpande et al. (2023). Our proposed method is\nable to re-annotate a large training dataset for the C-STS task with minimal\nmanual effort. Importantly, by training a supervised C-STS model on our cleaned\nand re-annotated dataset, we achieve a 5.4% statistically significant\nimprovement in Spearman correlation. The re-annotated dataset is available at\nhttps://LivNLP.github.io/CSTS-reannotation."}
{"id": "2509.14635", "categories": ["cs.CL", "cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14635", "abs": "https://arxiv.org/abs/2509.14635", "authors": ["Weihan Peng", "Yuling Shi", "Yuhang Wang", "Xinyun Zhang", "Beijun Shen", "Xiaodong Gu"], "title": "SWE-QA: Can Language Models Answer Repository-level Code Questions?", "comment": "Code and data available at\n  https://github.com/peng-weihan/SWE-QA-Bench", "summary": "Understanding and reasoning about entire software repositories is an\nessential capability for intelligent software engineering tools. While existing\nbenchmarks such as CoSQA and CodeQA have advanced the field, they predominantly\nfocus on small, self-contained code snippets. These setups fail to capture the\ncomplexity of real-world repositories, where effective understanding and\nreasoning often require navigating multiple files, understanding software\narchitecture, and grounding answers in long-range code dependencies. In this\npaper, we present SWE-QA, a repository-level code question answering (QA)\nbenchmark designed to facilitate research on automated QA systems in realistic\ncode environments. SWE-QA involves 576 high-quality question-answer pairs\nspanning diverse categories, including intention understanding, cross-file\nreasoning, and multi-hop dependency analysis. To construct SWE-QA, we first\ncrawled 77,100 GitHub issues from 11 popular repositories. Based on an analysis\nof naturally occurring developer questions extracted from these issues, we\ndeveloped a two-level taxonomy of repository-level questions and constructed a\nset of seed questions for each category. For each category, we manually curated\nand validated questions and collected their corresponding answers. As a\nprototype application, we further develop SWE-QA-Agent, an agentic framework in\nwhich LLM agents reason and act to find answers automatically. We evaluate six\nadvanced LLMs on SWE-QA under various context augmentation strategies.\nExperimental results highlight the promise of LLMs, particularly our\nSWE-QA-Agent framework, in addressing repository-level QA, while also revealing\nopen challenges and pointing to future research directions."}
{"id": "2509.14405", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14405", "abs": "https://arxiv.org/abs/2509.14405", "authors": ["Javier Conde", "María Grandury", "Tairan Fu", "Carlos Arriaga", "Gonzalo Martínez", "Thomas Clark", "Sean Trott", "Clarence Gerald Green", "Pedro Reviriego", "Marc Brysbaert"], "title": "Adding LLMs to the psycholinguistic norming toolbox: A practical guide to getting the most out of human ratings", "comment": null, "summary": "Word-level psycholinguistic norms lend empirical support to theories of\nlanguage processing. However, obtaining such human-based measures is not always\nfeasible or straightforward. One promising approach is to augment human norming\ndatasets by using Large Language Models (LLMs) to predict these characteristics\ndirectly, a practice that is rapidly gaining popularity in psycholinguistics\nand cognitive science. However, the novelty of this approach (and the relative\ninscrutability of LLMs) necessitates the adoption of rigorous methodologies\nthat guide researchers through this process, present the range of possible\napproaches, and clarify limitations that are not immediately apparent, but may,\nin some cases, render the use of LLMs impractical.\n  In this work, we present a comprehensive methodology for estimating word\ncharacteristics with LLMs, enriched with practical advice and lessons learned\nfrom our own experience. Our approach covers both the direct use of base LLMs\nand the fine-tuning of models, an alternative that can yield substantial\nperformance gains in certain scenarios. A major emphasis in the guide is the\nvalidation of LLM-generated data with human \"gold standard\" norms. We also\npresent a software framework that implements our methodology and supports both\ncommercial and open-weight models.\n  We illustrate the proposed approach with a case study on estimating word\nfamiliarity in English. Using base models, we achieved a Spearman correlation\nof 0.8 with human ratings, which increased to 0.9 when employing fine-tuned\nmodels. This methodology, framework, and set of best practices aim to serve as\na reference for future research on leveraging LLMs for psycholinguistic and\nlexical studies."}
{"id": "2509.14435", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2509.14435", "abs": "https://arxiv.org/abs/2509.14435", "authors": ["Harshad Khadilkar", "Abhay Gupta"], "title": "Causal-Counterfactual RAG: The Integration of Causal-Counterfactual Reasoning into RAG", "comment": null, "summary": "Large language models (LLMs) have transformed natural language processing\n(NLP), enabling diverse applications by integrating large-scale pre-trained\nknowledge. However, their static knowledge limits dynamic reasoning over\nexternal information, especially in knowledge-intensive domains.\nRetrieval-Augmented Generation (RAG) addresses this challenge by combining\nretrieval mechanisms with generative modeling to improve contextual\nunderstanding. Traditional RAG systems suffer from disrupted contextual\nintegrity due to text chunking and over-reliance on semantic similarity for\nretrieval, often resulting in shallow and less accurate responses. We propose\nCausal-Counterfactual RAG, a novel framework that integrates explicit causal\ngraphs representing cause-effect relationships into the retrieval process and\nincorporates counterfactual reasoning grounded on the causal structure. Unlike\nconventional methods, our framework evaluates not only direct causal evidence\nbut also the counterfactuality of associated causes, combining results from\nboth to generate more robust, accurate, and interpretable answers. By\nleveraging causal pathways and associated hypothetical scenarios,\nCausal-Counterfactual RAG preserves contextual coherence, reduces\nhallucination, and enhances reasoning fidelity."}
{"id": "2509.14438", "categories": ["cs.CL", "cs.AI", "I.2"], "pdf": "https://arxiv.org/pdf/2509.14438", "abs": "https://arxiv.org/abs/2509.14438", "authors": ["Kiana Kiashemshaki", "Mohammad Jalili Torkamani", "Negin Mahmoudi", "Meysam Shirdel Bilehsavar"], "title": "Simulating a Bias Mitigation Scenario in Large Language Models", "comment": "preprint, 16 pages", "summary": "Large Language Models (LLMs) have fundamentally transformed the field of\nnatural language processing; however, their vulnerability to biases presents a\nnotable obstacle that threatens both fairness and trust. This review offers an\nextensive analysis of the bias landscape in LLMs, tracing its roots and\nexpressions across various NLP tasks. Biases are classified into implicit and\nexplicit types, with particular attention given to their emergence from data\nsources, architectural designs, and contextual deployments. This study advances\nbeyond theoretical analysis by implementing a simulation framework designed to\nevaluate bias mitigation strategies in practice. The framework integrates\nmultiple approaches including data curation, debiasing during model training,\nand post-hoc output calibration and assesses their impact in controlled\nexperimental settings. In summary, this work not only synthesizes existing\nknowledge on bias in LLMs but also contributes original empirical validation\nthrough simulation of mitigation strategies."}
{"id": "2509.14456", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14456", "abs": "https://arxiv.org/abs/2509.14456", "authors": ["Amber Shore", "Russell Scheinberg", "Ameeta Agrawal", "So Young Lee"], "title": "Correct-Detect: Balancing Performance and Ambiguity Through the Lens of Coreference Resolution in LLMs", "comment": null, "summary": "Large Language Models (LLMs) are intended to reflect human linguistic\ncompetencies. But humans have access to a broad and embodied context, which is\nkey in detecting and resolving linguistic ambiguities, even in isolated text\nspans. A foundational case of semantic ambiguity is found in the task of\ncoreference resolution: how is a pronoun related to an earlier person mention?\nThis capability is implicit in nearly every downstream task, and the presence\nof ambiguity at this level can alter performance significantly. We show that\nLLMs can achieve good performance with minimal prompting in both coreference\ndisambiguation and the detection of ambiguity in coreference, however, they\ncannot do both at the same time. We present the CORRECT-DETECT trade-off:\nthough models have both capabilities and deploy them implicitly, successful\nperformance balancing these two abilities remains elusive."}
{"id": "2509.14464", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14464", "abs": "https://arxiv.org/abs/2509.14464", "authors": ["Kiana Aghakasiri", "Noopur Zambare", "JoAnn Thai", "Carrie Ye", "Mayur Mehta", "J. Ross Mitchell", "Mohamed Abdalla"], "title": "Not What the Doctor Ordered: Surveying LLM-based De-identification and Quantifying Clinical Information Loss", "comment": "Accepted to EMNLP 2025", "summary": "De-identification in the healthcare setting is an application of NLP where\nautomated algorithms are used to remove personally identifying information of\npatients (and, sometimes, providers). With the recent rise of generative large\nlanguage models (LLMs), there has been a corresponding rise in the number of\npapers that apply LLMs to de-identification. Although these approaches often\nreport near-perfect results, significant challenges concerning reproducibility\nand utility of the research papers persist. This paper identifies three key\nlimitations in the current literature: inconsistent reporting metrics hindering\ndirect comparisons, the inadequacy of traditional classification metrics in\ncapturing errors which LLMs may be more prone to (i.e., altering clinically\nrelevant information), and lack of manual validation of automated metrics which\naim to quantify these errors. To address these issues, we first present a\nsurvey of LLM-based de-identification research, highlighting the heterogeneity\nin reporting standards. Second, we evaluated a diverse set of models to\nquantify the extent of inappropriate removal of clinical information. Next, we\nconduct a manual validation of an existing evaluation metric to measure the\nremoval of clinical information, employing clinical experts to assess their\nefficacy. We highlight poor performance and describe the inherent limitations\nof such metrics in identifying clinically significant changes. Lastly, we\npropose a novel methodology for the detection of clinically relevant\ninformation removal."}
{"id": "2509.14477", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14477", "abs": "https://arxiv.org/abs/2509.14477", "authors": ["Thales Sales Almeida", "João Guilherme Alves Santos", "Thiago Laitz", "Giovana Kerche Bonás"], "title": "Ticket-Bench: A Kickoff for Multilingual and Regionalized Agent Evaluation", "comment": null, "summary": "Large language models (LLMs) are increasingly deployed as task-oriented\nagents, where success depends on their ability to generate accurate function\ncalls under realistic, multilingual conditions. However, existing agent\nevaluations largely overlook cultural and linguistic diversity, often relying\non monolingual or naively translated benchmarks. We introduce Ticket-Bench, a\nbenchmark for multilingual agent evaluation in task-oriented scenarios.\nTicket-Bench simulates the domain of soccer ticket purchases across six major\nlanguages: Portuguese, English, Spanish, German, Italian, and French. Using\nlocalized teams, cities, and user profiles to provide a higher level of\nrealism. We evaluate a wide range of commercial and open-source LLMs, measuring\nfunction-calling accuracy and consistency across languages. Results show that\nreasoning-oriented models (e.g., GPT-5, Qwen3-235B) dominate performance but\nstill exhibit notable cross-lingual disparities. These findings underscore the\nneed for culturally aware, multilingual benchmarks to guide the development of\nrobust LLM agents."}
{"id": "2509.14478", "categories": ["cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14478", "abs": "https://arxiv.org/abs/2509.14478", "authors": ["Lucas H. McCabe", "Rimon Melamed", "Thomas Hartvigsen", "H. Howie Huang"], "title": "Estimating Semantic Alphabet Size for LLM Uncertainty Quantification", "comment": null, "summary": "Many black-box techniques for quantifying the uncertainty of large language\nmodels (LLMs) rely on repeated LLM sampling, which can be computationally\nexpensive. Therefore, practical applicability demands reliable estimation from\nfew samples. Semantic entropy (SE) is a popular sample-based uncertainty\nestimator with a discrete formulation attractive for the black-box setting.\nRecent extensions of semantic entropy exhibit improved LLM hallucination\ndetection, but do so with less interpretable methods that admit additional\nhyperparameters. For this reason, we revisit the canonical discrete semantic\nentropy estimator, finding that it underestimates the \"true\" semantic entropy,\nas expected from theory. We propose a modified semantic alphabet size\nestimator, and illustrate that using it to adjust discrete semantic entropy for\nsample coverage results in more accurate semantic entropy estimation in our\nsetting of interest. Furthermore, our proposed alphabet size estimator flags\nincorrect LLM responses as well or better than recent top-performing\napproaches, with the added benefit of remaining highly interpretable."}
{"id": "2509.14480", "categories": ["cs.CL", "cs.AI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2509.14480", "abs": "https://arxiv.org/abs/2509.14480", "authors": ["Weiting Tan", "Xinghua Qu", "Ming Tu", "Meng Ge", "Andy T. Liu", "Philipp Koehn", "Lu Lu"], "title": "Process-Supervised Reinforcement Learning for Interactive Multimodal Tool-Use Agents", "comment": null, "summary": "Effective interactive tool use requires agents to master Tool Integrated\nReasoning (TIR): a complex process involving multi-turn planning and\nlong-context dialogue management. To train agents for this dynamic process,\nparticularly in multi-modal contexts, we introduce a sandbox environment for\nreinforcement learning (RL) that supports interleaved speech-text rollouts. Our\ncore strategy, Turn-level Adjudicated Reinforcement Learning (TARL), addresses\nthe challenge of credit assignment in long-horizon tasks by employing a Large\nLanguage Model (LLM) as a judge to provide turn-level evaluation. To enhance\nexploration, we integrate a mixed-task training curriculum with mathematical\nreasoning problems. This unified approach boosts the task pass rate on the\ntext-based $\\tau$-bench by over 6% compared to strong RL baselines. Crucially,\nwe demonstrate our framework's suitability for fine-tuning a multi-modal\nfoundation model for agentic tasks. By training a base multi-modal LLM on\ninterleaved speech-text rollouts, we equip it with tool-use abilities, paving\nthe way for more natural, voice-driven interactive agents."}
{"id": "2509.14493", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14493", "abs": "https://arxiv.org/abs/2509.14493", "authors": ["Samuel J. Bell", "Eduardo Sánchez", "David Dale", "Pontus Stenetorp", "Mikel Artetxe", "Marta R. Costa-jussà"], "title": "Translate, then Detect: Leveraging Machine Translation for Cross-Lingual Toxicity Classification", "comment": null, "summary": "Multilingual toxicity detection remains a significant challenge due to the\nscarcity of training data and resources for many languages. While prior work\nhas leveraged the translate-test paradigm to support cross-lingual transfer\nacross a range of classification tasks, the utility of translation in\nsupporting toxicity detection at scale remains unclear. In this work, we\nconduct a comprehensive comparison of translation-based and\nlanguage-specific/multilingual classification pipelines. We find that\ntranslation-based pipelines consistently outperform out-of-distribution\nclassifiers in 81.3% of cases (13 of 16 languages), with translation benefits\nstrongly correlated with both the resource level of the target language and the\nquality of the machine translation (MT) system. Our analysis reveals that\ntraditional classifiers outperform large language model (LLM) judges, with this\nadvantage being particularly pronounced for low-resource languages, where\ntranslate-classify methods dominate translate-judge approaches in 6 out of 7\ncases. We additionally show that MT-specific fine-tuning on LLMs yields lower\nrefusal rates compared to standard instruction-tuned models, but it can\nnegatively impact toxicity detection accuracy for low-resource languages. These\nfindings offer actionable guidance for practitioners developing scalable\nmultilingual content moderation systems."}
{"id": "2509.14504", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14504", "abs": "https://arxiv.org/abs/2509.14504", "authors": ["Roman Kovalchuk", "Mariana Romanyshyn", "Petro Ivaniuk"], "title": "Introducing OmniGEC: A Silver Multilingual Dataset for Grammatical Error Correction", "comment": null, "summary": "In this paper, we introduce OmniGEC, a collection of multilingual\nsilver-standard datasets for the task of Grammatical Error Correction (GEC),\ncovering eleven languages: Czech, English, Estonian, German, Greek, Icelandic,\nItalian, Latvian, Slovene, Swedish, and Ukrainian. These datasets facilitate\nthe development of multilingual GEC solutions and help bridge the data gap in\nadapting English GEC solutions to multilingual GEC. The texts in the datasets\noriginate from three sources: Wikipedia edits for the eleven target languages,\nsubreddits from Reddit in the eleven target languages, and the Ukrainian-only\nUberText 2.0 social media corpus. While Wikipedia edits were derived from\nhuman-made corrections, the Reddit and UberText 2.0 data were automatically\ncorrected with the GPT-4o-mini model. The quality of the corrections in the\ndatasets was evaluated both automatically and manually. Finally, we fine-tune\ntwo open-source large language models - Aya-Expanse (8B) and Gemma-3 (12B) - on\nthe multilingual OmniGEC corpora and achieve state-of-the-art (SOTA) results\nfor paragraph-level multilingual GEC. The dataset collection and the\nbest-performing models are available on Hugging Face."}
{"id": "2509.14515", "categories": ["cs.CL", "cs.SD", "eess.AS"], "pdf": "https://arxiv.org/pdf/2509.14515", "abs": "https://arxiv.org/abs/2509.14515", "authors": ["Yuxuan Chen", "Haoyuan Yu"], "title": "From Turn-Taking to Synchronous Dialogue: A Survey of Full-Duplex Spoken Language Models", "comment": null, "summary": "True Full-Duplex (TFD) voice communication--enabling simultaneous listening\nand speaking with natural turn-taking, overlapping speech, and\ninterruptions--represents a critical milestone toward human-like AI\ninteraction. This survey comprehensively reviews Full-Duplex Spoken Language\nModels (FD-SLMs) in the LLM era. We establish a taxonomy distinguishing\nEngineered Synchronization (modular architectures) from Learned Synchronization\n(end-to-end architectures), and unify fragmented evaluation approaches into a\nframework encompassing Temporal Dynamics, Behavioral Arbitration, Semantic\nCoherence, and Acoustic Performance. Through comparative analysis of mainstream\nFD-SLMs, we identify fundamental challenges: synchronous data scarcity,\narchitectural divergence, and evaluation gaps, providing a roadmap for\nadvancing human-AI communication."}
{"id": "2509.14526", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14526", "abs": "https://arxiv.org/abs/2509.14526", "authors": ["Yihan Cao", "Yanbin Kang", "Zhengming Xing", "Ruijie Jiang"], "title": "Delta Knowledge Distillation for Large Language Models", "comment": "8 pages, 3 figures", "summary": "Knowledge distillation (KD) is a widely adopted approach for compressing\nlarge neural networks by transferring knowledge from a large teacher model to a\nsmaller student model. In the context of large language models, token level KD,\ntypically minimizing the KL divergence between student output distribution and\nteacher output distribution, has shown strong empirical performance. However,\nprior work assumes student output distribution and teacher output distribution\nshare the same optimal representation space, a premise that may not hold in\nmany cases. To solve this problem, we propose Delta Knowledge Distillation\n(Delta-KD), a novel extension of token level KD that encourages the student to\napproximate an optimal representation space by explicitly preserving the\ndistributional shift Delta introduced during the teacher's supervised\nfinetuning (SFT). Empirical results on ROUGE metrics demonstrate that Delta KD\nsubstantially improves student performance while preserving more of the\nteacher's knowledge."}
{"id": "2509.14543", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14543", "abs": "https://arxiv.org/abs/2509.14543", "authors": ["Zhengxiang Wang", "Nafis Irtiza Tripto", "Solha Park", "Zhenzhen Li", "Jiawei Zhou"], "title": "Catch Me If You Can? Not Yet: LLMs Still Struggle to Imitate the Implicit Writing Styles of Everyday Authors", "comment": "EMNLP 2025 (Findings)", "summary": "As large language models (LLMs) become increasingly integrated into personal\nwriting tools, a critical question arises: can LLMs faithfully imitate an\nindividual's writing style from just a few examples? Personal style is often\nsubtle and implicit, making it difficult to specify through prompts yet\nessential for user-aligned generation. This work presents a comprehensive\nevaluation of state-of-the-art LLMs' ability to mimic personal writing styles\nvia in-context learning from a small number of user-authored samples. We\nintroduce an ensemble of complementary metrics-including authorship\nattribution, authorship verification, style matching, and AI detection-to\nrobustly assess style imitation. Our evaluation spans over 40000 generations\nper model across domains such as news, email, forums, and blogs, covering\nwriting samples from more than 400 real-world authors. Results show that while\nLLMs can approximate user styles in structured formats like news and email,\nthey struggle with nuanced, informal writing in blogs and forums. Further\nanalysis on various prompting strategies such as number of demonstrations\nreveal key limitations in effective personalization. Our findings highlight a\nfundamental gap in personalized LLM adaptation and the need for improved\ntechniques to support implicit, style-consistent generation. To aid future\nresearch and for reproducibility, we open-source our data and code."}
{"id": "2509.14545", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14545", "abs": "https://arxiv.org/abs/2509.14545", "authors": ["Shuyao Xu", "Wenguang Wang", "Handong Gao", "Wei Kang", "Long Qin", "Weizhi Wang"], "title": "Controlling Language Difficulty in Dialogues with Linguistic Features", "comment": "15 pages,9 figures", "summary": "Large language models (LLMs) have emerged as powerful tools for supporting\nsecond language acquisition, particularly in simulating interactive dialogues\nfor speaking practice. However, adapting the language difficulty of\nLLM-generated responses to match learners' proficiency levels remains a\nchallenge. This work addresses this issue by proposing a framework for\ncontrolling language proficiency in educational dialogue systems. Our approach\nleverages three categories of linguistic features, readability features (e.g.,\nFlesch-Kincaid Grade Level), syntactic features (e.g., syntactic tree depth),\nand lexical features (e.g., simple word ratio), to quantify and regulate text\ncomplexity. We demonstrate that training LLMs on linguistically annotated\ndialogue data enables precise modulation of language proficiency, outperforming\nprompt-based methods in both flexibility and stability. To evaluate this, we\nintroduce Dilaprix, a novel metric integrating the aforementioned features,\nwhich shows strong correlation with expert judgments of language difficulty.\nEmpirical results reveal that our approach achieves superior controllability of\nlanguage proficiency while maintaining high dialogue quality."}
{"id": "2509.14597", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14597", "abs": "https://arxiv.org/abs/2509.14597", "authors": ["Seungjun Yi", "Joakim Nguyen", "Terence Lim", "Andrew Well", "Joseph Skrovan", "Mehak Beri", "YongGeon Lee", "Kavita Radhakrishnan", "Liu Leqi", "Mia Markey", "Ying Ding"], "title": "Position: Thematic Analysis of Unstructured Clinical Transcripts with Large Language Models", "comment": "Submitted to GenAI4Health@NeurIPS 2025", "summary": "This position paper examines how large language models (LLMs) can support\nthematic analysis of unstructured clinical transcripts, a widely used but\nresource-intensive method for uncovering patterns in patient and provider\nnarratives. We conducted a systematic review of recent studies applying LLMs to\nthematic analysis, complemented by an interview with a practicing clinician.\nOur findings reveal that current approaches remain fragmented across multiple\ndimensions including types of thematic analysis, datasets, prompting strategies\nand models used, most notably in evaluation. Existing evaluation methods vary\nwidely (from qualitative expert review to automatic similarity metrics),\nhindering progress and preventing meaningful benchmarking across studies. We\nargue that establishing standardized evaluation practices is critical for\nadvancing the field. To this end, we propose an evaluation framework centered\non three dimensions: validity, reliability, and interpretability."}
{"id": "2509.14611", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14611", "abs": "https://arxiv.org/abs/2509.14611", "authors": ["William Christian", "Daniel Adamlu", "Adrian Yu", "Derwin Suhartono"], "title": "Leveraging IndoBERT and DistilBERT for Indonesian Emotion Classification in E-Commerce Reviews", "comment": null, "summary": "Understanding emotions in the Indonesian language is essential for improving\ncustomer experiences in e-commerce. This study focuses on enhancing the\naccuracy of emotion classification in Indonesian by leveraging advanced\nlanguage models, IndoBERT and DistilBERT. A key component of our approach was\ndata processing, specifically data augmentation, which included techniques such\nas back-translation and synonym replacement. These methods played a significant\nrole in boosting the model's performance. After hyperparameter tuning, IndoBERT\nachieved an accuracy of 80\\%, demonstrating the impact of careful data\nprocessing. While combining multiple IndoBERT models led to a slight\nimprovement, it did not significantly enhance performance. Our findings\nindicate that IndoBERT was the most effective model for emotion classification\nin Indonesian, with data augmentation proving to be a vital factor in achieving\nhigh accuracy. Future research should focus on exploring alternative\narchitectures and strategies to improve generalization for Indonesian NLP\ntasks."}
{"id": "2509.14624", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14624", "abs": "https://arxiv.org/abs/2509.14624", "authors": ["Linxi Xie", "Xin Teng", "Shichang Ke", "Hongyi Wen", "Shengjie Wang"], "title": "Reveal and Release: Iterative LLM Unlearning with Self-generated Data", "comment": "Accepted to EMNLP 2025 Findings", "summary": "Large language model (LLM) unlearning has demonstrated effectiveness in\nremoving the influence of undesirable data (also known as forget data).\nExisting approaches typically assume full access to the forget dataset,\noverlooking two key challenges: (1) Forget data is often privacy-sensitive,\nrare, or legally regulated, making it expensive or impractical to obtain (2)\nThe distribution of available forget data may not align with how that\ninformation is represented within the model. To address these limitations, we\npropose a ``Reveal-and-Release'' method to unlearn with self-generated data,\nwhere we prompt the model to reveal what it knows using optimized instructions.\nTo fully utilize the self-generated forget data, we propose an iterative\nunlearning framework, where we make incremental adjustments to the model's\nweight space with parameter-efficient modules trained on the forget data.\nExperimental results demonstrate that our method balances the tradeoff between\nforget quality and utility preservation."}
{"id": "2509.14635", "categories": ["cs.CL", "cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.14635", "abs": "https://arxiv.org/abs/2509.14635", "authors": ["Weihan Peng", "Yuling Shi", "Yuhang Wang", "Xinyun Zhang", "Beijun Shen", "Xiaodong Gu"], "title": "SWE-QA: Can Language Models Answer Repository-level Code Questions?", "comment": "Code and data available at\n  https://github.com/peng-weihan/SWE-QA-Bench", "summary": "Understanding and reasoning about entire software repositories is an\nessential capability for intelligent software engineering tools. While existing\nbenchmarks such as CoSQA and CodeQA have advanced the field, they predominantly\nfocus on small, self-contained code snippets. These setups fail to capture the\ncomplexity of real-world repositories, where effective understanding and\nreasoning often require navigating multiple files, understanding software\narchitecture, and grounding answers in long-range code dependencies. In this\npaper, we present SWE-QA, a repository-level code question answering (QA)\nbenchmark designed to facilitate research on automated QA systems in realistic\ncode environments. SWE-QA involves 576 high-quality question-answer pairs\nspanning diverse categories, including intention understanding, cross-file\nreasoning, and multi-hop dependency analysis. To construct SWE-QA, we first\ncrawled 77,100 GitHub issues from 11 popular repositories. Based on an analysis\nof naturally occurring developer questions extracted from these issues, we\ndeveloped a two-level taxonomy of repository-level questions and constructed a\nset of seed questions for each category. For each category, we manually curated\nand validated questions and collected their corresponding answers. As a\nprototype application, we further develop SWE-QA-Agent, an agentic framework in\nwhich LLM agents reason and act to find answers automatically. We evaluate six\nadvanced LLMs on SWE-QA under various context augmentation strategies.\nExperimental results highlight the promise of LLMs, particularly our\nSWE-QA-Agent framework, in addressing repository-level QA, while also revealing\nopen challenges and pointing to future research directions."}
{"id": "2509.14651", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14651", "abs": "https://arxiv.org/abs/2509.14651", "authors": ["Siyu Yan", "Long Zeng", "Xuecheng Wu", "Chengcheng Han", "Kongcheng Zhang", "Chong Peng", "Xuezhi Cao", "Xunliang Cai", "Chenjuan Guo"], "title": "MUSE: MCTS-Driven Red Teaming Framework for Enhanced Multi-Turn Dialogue Safety in Large Language Models", "comment": "EMNLP 2025 main conference", "summary": "As large language models~(LLMs) become widely adopted, ensuring their\nalignment with human values is crucial to prevent jailbreaks where adversaries\nmanipulate models to produce harmful content. While most defenses target\nsingle-turn attacks, real-world usage often involves multi-turn dialogues,\nexposing models to attacks that exploit conversational context to bypass safety\nmeasures. We introduce MUSE, a comprehensive framework tackling multi-turn\njailbreaks from both attack and defense angles. For attacks, we propose MUSE-A,\na method that uses frame semantics and heuristic tree search to explore diverse\nsemantic trajectories. For defense, we present MUSE-D, a fine-grained safety\nalignment approach that intervenes early in dialogues to reduce\nvulnerabilities. Extensive experiments on various models show that MUSE\neffectively identifies and mitigates multi-turn vulnerabilities. Code is\navailable at\n\\href{https://github.com/yansiyu02/MUSE}{https://github.com/yansiyu02/MUSE}."}
{"id": "2509.14653", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14653", "abs": "https://arxiv.org/abs/2509.14653", "authors": ["Ying Fang", "Xiaofei Li"], "title": "UMA-Split: unimodal aggregation for both English and Mandarin non-autoregressive speech recognition", "comment": "Submit to ICASSP 2026", "summary": "This paper proposes a unimodal aggregation (UMA) based nonautoregressive\nmodel for both English and Mandarin speech recognition. The original UMA\nexplicitly segments and aggregates acoustic frames (with unimodal weights that\nfirst monotonically increase and then decrease) of the same text token to learn\nbetter representations than regular connectionist temporal classification\n(CTC). However, it only works well in Mandarin. It struggles with other\nlanguages, such as English, for which a single syllable may be tokenized into\nmultiple fine-grained tokens, or a token spans fewer than 3 acoustic frames and\nfails to form unimodal weights. To address this problem, we propose allowing\neach UMA-aggregated frame map to multiple tokens, via a simple split module\nthat generates two tokens from each aggregated frame before computing the CTC\nloss."}
{"id": "2509.14671", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14671", "abs": "https://arxiv.org/abs/2509.14671", "authors": ["Xiaobo Xing", "Wei Yuan", "Tong Chen", "Quoc Viet Hung Nguyen", "Xiangliang Zhang", "Hongzhi Yin"], "title": "TableDART: Dynamic Adaptive Multi-Modal Routing for Table Understanding", "comment": null, "summary": "Modeling semantic and structural information from tabular data remains a core\nchallenge for effective table understanding. Existing Table-as-Text approaches\nflatten tables for large language models (LLMs), but lose crucial structural\ncues, while Table-as-Image methods preserve structure yet struggle with\nfine-grained semantics. Recent Table-as-Multimodality strategies attempt to\ncombine textual and visual views, but they (1) statically process both\nmodalities for every query-table pair within a large multimodal LLMs (MLLMs),\ninevitably introducing redundancy and even conflicts, and (2) depend on costly\nfine-tuning of MLLMs. In light of this, we propose TableDART, a\ntraining-efficient framework that integrates multimodal views by reusing\npretrained single-modality models. TableDART introduces a lightweight\n2.59M-parameter MLP gating network that dynamically selects the optimal path\n(either Text-only, Image-only, or Fusion) for each table-query pair,\neffectively reducing redundancy and conflicts from both modalities. In\naddition, we propose a novel agent to mediate cross-modal knowledge integration\nby analyzing outputs from text- and image-based models, either selecting the\nbest result or synthesizing a new answer through reasoning. This design avoids\nthe prohibitive costs of full MLLM fine-tuning. Extensive experiments on seven\nbenchmarks show that TableDART establishes new state-of-the-art performance\namong open-source models, surpassing the strongest baseline by an average of\n4.02%. The code is available at:\nhttps://anonymous.4open.science/r/TableDART-C52B"}
{"id": "2509.14689", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14689", "abs": "https://arxiv.org/abs/2509.14689", "authors": ["Vrunda N. sukhadia", "Shammur Absar Chowdhury"], "title": "HARNESS: Lightweight Distilled Arabic Speech Foundation Models", "comment": "5 pages, 4 figures", "summary": "Large pre-trained speech models excel in downstream tasks but their\ndeployment is impractical for resource-limited environments. In this paper, we\nintroduce HArnESS, the first Arabic-centric self-supervised speech model\nfamily, designed to capture Arabic speech nuances. Using iterative\nself-distillation, we train large bilingual HArnESS (HL) SSL models and then\ndistill knowledge into compressed student models (HS, HST), preserving\nArabic-specific representations. We use low-rank approximation to further\ncompact the teacher's discrete supervision into shallow, thin models. We\nevaluate HArnESS on Arabic ASR, Speaker Emotion Recognition (SER), and Dialect\nIdentification (DID), demonstrating effectiveness against HuBERT and XLS-R.\nWith minimal fine-tuning, HArnESS achieves SOTA or comparable performance,\nmaking it a lightweight yet powerful alternative for real-world use. We release\nour distilled models and findings to support responsible research and\ndeployment in low-resource settings."}
{"id": "2509.14712", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14712", "abs": "https://arxiv.org/abs/2509.14712", "authors": ["Seunguk Yu", "Jungmin Yun", "Jinhee Jang", "Youngbin Kim"], "title": "From Ground Trust to Truth: Disparities in Offensive Language Judgments on Contemporary Korean Political Discourse", "comment": "EMNLP 2025 findings", "summary": "Although offensive language continually evolves over time, even recent\nstudies using LLMs have predominantly relied on outdated datasets and rarely\nevaluated the generalization ability on unseen texts. In this study, we\nconstructed a large-scale dataset of contemporary political discourse and\nemployed three refined judgments in the absence of ground truth. Each judgment\nreflects a representative offensive language detection method and is carefully\ndesigned for optimal conditions. We identified distinct patterns for each\njudgment and demonstrated tendencies of label agreement using a leave-one-out\nstrategy. By establishing pseudo-labels as ground trust for quantitative\nperformance assessment, we observed that a strategically designed single\nprompting achieves comparable performance to more resource-intensive methods.\nThis suggests a feasible approach applicable in real-world settings with\ninherent constraints."}
{"id": "2509.14735", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14735", "abs": "https://arxiv.org/abs/2509.14735", "authors": ["Chenkun Tan", "Pengyu Wang", "Shaojun Zhou", "Botian Jiang", "Zhaowei Li", "Dong Zhang", "Xinghao Wang", "Yaqian Zhou", "Xipeng Qiu"], "title": "Decoupled Proxy Alignment: Mitigating Language Prior Conflict for Multimodal Alignment in MLLM", "comment": "Accepted by Findings of EMNLP2025", "summary": "Multimodal large language models (MLLMs) have gained significant attention\ndue to their impressive ability to integrate vision and language modalities.\nRecent advancements in MLLMs have primarily focused on improving performance\nthrough high-quality datasets, novel architectures, and optimized training\nstrategies. However, in this paper, we identify a previously overlooked issue,\nlanguage prior conflict, a mismatch between the inherent language priors of\nlarge language models (LLMs) and the language priors in training datasets. This\nconflict leads to suboptimal vision-language alignment, as MLLMs are prone to\nadapting to the language style of training samples. To address this issue, we\npropose a novel training method called Decoupled Proxy Alignment (DPA). DPA\nintroduces two key innovations: (1) the use of a proxy LLM during pretraining\nto decouple the vision-language alignment process from language prior\ninterference, and (2) dynamic loss adjustment based on visual relevance to\nstrengthen optimization signals for visually relevant tokens. Extensive\nexperiments demonstrate that DPA significantly mitigates the language prior\nconflict, achieving superior alignment performance across diverse datasets,\nmodel families, and scales. Our method not only improves the effectiveness of\nMLLM training but also shows exceptional generalization capabilities, making it\na robust approach for vision-language alignment. Our code is available at\nhttps://github.com/fnlp-vision/DPA."}
{"id": "2509.14738", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14738", "abs": "https://arxiv.org/abs/2509.14738", "authors": ["Pengyu Wang", "Shaojun Zhou", "Chenkun Tan", "Xinghao Wang", "Wei Huang", "Zhen Ye", "Zhaowei Li", "Botian Jiang", "Dong Zhang", "Xipeng Qiu"], "title": "UnifiedVisual: A Framework for Constructing Unified Vision-Language Datasets", "comment": "Accepted by Findings of EMNLP2025", "summary": "Unified vision large language models (VLLMs) have recently achieved\nimpressive advancements in both multimodal understanding and generation,\npowering applications such as visual question answering and text-guided image\nsynthesis. However, progress in unified VLLMs remains constrained by the lack\nof datasets that fully exploit the synergistic potential between these two core\nabilities. Existing datasets typically address understanding and generation in\nisolation, thereby limiting the performance of unified VLLMs. To bridge this\ncritical gap, we introduce a novel dataset construction framework,\nUnifiedVisual, and present UnifiedVisual-240K, a high-quality dataset\nmeticulously designed to facilitate mutual enhancement between multimodal\nunderstanding and generation. UnifiedVisual-240K seamlessly integrates diverse\nvisual and textual inputs and outputs, enabling comprehensive cross-modal\nreasoning and precise text-to-image alignment. Our dataset encompasses a wide\nspectrum of tasks and data sources, ensuring rich diversity and addressing key\nshortcomings of prior resources. Extensive experiments demonstrate that models\ntrained on UnifiedVisual-240K consistently achieve strong performance across a\nwide range of tasks. Notably, these models exhibit significant mutual\nreinforcement between multimodal understanding and generation, further\nvalidating the effectiveness of our framework and dataset. We believe\nUnifiedVisual represents a new growth point for advancing unified VLLMs and\nunlocking their full potential. Our code and datasets is available at\nhttps://github.com/fnlp-vision/UnifiedVisual."}
{"id": "2509.14749", "categories": ["cs.CL", "cs.IR"], "pdf": "https://arxiv.org/pdf/2509.14749", "abs": "https://arxiv.org/abs/2509.14749", "authors": ["Longfei Zuo", "Pingjun Hong", "Oliver Kraus", "Barbara Plank", "Robert Litschko"], "title": "Evaluating Large Language Models for Cross-Lingual Retrieval", "comment": "Accepted at EMNLP 2025 (Findings)", "summary": "Multi-stage information retrieval (IR) has become a widely-adopted paradigm\nin search. While Large Language Models (LLMs) have been extensively evaluated\nas second-stage reranking models for monolingual IR, a systematic large-scale\ncomparison is still lacking for cross-lingual IR (CLIR). Moreover, while prior\nwork shows that LLM-based rerankers improve CLIR performance, their evaluation\nsetup relies on lexical retrieval with machine translation (MT) for the first\nstage. This is not only prohibitively expensive but also prone to error\npropagation across stages. Our evaluation on passage-level and document-level\nCLIR reveals that further gains can be achieved with multilingual bi-encoders\nas first-stage retrievers and that the benefits of translation diminishes with\nstronger reranking models. We further show that pairwise rerankers based on\ninstruction-tuned LLMs perform competitively with listwise rerankers. To the\nbest of our knowledge, we are the first to study the interaction between\nretrievers and rerankers in two-stage CLIR with LLMs. Our findings reveal that,\nwithout MT, current state-of-the-art rerankers fall severely short when\ndirectly applied in CLIR."}
{"id": "2509.14752", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14752", "abs": "https://arxiv.org/abs/2509.14752", "authors": ["Nahyun Lee", "Guijin Son", "Hyunwoo Ko", "Kyubeen Han"], "title": "KAIO: A Collection of More Challenging Korean Questions", "comment": "4 pages paper", "summary": "With the advancement of mid/post-training techniques, LLMs are pushing their\nboundaries at an accelerated pace. Legacy benchmarks saturate quickly (e.g.,\nbroad suites like MMLU over the years, newer ones like GPQA-D even faster),\nwhich makes frontier progress hard to track. The problem is especially acute in\nKorean: widely used benchmarks are fewer, often translated or narrow in scope,\nand updated more slowly, so saturation and contamination arrive sooner.\nAccordingly, at this moment, there is no Korean benchmark capable of evaluating\nand ranking frontier models. To bridge this gap, we introduce KAIO, a Korean,\nmath-centric benchmark that stresses long-chain reasoning. Unlike recent Korean\nsuites that are at or near saturation, KAIO remains far from saturated: the\nbest-performing model, GPT-5, attains 62.8, followed by Gemini-2.5-Pro (52.3).\nOpen models such as Qwen3-235B and DeepSeek-R1 cluster falls below 30,\ndemonstrating substantial headroom, enabling robust tracking of frontier\nprogress in Korean. To reduce contamination, KAIO will remain private and be\nserved via a held-out evaluator until the best publicly known model reaches at\nleast 80% accuracy, after which we will release the set and iterate to a harder\nversion."}
{"id": "2509.14760", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14760", "abs": "https://arxiv.org/abs/2509.14760", "authors": ["Haoran Zhang", "Yafu Li", "Xuyang Hu", "Dongrui Liu", "Zhilin Wang", "Bo Li", "Yu Cheng"], "title": "Reasoning over Boundaries: Enhancing Specification Alignment via Test-time Delibration", "comment": "10 pages main text, 52 pages total (including appendix)", "summary": "Large language models (LLMs) are increasingly applied in diverse real-world\nscenarios, each governed by bespoke behavioral and safety specifications (spec)\ncustom-tailored by users or organizations. These spec, categorized into\nsafety-spec and behavioral-spec, vary across scenarios and evolve with changing\npreferences and requirements. We formalize this challenge as specification\nalignment, focusing on LLMs' ability to follow dynamic, scenario-specific spec\nfrom both behavioral and safety perspectives. To address this challenge, we\npropose Align3, a lightweight method that employs Test-Time Deliberation (TTD)\nwith hierarchical reflection and revision to reason over the specification\nboundaries. We further present SpecBench, a unified benchmark for measuring\nspecification alignment, covering 5 scenarios, 103 spec, and 1,500 prompts.\nExperiments on 15 reasoning and 18 instruct models with several TTD methods,\nincluding Self-Refine, TPO, and MoreThink, yield three key findings: (i)\ntest-time deliberation enhances specification alignment; (ii) Align3 advances\nthe safety-helpfulness trade-off frontier with minimal overhead; (iii)\nSpecBench effectively reveals alignment gaps. These results highlight the\npotential of test-time deliberation as an effective strategy for reasoning over\nthe real-world specification boundaries."}
{"id": "2509.14797", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14797", "abs": "https://arxiv.org/abs/2509.14797", "authors": ["Alba Maria Marmol-Romero", "Flor Miriam Plaza-del-Arco", "Arturo Montejo-Raez"], "title": "SINAI at eRisk@CLEF 2023: Approaching Early Detection of Gambling with Natural Language Processing", "comment": "9 pages, 2 figures, 4 tables. CLEF (Working Notes). 2023", "summary": "This paper describes the participation of the SINAI team in the eRisk@CLEF\nlab. Specifically, one of the proposed tasks has been addressed: Task 2 on the\nearly detection of signs of pathological gambling. The approach presented in\nTask 2 is based on pre-trained models from Transformers architecture with\ncomprehensive preprocessing data and data balancing techniques. Moreover, we\nintegrate Long-short Term Memory (LSTM) architecture with automodels from\nTransformers. In this Task, our team has been ranked in seventh position, with\nan F1 score of 0.126, out of 49 participant submissions and achieves the\nhighest values in recall metrics and metrics related to early detection."}
{"id": "2509.14806", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14806", "abs": "https://arxiv.org/abs/2509.14806", "authors": ["Alba Maria Marmol-Romero", "Salud Maria Jimenez-Zafra", "Flor Miriam Plaza-del-Arco", "M. Dolores Molina-Gonzalez", "Maria-Teresa Martin-Valdivia", "Arturo Montejo-Raez"], "title": "SINAI at eRisk@CLEF 2022: Approaching Early Detection of Gambling and Eating Disorders with Natural Language Processing", "comment": "11 pages, 1 figure, 4 tables. CLEF (Working Notes). 2022", "summary": "This paper describes the participation of the SINAI team in the eRisk@CLEF\nlab. Specifically, two of the proposed tasks have been addressed: i) Task 1 on\nthe early detection of signs of pathological gambling, and ii) Task 3 on\nmeasuring the severity of the signs of eating disorders. The approach presented\nin Task 1 is based on the use of sentence embeddings from Transformers with\nfeatures related to volumetry, lexical diversity, complexity metrics, and\nemotion-related scores, while the approach for Task 3 is based on text\nsimilarity estimation using contextualized word embeddings from Transformers.\nIn Task 1, our team has been ranked in second position, with an F1 score of\n0.808, out of 41 participant submissions. In Task 3, our team also placed\nsecond out of a total of 3 participating teams."}
{"id": "2509.14814", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14814", "abs": "https://arxiv.org/abs/2509.14814", "authors": ["Hannah Sterz", "Fabian David Schmidt", "Goran Glavaš", "Ivan Vulić"], "title": "ReCoVeR the Target Language: Language Steering without Sacrificing Task Performance", "comment": null, "summary": "As they become increasingly multilingual, Large Language Models (LLMs)\nexhibit more language confusion, i.e., they tend to generate answers in a\nlanguage different from the language of the prompt or the answer language\nexplicitly requested by the user. In this work, we propose ReCoVeR (REducing\nlanguage COnfusion in VEctor Representations), a novel lightweight approach for\nreducing language confusion based on language-specific steering vectors. We\nfirst isolate language vectors with the help of multi-parallel corpus and then\neffectively leverage those vectors for effective LLM steering via fixed (i.e.,\nunsupervised) as well as trainable steering functions. Our extensive\nevaluation, encompassing three benchmarks and 18 languages, shows that ReCoVeR\neffectively mitigates language confusion in both monolingual and cross-lingual\nsetups while at the same time -- and in contrast to prior language steering\nmethods -- retaining task performance. Our data code is available at\nhttps://github.com/hSterz/recover."}
{"id": "2509.14834", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14834", "abs": "https://arxiv.org/abs/2509.14834", "authors": ["Jinhee Jang", "Ayoung Moon", "Minkyoung Jung", "YoungBin Kim. Seung Jin Lee"], "title": "LLM Agents at the Roundtable: A Multi-Perspective and Dialectical Reasoning Framework for Essay Scoring", "comment": null, "summary": "The emergence of large language models (LLMs) has brought a new paradigm to\nautomated essay scoring (AES), a long-standing and practical application of\nnatural language processing in education. However, achieving human-level\nmulti-perspective understanding and judgment remains a challenge. In this work,\nwe propose Roundtable Essay Scoring (RES), a multi-agent evaluation framework\ndesigned to perform precise and human-aligned scoring under a zero-shot\nsetting. RES constructs evaluator agents based on LLMs, each tailored to a\nspecific prompt and topic context. Each agent independently generates a\ntrait-based rubric and conducts a multi-perspective evaluation. Then, by\nsimulating a roundtable-style discussion, RES consolidates individual\nevaluations through a dialectical reasoning process to produce a final holistic\nscore that more closely aligns with human evaluation. By enabling collaboration\nand consensus among agents with diverse evaluation perspectives, RES\noutperforms prior zero-shot AES approaches. Experiments on the ASAP dataset\nusing ChatGPT and Claude show that RES achieves up to a 34.86% improvement in\naverage QWK over straightforward prompting (Vanilla) methods."}
{"id": "2509.14837", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14837", "abs": "https://arxiv.org/abs/2509.14837", "authors": ["Qidong Wang", "Junjie Hu", "Ming Jiang"], "title": "V-SEAM: Visual Semantic Editing and Attention Modulating for Causal Interpretability of Vision-Language Models", "comment": "EMNLP 2025 Main", "summary": "Recent advances in causal interpretability have extended from language models\nto vision-language models (VLMs), seeking to reveal their internal mechanisms\nthrough input interventions. While textual interventions often target\nsemantics, visual interventions typically rely on coarse pixel-level\nperturbations, limiting semantic insights on multimodal integration. In this\nstudy, we introduce V-SEAM, a novel framework that combines Visual Semantic\nEditing and Attention Modulating for causal interpretation of VLMs. V-SEAM\nenables concept-level visual manipulations and identifies attention heads with\npositive or negative contributions to predictions across three semantic levels:\nobjects, attributes, and relationships. We observe that positive heads are\noften shared within the same semantic level but vary across levels, while\nnegative heads tend to generalize broadly. Finally, we introduce an automatic\nmethod to modulate key head embeddings, demonstrating enhanced performance for\nboth LLaVA and InstructBLIP across three diverse VQA benchmarks. Our data and\ncode are released at: https://github.com/petergit1/V-SEAM."}
{"id": "2509.14851", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14851", "abs": "https://arxiv.org/abs/2509.14851", "authors": ["Xianrong Yao", "Dong She", "Chenxu Zhang", "Yimeng Zhang", "Yueru Sun", "Noman Ahmed", "Yang Gao", "Zhanpeng Jin"], "title": "Empathy-R1: A Chain-of-Empathy and Reinforcement Learning Framework for Long-Form Mental Health Support", "comment": null, "summary": "Empathy is critical for effective mental health support, especially when\naddressing Long Counseling Texts (LCTs). However, existing Large Language\nModels (LLMs) often generate replies that are semantically fluent but lack the\nstructured reasoning necessary for genuine psychological support, particularly\nin a Chinese context. To bridge this gap, we introduce Empathy-R1, a novel\nframework that integrates a Chain-of-Empathy (CoE) reasoning process with\nReinforcement Learning (RL) to enhance response quality for LCTs. Inspired by\ncognitive-behavioral therapy, our CoE paradigm guides the model to sequentially\nreason about a help-seeker's emotions, causes, and intentions, making its\nthinking process both transparent and interpretable. Our framework is empowered\nby a new large-scale Chinese dataset, Empathy-QA, and a two-stage training\nprocess. First, Supervised Fine-Tuning instills the CoE's reasoning structure.\nSubsequently, RL, guided by a dedicated reward model, refines the therapeutic\nrelevance and contextual appropriateness of the final responses. Experiments\nshow that Empathy-R1 achieves strong performance on key automatic metrics. More\nimportantly, human evaluations confirm its superiority, showing a clear\npreference over strong baselines and achieving a Win@1 rate of 44.30% on our\nnew benchmark. By enabling interpretable and contextually nuanced responses,\nEmpathy-R1 represents a significant advancement in developing responsible and\ngenuinely beneficial AI for mental health support."}
{"id": "2509.14882", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14882", "abs": "https://arxiv.org/abs/2509.14882", "authors": ["Issa Sugiura", "Shuhei Kurita", "Yusuke Oda", "Ryuichiro Higashinaka"], "title": "Llama-Mimi: Speech Language Models with Interleaved Semantic and Acoustic Tokens", "comment": "5 pages, 1 figures", "summary": "We propose Llama-Mimi, a speech language model that uses a unified tokenizer\nand a single Transformer decoder to jointly model sequences of interleaved\nsemantic and acoustic tokens. Comprehensive evaluation shows that Llama-Mimi\nachieves state-of-the-art performance in acoustic consistency and possesses the\nability to preserve speaker identity. Our analysis further demonstrates that\nincreasing the number of quantizers improves acoustic fidelity but degrades\nlinguistic performance, highlighting the inherent challenge of maintaining\nlong-term coherence. We additionally introduce an LLM-as-a-Judge-based\nevaluation to assess the spoken content quality of generated outputs. Our\nmodels, code, and speech samples are publicly available."}
{"id": "2509.14886", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14886", "abs": "https://arxiv.org/abs/2509.14886", "authors": ["Ye Shen", "Junying Wang", "Farong Wen", "Yijin Guo", "Qi Jia", "Zicheng Zhang", "Guangtao Zhai"], "title": "A Multi-To-One Interview Paradigm for Efficient MLLM Evaluation", "comment": "5 pages, 2 figures", "summary": "The rapid progress of Multi-Modal Large Language Models (MLLMs) has spurred\nthe creation of numerous benchmarks. However, conventional full-coverage\nQuestion-Answering evaluations suffer from high redundancy and low efficiency.\nInspired by human interview processes, we propose a multi-to-one interview\nparadigm for efficient MLLM evaluation. Our framework consists of (i) a\ntwo-stage interview strategy with pre-interview and formal interview phases,\n(ii) dynamic adjustment of interviewer weights to ensure fairness, and (iii) an\nadaptive mechanism for question difficulty-level chosen. Experiments on\ndifferent benchmarks show that the proposed paradigm achieves significantly\nhigher correlation with full-coverage results than random sampling, with\nimprovements of up to 17.6% in PLCC and 16.7% in SRCC, while reducing the\nnumber of required questions. These findings demonstrate that the proposed\nparadigm provides a reliable and efficient alternative for large-scale MLLM\nbenchmarking."}
{"id": "2509.14900", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14900", "abs": "https://arxiv.org/abs/2509.14900", "authors": ["Jiayi Han", "Liang Du", "Yinda Chen", "Xiao Kang", "Weiyang Ding", "Donghong Han"], "title": "FURINA: Free from Unmergeable Router via LINear Aggregation of mixed experts", "comment": "15 pages, 4 figures", "summary": "The Mixture of Experts (MoE) paradigm has been successfully integrated into\nLow-Rank Adaptation (LoRA) for parameter-efficient fine-tuning (PEFT),\ndelivering performance gains with minimal parameter overhead. However, a key\nlimitation of existing MoE-LoRA methods is their reliance on a discrete router,\nwhich prevents the integration of the MoE components into the backbone model.\nTo overcome this, we propose FURINA, a novel Free from Unmergeable Router\nframework based on the LINear Aggregation of experts. FURINA eliminates the\nrouter by introducing a Self-Routing mechanism. This is achieved through three\ncore innovations: (1) decoupled learning of the direction and magnitude for\nLoRA adapters, (2) a shared learnable magnitude vector for consistent\nactivation scaling, and (3) expert selection loss that encourages divergent\nexpert activation. The proposed mechanism leverages the angular similarity\nbetween the input and each adapter's directional component to activate experts,\nwhich are then scaled by the shared magnitude vector. This design allows the\noutput norm to naturally reflect the importance of each expert, thereby\nenabling dynamic, router-free routing. The expert selection loss further\nsharpens this behavior by encouraging sparsity and aligning it with standard\nMoE activation patterns. We also introduce a shared expert within the MoE-LoRA\nblock that provides stable, foundational knowledge. To the best of our\nknowledge, FURINA is the first router-free, MoE-enhanced LoRA method that can\nbe fully merged into the backbone model, introducing zero additional\ninference-time cost or complexity. Extensive experiments demonstrate that\nFURINA not only significantly outperforms standard LoRA but also matches or\nsurpasses the performance of existing MoE-LoRA methods, while eliminating the\nextra inference-time overhead of MoE."}
{"id": "2509.14922", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14922", "abs": "https://arxiv.org/abs/2509.14922", "authors": ["Kian Tohidi", "Kia Dashtipour", "Simone Rebora", "Sevda Pourfaramarz"], "title": "A Comparative Evaluation of Large Language Models for Persian Sentiment Analysis and Emotion Detection in Social Media Texts", "comment": "19 pages, 8 Figures, 9 Tables", "summary": "This study presents a comprehensive comparative evaluation of four\nstate-of-the-art Large Language Models (LLMs)--Claude 3.7 Sonnet, DeepSeek-V3,\nGemini 2.0 Flash, and GPT-4o--for sentiment analysis and emotion detection in\nPersian social media texts. Comparative analysis among LLMs has witnessed a\nsignificant rise in recent years, however, most of these analyses have been\nconducted on English language tasks, creating gaps in understanding\ncross-linguistic performance patterns. This research addresses these gaps\nthrough rigorous experimental design using balanced Persian datasets containing\n900 texts for sentiment analysis (positive, negative, neutral) and 1,800 texts\nfor emotion detection (anger, fear, happiness, hate, sadness, surprise). The\nmain focus was to allow for a direct and fair comparison among different\nmodels, by using consistent prompts, uniform processing parameters, and by\nanalyzing the performance metrics such as precision, recall, F1-scores, along\nwith misclassification patterns. The results show that all models reach an\nacceptable level of performance, and a statistical comparison of the best three\nmodels indicates no significant differences among them. However, GPT-4o\ndemonstrated a marginally higher raw accuracy value for both tasks, while\nGemini 2.0 Flash proved to be the most cost-efficient. The findings indicate\nthat the emotion detection task is more challenging for all models compared to\nthe sentiment analysis task, and the misclassification patterns can represent\nsome challenges in Persian language texts. These findings establish performance\nbenchmarks for Persian NLP applications and offer practical guidance for model\nselection based on accuracy, efficiency, and cost considerations, while\nrevealing cultural and linguistic challenges that require consideration in\nmultilingual AI system deployment."}
{"id": "2509.14926", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.14926", "abs": "https://arxiv.org/abs/2509.14926", "authors": ["Amirhossein Yousefiramandi", "Ciaran Cooney"], "title": "Patent Language Model Pretraining with ModernBERT", "comment": "7 pages, 2 figures, 4 tables", "summary": "Transformer-based language models such as BERT have become foundational in\nNLP, yet their performance degrades in specialized domains like patents, which\ncontain long, technical, and legally structured text. Prior approaches to\npatent NLP have primarily relied on fine-tuning general-purpose models or\ndomain-adapted variants pretrained with limited data. In this work, we pretrain\n3 domain-specific masked language models for patents, using the ModernBERT\narchitecture and a curated corpus of over 60 million patent records. Our\napproach incorporates architectural optimizations, including FlashAttention,\nrotary embeddings, and GLU feed-forward layers. We evaluate our models on four\ndownstream patent classification tasks. Our model, ModernBERT-base-PT,\nconsistently outperforms the general-purpose ModernBERT baseline on three out\nof four datasets and achieves competitive performance with a baseline\nPatentBERT. Additional experiments with ModernBERT-base-VX and\nMosaic-BERT-large demonstrate that scaling the model size and customizing the\ntokenizer further enhance performance on selected tasks. Notably, all\nModernBERT variants retain substantially faster inference over - 3x that of\nPatentBERT - underscoring their suitability for time-sensitive applications.\nThese results underscore the benefits of domain-specific pretraining and\narchitectural improvements for patent-focused NLP tasks."}
{"id": "2509.14930", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.14930", "abs": "https://arxiv.org/abs/2509.14930", "authors": ["Enzhi Wang", "Qicheng Li", "Zhiyuan Tang", "Yuhang Jia"], "title": "Cross-Modal Knowledge Distillation for Speech Large Language Models", "comment": null, "summary": "In this work, we present the first systematic evaluation of catastrophic\nforgetting and modality inequivalence in speech large language models, showing\nthat introducing speech capabilities can degrade knowledge and reasoning even\nwhen inputs remain textual, and performance further decreases with spoken\nqueries. To address these challenges, we propose a cross-modal knowledge\ndistillation framework that leverages both text-to-text and speech-to-text\nchannels to transfer knowledge from a text-based teacher model to a speech LLM.\nExtensive experiments on dialogue and audio understanding tasks validate the\neffectiveness of our approach in preserving textual knowledge, improving\ncross-modal alignment, and enhancing reasoning in speech-based interactions."}
{"id": "2509.14943", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.14943", "abs": "https://arxiv.org/abs/2509.14943", "authors": ["Alessandra Stramiglio", "Andrea Schimmenti", "Valentina Pasqual", "Marieke van Erp", "Francesco Sovrano", "Fabio Vitali"], "title": "Explicit vs. Implicit Biographies: Evaluating and Adapting LLM Information Extraction on Wikidata-Derived Texts", "comment": null, "summary": "Text Implicitness has always been challenging in Natural Language Processing\n(NLP), with traditional methods relying on explicit statements to identify\nentities and their relationships. From the sentence \"Zuhdi attends church every\nSunday\", the relationship between Zuhdi and Christianity is evident for a human\nreader, but it presents a challenge when it must be inferred automatically.\nLarge language models (LLMs) have proven effective in NLP downstream tasks such\nas text comprehension and information extraction (IE).\n  This study examines how textual implicitness affects IE tasks in pre-trained\nLLMs: LLaMA 2.3, DeepSeekV1, and Phi1.5. We generate two synthetic datasets of\n10k implicit and explicit verbalization of biographic information to measure\nthe impact on LLM performance and analyze whether fine-tuning implicit data\nimproves their ability to generalize in implicit reasoning tasks.\n  This research presents an experiment on the internal reasoning processes of\nLLMs in IE, particularly in dealing with implicit and explicit contexts. The\nresults demonstrate that fine-tuning LLM models with LoRA (low-rank adaptation)\nimproves their performance in extracting information from implicit texts,\ncontributing to better model interpretability and reliability."}
{"id": "2509.15020", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15020", "abs": "https://arxiv.org/abs/2509.15020", "authors": ["Mario Sanz-Guerrero", "Minh Duc Bui", "Katharina von der Wense"], "title": "Mind the Gap: A Closer Look at Tokenization for Multiple-Choice Question Answering with LLMs", "comment": "Accepted to EMNLP 2025 Main", "summary": "When evaluating large language models (LLMs) with multiple-choice question\nanswering (MCQA), it is common to end the prompt with the string \"Answer:\" to\nfacilitate automated answer extraction via next-token probabilities. However,\nthere is no consensus on how to tokenize the space following the colon, often\noverlooked as a trivial choice. In this paper, we uncover accuracy differences\nof up to 11% due to this (seemingly irrelevant) tokenization variation as well\nas reshuffled model rankings, raising concerns about the reliability of LLM\ncomparisons in prior work. Surprisingly, we are able to recommend one specific\nstrategy -- tokenizing the space together with the answer letter -- as we\nobserve consistent and statistically significant performance improvements.\nAdditionally, it improves model calibration, enhancing the reliability of the\nmodel's confidence estimates. Our findings underscore the importance of careful\nevaluation design and highlight the need for standardized, transparent\nevaluation protocols to ensure reliable and comparable results."}
{"id": "2509.15027", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.15027", "abs": "https://arxiv.org/abs/2509.15027", "authors": ["Thomas Huber", "Christina Niklaus"], "title": "CLEAR: A Comprehensive Linguistic Evaluation of Argument Rewriting by Large Language Models", "comment": "Accepted at EMNLP 2025 Findings", "summary": "While LLMs have been extensively studied on general text generation tasks,\nthere is less research on text rewriting, a task related to general text\ngeneration, and particularly on the behavior of models on this task. In this\npaper we analyze what changes LLMs make in a text rewriting setting. We focus\nspecifically on argumentative texts and their improvement, a task named\nArgument Improvement (ArgImp). We present CLEAR: an evaluation pipeline\nconsisting of 57 metrics mapped to four linguistic levels: lexical, syntactic,\nsemantic and pragmatic. This pipeline is used to examine the qualities of\nLLM-rewritten arguments on a broad set of argumentation corpora and compare the\nbehavior of different LLMs on this task and analyze the behavior of different\nLLMs on this task in terms of linguistic levels. By taking all four linguistic\nlevels into consideration, we find that the models perform ArgImp by shortening\nthe texts while simultaneously increasing average word length and merging\nsentences. Overall we note an increase in the persuasion and coherence\ndimensions."}
{"id": "2509.15038", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15038", "abs": "https://arxiv.org/abs/2509.15038", "authors": ["Ayan Sengupta", "Siddhant Chaudhary", "Tanmoy Chakraborty"], "title": "Value-Guided KV Compression for LLMs via Approximated CUR Decomposition", "comment": null, "summary": "Key-value (KV) cache compression has emerged as a critical technique for\nreducing the memory and latency overhead of autoregressive language models\nduring inference. Prior approaches predominantly rely on query-key attention\nscores to rank and evict cached tokens, assuming that attention intensity\ncorrelates with semantic importance. However, this heuristic overlooks the\ncontribution of value vectors, which directly influence the attention output.\nIn this paper, we propose CurDKV, a novel, value-centric KV compression method\nthat selects keys and values based on leverage scores computed from CUR matrix\ndecomposition. Our approach approximates the dominant subspace of the attention\noutput $softmax(QK^T)V$, ensuring that the retained tokens best preserve the\nmodel's predictive behavior. Theoretically, we show that attention score\napproximation does not guarantee output preservation, and demonstrate that\nCUR-based selection minimizes end-to-end attention reconstruction loss.\nEmpirically, CurDKV achieves up to 9.6% higher accuracy than state-of-the-art\nmethods like SnapKV and ChunkKV under aggressive compression budgets on LLaMA\nand Mistral, while maintaining compatibility with FlashAttention and Grouped\nQuery Attention. In addition to improved accuracy, CurDKV reduces generation\nlatency by up to 40% at high compression, offering a practical speed-accuracy\ntradeoff."}
{"id": "2509.15048", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15048", "abs": "https://arxiv.org/abs/2509.15048", "authors": ["Sumit Yadav", "Raju Kumar Yadav", "Utsav Maskey", "Gautam Siddharth Kashyap Md Azizul Hoque", "Ganesh Gautam"], "title": "Can maiBERT Speak for Maithili?", "comment": "Preprint", "summary": "Natural Language Understanding (NLU) for low-resource languages remains a\nmajor challenge in NLP due to the scarcity of high-quality data and\nlanguage-specific models. Maithili, despite being spoken by millions, lacks\nadequate computational resources, limiting its inclusion in digital and\nAI-driven applications. To address this gap, we introducemaiBERT, a BERT-based\nlanguage model pre-trained specifically for Maithili using the Masked Language\nModeling (MLM) technique. Our model is trained on a newly constructed Maithili\ncorpus and evaluated through a news classification task. In our experiments,\nmaiBERT achieved an accuracy of 87.02%, outperforming existing regional models\nlike NepBERTa and HindiBERT, with a 0.13% overall accuracy gain and 5-7%\nimprovement across various classes. We have open-sourced maiBERT on Hugging\nFace enabling further fine-tuning for downstream tasks such as sentiment\nanalysis and Named Entity Recognition (NER)."}
{"id": "2509.15089", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15089", "abs": "https://arxiv.org/abs/2509.15089", "authors": ["Hongyao Tu", "Liang Zhang", "Yujie Lin", "Xin Lin", "Haibo Zhang", "Long Zhang", "Jinsong Su"], "title": "LLM-OREF: An Open Relation Extraction Framework Based on Large Language Models", "comment": null, "summary": "The goal of open relation extraction (OpenRE) is to develop an RE model that\ncan generalize to new relations not encountered during training. Existing\nstudies primarily formulate OpenRE as a clustering task. They first cluster all\ntest instances based on the similarity between the instances, and then manually\nassign a new relation to each cluster. However, their reliance on human\nannotation limits their practicality. In this paper, we propose an OpenRE\nframework based on large language models (LLMs), which directly predicts new\nrelations for test instances by leveraging their strong language understanding\nand generation abilities, without human intervention. Specifically, our\nframework consists of two core components: (1) a relation discoverer (RD),\ndesigned to predict new relations for test instances based on\n\\textit{demonstrations} formed by training instances with known relations; and\n(2) a relation predictor (RP), used to select the most likely relation for a\ntest instance from $n$ candidate relations, guided by \\textit{demonstrations}\ncomposed of their instances. To enhance the ability of our framework to predict\nnew relations, we design a self-correcting inference strategy composed of three\nstages: relation discovery, relation denoising, and relation prediction. In the\nfirst stage, we use RD to preliminarily predict new relations for all test\ninstances. Next, we apply RP to select some high-reliability test instances for\neach new relation from the prediction results of RD through a cross-validation\nmethod. During the third stage, we employ RP to re-predict the relations of all\ntest instances based on the demonstrations constructed from these reliable test\ninstances. Extensive experiments on three OpenRE datasets demonstrate the\neffectiveness of our framework. We release our code at\nhttps://github.com/XMUDeepLIT/LLM-OREF.git."}
{"id": "2509.15098", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.15098", "abs": "https://arxiv.org/abs/2509.15098", "authors": ["Chenyue Zhou", "Gürkan Solmaz", "Flavio Cirillo", "Kiril Gashteovski", "Jonathan Fürst"], "title": "TextMine: LLM-Powered Knowledge Extraction for Humanitarian Mine Action", "comment": null, "summary": "Humanitarian Mine Action has generated extensive best-practice knowledge, but\nmuch remains locked in unstructured reports. We introduce TextMine, an\nontology-guided pipeline that uses Large Language Models to extract knowledge\ntriples from HMA texts. TextMine integrates document chunking, domain-aware\nprompting, triple extraction, and both reference-based and LLM-as-a-Judge\nevaluation. We also create the first HMA ontology and a curated dataset of\nreal-world demining reports. Experiments show ontology-aligned prompts boost\nextraction accuracy by 44.2%, cut hallucinations by 22.5%, and improve format\nconformance by 20.9% over baselines. While validated on Cambodian reports,\nTextMine can adapt to global demining efforts or other domains, transforming\nunstructured data into structured knowledge."}
{"id": "2509.15114", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15114", "abs": "https://arxiv.org/abs/2509.15114", "authors": ["Evelina Leivada", "Raquel Montero", "Paolo Morosi", "Natalia Moskvina", "Tamara Serrano", "Marcel Aguilar", "Fritz Guenther"], "title": "Large Language Model probabilities cannot distinguish between possible and impossible language", "comment": null, "summary": "A controversial test for Large Language Models concerns the ability to\ndiscern possible from impossible language. While some evidence attests to the\nmodels' sensitivity to what crosses the limits of grammatically impossible\nlanguage, this evidence has been contested on the grounds of the soundness of\nthe testing material. We use model-internal representations to tap directly\ninto the way Large Language Models represent the 'grammatical-ungrammatical'\ndistinction. In a novel benchmark, we elicit probabilities from 4 models and\ncompute minimal-pair surprisal differences, juxtaposing probabilities assigned\nto grammatical sentences to probabilities assigned to (i) lower frequency\ngrammatical sentences, (ii) ungrammatical sentences, (iii) semantically odd\nsentences, and (iv) pragmatically odd sentences. The prediction is that if\nstring-probabilities can function as proxies for the limits of grammar, the\nungrammatical condition will stand out among the conditions that involve\nlinguistic violations, showing a spike in the surprisal rates. Our results do\nnot reveal a unique surprisal signature for ungrammatical prompts, as the\nsemantically and pragmatically odd conditions consistently show higher\nsurprisal. We thus demonstrate that probabilities do not constitute reliable\nproxies for model-internal representations of syntactic knowledge.\nConsequently, claims about models being able to distinguish possible from\nimpossible language need verification through a different methodology."}
{"id": "2509.15148", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15148", "abs": "https://arxiv.org/abs/2509.15148", "authors": ["Jing Xiong", "Qiujiang Chen", "Fanghua Ye", "Zhongwei Wan", "Chuanyang Zheng", "Chenyang Zhao", "Hui Shen", "Alexander Hanbo Li", "Chaofan Tao", "Haochen Tan", "Haoli Bai", "Lifeng Shang", "Lingpeng Kong", "Ngai Wong"], "title": "A1: Asynchronous Test-Time Scaling via Conformal Prediction", "comment": "Tech Report", "summary": "Large language models (LLMs) benefit from test-time scaling, but existing\nmethods face significant challenges, including severe synchronization overhead,\nmemory bottlenecks, and latency, especially during speculative decoding with\nlong reasoning chains. We introduce A1 (Asynchronous Test-Time Scaling), a\nstatistically guaranteed adaptive inference framework that addresses these\nchallenges. A1 refines arithmetic intensity to identify synchronization as the\ndominant bottleneck, proposes an online calibration strategy to enable\nasynchronous inference, and designs a three-stage rejection sampling pipeline\nthat supports both sequential and parallel scaling. Through experiments on the\nMATH, AMC23, AIME24, and AIME25 datasets, across various draft-target model\nfamilies, we demonstrate that A1 achieves a remarkable 56.7x speedup in\ntest-time scaling and a 4.14x improvement in throughput, all while maintaining\naccurate rejection-rate control, reducing latency and memory overhead, and no\naccuracy loss compared to using target model scaling alone. These results\nposition A1 as an efficient and principled solution for scalable LLM inference.\nWe have released the code at\nhttps://github.com/menik1126/asynchronous-test-time-scaling."}
{"id": "2509.15174", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.15174", "abs": "https://arxiv.org/abs/2509.15174", "authors": ["Huy Nghiem", "Advik Sachdeva", "Hal Daumé III"], "title": "SMARTER: A Data-efficient Framework to Improve Toxicity Detection with Explanation via Self-augmenting Large Language Models", "comment": "NLP, Hate speech detection, explanation, LLM", "summary": "WARNING: This paper contains examples of offensive materials. Toxic content\nhas become pervasive on social media platforms. We introduce SMARTER, a\ndata-efficient two-stage framework for explainable content moderation using\nLarge Language Models (LLMs). In Stage 1, we leverage LLMs' own outputs to\ngenerate synthetic explanations for both correct and incorrect labels, enabling\nalignment via preference optimization with minimal human supervision. In Stage\n2, we refine explanation quality through cross-model training, allowing weaker\nmodels to align stylistically and semantically with stronger ones. Experiments\non three benchmark tasks -- HateXplain, Latent Hate, and Implicit Hate --\ndemonstrate that SMARTER enables LLMs to achieve up to a 13.5% macro-F1\nimprovement over standard few-shot baselines while using only a fraction of the\nfull training data. Our framework offers a scalable strategy for low-resource\nsettings by harnessing LLMs' self-improving capabilities for both\nclassification and explanation."}
{"id": "2509.15188", "categories": ["cs.CL", "cs.AI", "cs.LG", "68T50", "I.2.7"], "pdf": "https://arxiv.org/pdf/2509.15188", "abs": "https://arxiv.org/abs/2509.15188", "authors": ["Yeongbin Seo", "Dongha Lee", "Jaehyung Kim", "Jinyoung Yeo"], "title": "Fast and Fluent Diffusion Language Models via Convolutional Decoding and Rejective Fine-tuning", "comment": "NeurIPS 2025 spotlight", "summary": "Autoregressive (AR) language models generate text one token at a time, which\nlimits their inference speed. Diffusion-based language models offer a promising\nalternative, as they can decode multiple tokens in parallel. However, we\nidentify a key bottleneck in current diffusion LMs: the long decoding-window\nproblem, where tokens generated far from the input context often become\nirrelevant or repetitive. Previous solutions like semi-autoregressive address\nthis issue by splitting windows into blocks, but this sacrifices speed and\nbidirectionality, eliminating the main advantage of diffusion models. To\novercome this, we propose Convolutional decoding (Conv), a normalization-based\nmethod that narrows the decoding window without hard segmentation, leading to\nbetter fluency and flexibility. Additionally, we introduce Rejecting Rule-based\nFine-Tuning (R2FT), a post-hoc training scheme that better aligns tokens at\npositions far from context. Our methods achieve state-of-the-art results on\nopen-ended generation benchmarks (e.g., AlpacaEval) among diffusion LM\nbaselines, with significantly lower step size than previous works,\ndemonstrating both speed and quality improvements."}
{"id": "2509.15206", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15206", "abs": "https://arxiv.org/abs/2509.15206", "authors": ["Irina Proskurina", "Guillaume Metzler", "Julien Velcin"], "title": "Fair-GPTQ: Bias-Aware Quantization for Large Language Models", "comment": null, "summary": "High memory demands of generative language models have drawn attention to\nquantization, which reduces computational cost, memory usage, and latency by\nmapping model weights to lower-precision integers. Approaches such as GPTQ\neffectively minimize input-weight product errors during quantization; however,\nrecent empirical studies show that they can increase biased outputs and degrade\nperformance on fairness benchmarks, and it remains unclear which specific\nweights cause this issue. In this work, we draw new links between quantization\nand model fairness by adding explicit group-fairness constraints to the\nquantization objective and introduce Fair-GPTQ, the first quantization method\nexplicitly designed to reduce unfairness in large language models. The added\nconstraints guide the learning of the rounding operation toward less-biased\ntext generation for protected groups. Specifically, we focus on stereotype\ngeneration involving occupational bias and discriminatory language spanning\ngender, race, and religion. Fair-GPTQ has minimal impact on performance,\npreserving at least 90% of baseline accuracy on zero-shot benchmarks, reduces\nunfairness relative to a half-precision model, and retains the memory and speed\nbenefits of 4-bit quantization. We also compare the performance of Fair-GPTQ\nwith existing debiasing methods and find that it achieves performance on par\nwith the iterative null-space projection debiasing approach on\nracial-stereotype benchmarks. Overall, the results validate our theoretical\nsolution to the quantization problem with a group-bias term, highlight its\napplicability for reducing group bias at quantization time in generative\nmodels, and demonstrate that our approach can further be used to analyze\nchannel- and weight-level contributions to fairness during quantization."}
{"id": "2509.15211", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15211", "abs": "https://arxiv.org/abs/2509.15211", "authors": ["Petros Stylianos Giouroukis", "Dimitris Dimitriadis", "Dimitrios Papadopoulos", "Zhenwen Shao", "Grigorios Tsoumakas"], "title": "What's the Best Way to Retrieve Slides? A Comparative Study of Multimodal, Caption-Based, and Hybrid Retrieval Techniques", "comment": null, "summary": "Slide decks, serving as digital reports that bridge the gap between\npresentation slides and written documents, are a prevalent medium for conveying\ninformation in both academic and corporate settings. Their multimodal nature,\ncombining text, images, and charts, presents challenges for retrieval-augmented\ngeneration systems, where the quality of retrieval directly impacts downstream\nperformance. Traditional approaches to slide retrieval often involve separate\nindexing of modalities, which can increase complexity and lose contextual\ninformation. This paper investigates various methodologies for effective slide\nretrieval, including visual late-interaction embedding models like ColPali, the\nuse of visual rerankers, and hybrid retrieval techniques that combine dense\nretrieval with BM25, further enhanced by textual rerankers and fusion methods\nlike Reciprocal Rank Fusion. A novel Vision-Language Models-based captioning\npipeline is also evaluated, demonstrating significantly reduced embedding\nstorage requirements compared to visual late-interaction techniques, alongside\ncomparable retrieval performance. Our analysis extends to the practical aspects\nof these methods, evaluating their runtime performance and storage demands\nalongside retrieval efficacy, thus offering practical guidance for the\nselection and development of efficient and robust slide retrieval systems for\nreal-world applications."}
{"id": "2509.15216", "categories": ["cs.CL", "cs.CY"], "pdf": "https://arxiv.org/pdf/2509.15216", "abs": "https://arxiv.org/abs/2509.15216", "authors": ["Sreejato Chatterjee", "Linh Tran", "Quoc Duy Nguyen", "Roni Kirson", "Drue Hamlin", "Harvest Aquino", "Hanjia Lyu", "Jiebo Luo", "Timothy Dye"], "title": "Assessing Historical Structural Oppression Worldwide via Rule-Guided Prompting of Large Language Models", "comment": null, "summary": "Traditional efforts to measure historical structural oppression struggle with\ncross-national validity due to the unique, locally specified histories of\nexclusion, colonization, and social status in each country, and often have\nrelied on structured indices that privilege material resources while\noverlooking lived, identity-based exclusion. We introduce a novel framework for\noppression measurement that leverages Large Language Models (LLMs) to generate\ncontext-sensitive scores of lived historical disadvantage across diverse\ngeopolitical settings. Using unstructured self-identified ethnicity utterances\nfrom a multilingual COVID-19 global study, we design rule-guided prompting\nstrategies that encourage models to produce interpretable, theoretically\ngrounded estimations of oppression. We systematically evaluate these strategies\nacross multiple state-of-the-art LLMs. Our results demonstrate that LLMs, when\nguided by explicit rules, can capture nuanced forms of identity-based\nhistorical oppression within nations. This approach provides a complementary\nmeasurement tool that highlights dimensions of systemic exclusion, offering a\nscalable, cross-cultural lens for understanding how oppression manifests in\ndata-driven research and public health contexts. To support reproducible\nevaluation, we release an open-sourced benchmark dataset for assessing LLMs on\noppression measurement\n(https://github.com/chattergpt/llm-oppression-benchmark)."}
{"id": "2509.15218", "categories": ["cs.CL"], "pdf": "https://arxiv.org/pdf/2509.15218", "abs": "https://arxiv.org/abs/2509.15218", "authors": ["Ruijie Hou", "Yueyang Jiao", "Hanxu Hu", "Yingming Li", "Wai Lam", "Huajian Zhang", "Hongyuan Lu"], "title": "LNE-Blocking: An Efficient Framework for Contamination Mitigation Evaluation on Large Language Models", "comment": null, "summary": "The problem of data contamination is now almost inevitable during the\ndevelopment of large language models (LLMs), with the training data commonly\nintegrating those evaluation benchmarks even unintentionally. This problem\nsubsequently makes it hard to benchmark LLMs fairly. Instead of constructing\ncontamination-free datasets (quite hard), we propose a novel framework,\n\\textbf{LNE-Blocking}, to restore model performance prior to contamination on\npotentially leaked datasets. Our framework consists of two components:\ncontamination detection and disruption operation. For the prompt, the framework\nfirst uses the contamination detection method, \\textbf{LNE}, to assess the\nextent of contamination in the model. Based on this, it adjusts the intensity\nof the disruption operation, \\textbf{Blocking}, to elicit non-memorized\nresponses from the model. Our framework is the first to efficiently restore the\nmodel's greedy decoding performance. This comes with a strong performance on\nmultiple datasets with potential leakage risks, and it consistently achieves\nstable recovery results across different models and varying levels of data\ncontamination. We release the code at https://github.com/RuijieH/LNE-Blocking\nto facilitate research."}
{"id": "2509.14404", "categories": ["cs.SE", "cs.AI", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.14404", "abs": "https://arxiv.org/abs/2509.14404", "authors": ["Haoye Tian", "Chong Wang", "BoYang Yang", "Lyuye Zhang", "Yang Liu"], "title": "A Taxonomy of Prompt Defects in LLM Systems", "comment": null, "summary": "Large Language Models (LLMs) have become key components of modern software,\nwith prompts acting as their de-facto programming interface. However, prompt\ndesign remains largely empirical and small mistakes can cascade into\nunreliable, insecure, or inefficient behavior. This paper presents the first\nsystematic survey and taxonomy of prompt defects, recurring ways that prompts\nfail to elicit their intended behavior from LLMs. We organize defects along six\ndimensions: (1) Specification and Intent, (2) Input and Content, (3) Structure\nand Formatting, (4) Context and Memory, (5) Performance and Efficiency, and (6)\nMaintainability and Engineering. Each dimension is refined into fine-grained\nsubtypes, illustrated with concrete examples and root cause analysis. Grounded\nin software engineering principles, we show how these defects surface in real\ndevelopment workflows and examine their downstream effects. For every subtype,\nwe distill mitigation strategies that span emerging prompt engineering\npatterns, automated guardrails, testing harnesses, and evaluation frameworks.\nWe then summarize these strategies in a master taxonomy that links defect,\nimpact, and remedy. We conclude with open research challenges and a call for\nrigorous engineering-oriented methodologies to ensure that LLM-driven systems\nare dependable by design."}
