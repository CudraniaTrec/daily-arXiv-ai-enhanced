{"id": "2509.10572", "categories": ["cs.SE", "cs.AI", "cs.DB"], "pdf": "https://arxiv.org/pdf/2509.10572", "abs": "https://arxiv.org/abs/2509.10572", "authors": ["Ashlesha Akella", "Akshar Kaul", "Krishnasuri Narayanam", "Sameep Mehta"], "title": "Quality Assessment of Tabular Data using Large Language Models and Code Generation", "comment": "EMNLP industry track submitted", "summary": "Reliable data quality is crucial for downstream analysis of tabular datasets,\nyet rule-based validation often struggles with inefficiency, human\nintervention, and high computational costs. We present a three-stage framework\nthat combines statistical inliner detection with LLM-driven rule and code\ngeneration. After filtering data samples through traditional clustering, we\niteratively prompt LLMs to produce semantically valid quality rules and\nsynthesize their executable validators through code-generating LLMs. To\ngenerate reliable quality rules, we aid LLMs with retrieval-augmented\ngeneration (RAG) by leveraging external knowledge sources and domain-specific\nfew-shot examples. Robust guardrails ensure the accuracy and consistency of\nboth rules and code snippets. Extensive evaluations on benchmark datasets\nconfirm the effectiveness of our approach.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u7ed3\u5408\u7edf\u8ba1\u5f02\u5e38\u68c0\u6d4b\u548cLLM\u81ea\u52a8\u751f\u6210\u89c4\u5219\u4e0e\u4ee3\u7801\u7684\u6570\u636e\u8d28\u91cf\u5206\u6790\u6846\u67b6\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u3001\u77e5\u8bc6\u589e\u5f3a\u548c\u5b88\u62a4\u673a\u5236\u663e\u8457\u63d0\u5347\u4e86\u8868\u683c\u6570\u636e\u7684\u9a8c\u8bc1\u6548\u7387\u548c\u53ef\u9760\u6027\uff0c\u5e76\u5728\u5b9e\u9645\u6570\u636e\u96c6\u4e0a\u53d6\u5f97\u826f\u597d\u6548\u679c\u3002", "motivation": "\u73b0\u6709\u89c4\u5219\u57fa\u7840\u7684\u6570\u636e\u9a8c\u8bc1\u65b9\u6cd5\u5b58\u5728\u6548\u7387\u4f4e\u3001\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3001\u8ba1\u7b97\u6210\u672c\u9ad8\u7b49\u95ee\u9898\uff0c\u8feb\u5207\u9700\u8981\u66f4\u81ea\u52a8\u5316\u4e14\u53ef\u9760\u7684\u89e3\u51b3\u65b9\u6848\u7528\u4e8e\u8868\u683c\u6570\u636e\u8d28\u91cf\u5206\u6790\u3002", "method": "\u9996\u5148\u901a\u8fc7\u805a\u7c7b\u7b49\u4f20\u7edf\u7edf\u8ba1\u65b9\u6cd5\u8fc7\u6ee4\u5f02\u5e38\u6570\u636e\uff0c\u7136\u540e\u591a\u8f6e\u63d0\u793aLLM\u751f\u6210\u8bed\u4e49\u6709\u6548\u7684\u6570\u636e\u8d28\u91cf\u89c4\u5219\uff0c\u6700\u540e\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u578bLLM\u81ea\u52a8\u751f\u6210\u9a8c\u8bc1\u4ee3\u7801\uff0c\u5e76\u7528\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u548c\u9886\u57df\u7279\u5b9a\u7684\u5b9e\u4f8b\u8f85\u52a9\uff0c\u6700\u540e\u901a\u8fc7\u5b88\u62a4\u673a\u5236\u4fdd\u8bc1\u89c4\u5219\u548c\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\u3002", "result": "\u5728\u591a\u7ec4\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86\u5e7f\u6cdb\u8bc4\u4f30\uff0c\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u5728\u6570\u636e\u8d28\u91cf\u68c0\u6d4b\u4e0a\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u7ed3\u5408\u7edf\u8ba1\u65b9\u6cd5\u548c\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u4e09\u9636\u6bb5\u6570\u636e\u8d28\u91cf\u68c0\u6d4b\u6846\u67b6\uff0c\u80fd\u591f\u9ad8\u6548\u3001\u81ea\u52a8\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u6570\u636e\u9a8c\u8bc1\u89c4\u5219\u548c\u4ee3\u7801\u3002"}}
{"id": "2509.10649", "categories": ["cs.SE", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2509.10649", "abs": "https://arxiv.org/abs/2509.10649", "authors": ["Johan Cederbladh", "Loek Cleophas", "Eduard Kamburjan", "Lucas Lima", "Rakshit Mittal", "Hans Vangheluwe"], "title": "Reasonable Experiments in Model-Based Systems Engineering", "comment": null, "summary": "With the current trend in Model-Based Systems Engineering towards Digital\nEngineering and early Validation & Verification, experiments are increasingly\nused to estimate system parameters and explore design decisions. Managing such\nexperimental configuration metadata and results is of utmost importance in\naccelerating overall design effort. In particular, we observe it is important\nto 'intelligent-ly' reuse experiment-related data to save time and effort by\nnot performing potentially superfluous, time-consuming, and resource-intensive\nexperiments. In this work, we present a framework for managing experiments on\ndigital and/or physical assets with a focus on case-based reasoning with domain\nknowledge to reuse experimental data efficiently by deciding whether an\nalready-performed experiment (or associated answer) can be reused to answer a\nnew (potentially different) question from the engineer/user without having to\nset up and perform a new experiment. We provide the general architecture for\nsuch an experiment manager and validate our approach using an industrial\nvehicular energy system-design case study.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u53ef\u667a\u80fd\u590d\u7528\u5b9e\u9a8c\u6570\u636e\u7684\u7ba1\u7406\u6846\u67b6\uff0c\u7528\u4e8e\u63d0\u5347\u6570\u5b57\u5316\u5de5\u7a0b\u4e2d\u7684\u5b9e\u9a8c\u6548\u7387\u5e76\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\uff0c\u901a\u8fc7\u57fa\u4e8e\u6848\u4f8b\u63a8\u7406\u5224\u65ad\u5b9e\u9a8c\u7ed3\u679c\u53ef\u5426\u590d\u7528\uff0c\u5e76\u901a\u8fc7\u5b9e\u9645\u5de5\u4e1a\u6848\u4f8b\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002", "motivation": "\u968f\u7740\u6a21\u578b\u9a71\u52a8\u7cfb\u7edf\u5de5\u7a0b(MBSE)\u8d8b\u52bf\u5411\u6570\u5b57\u5316\u5de5\u7a0b\u53ca\u65e9\u671f\u9a8c\u8bc1\u4e0e\u786e\u8ba4\u63a8\u8fdb\uff0c\u5b9e\u9a8c\u7528\u4e8e\u4f30\u7b97\u7cfb\u7edf\u53c2\u6570\u548c\u63a2\u7d22\u8bbe\u8ba1\u51b3\u7b56\u53d8\u5f97\u65e5\u76ca\u91cd\u8981\u3002\u7136\u800c\uff0c\u5b9e\u9a8c\u914d\u7f6e\u5143\u6570\u636e\u53ca\u7ed3\u679c\u7684\u7ba1\u7406\u53d8\u5f97\u81f3\u5173\u91cd\u8981\uff0c\u5c24\u5176\u662f\u4e3a\u4e86\u52a0\u901f\u6574\u4f53\u8bbe\u8ba1\u5de5\u4f5c\u5e76\u907f\u514d\u4e0d\u5fc5\u8981\u4e14\u8d44\u6e90\u5bc6\u96c6\u578b\u7684\u5b9e\u9a8c\uff0c\u9700\u8981\u6709\u6548\u7ba1\u7406\u4e0e\u590d\u7528\u5b9e\u9a8c\u6570\u636e\u3002", "method": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5b9e\u9a8c\u7ba1\u7406\u6846\u67b6\uff0c\u91cd\u70b9\u57fa\u4e8e\u9886\u57df\u77e5\u8bc6\u8fdb\u884c\u57fa\u4e8e\u6848\u4f8b\u63a8\u7406\uff0c\u4ee5\u667a\u80fd\u5730\u590d\u7528\u5b9e\u9a8c\u6570\u636e\u3002\u8be5\u6846\u67b6\u80fd\u591f\u5224\u65ad\u65e2\u6709\u5b9e\u9a8c\uff08\u6216\u5176\u7ed3\u679c\uff09\u662f\u5426\u80fd\u7528\u4e8e\u56de\u7b54\u65b0\u7684\u5de5\u7a0b\u5e08\u6216\u7528\u6237\u63d0\u51fa\u7684\u95ee\u9898\uff0c\u65e0\u9700\u91cd\u65b0\u8fdb\u884c\u65b0\u7684\u5b9e\u9a8c\u3002\u540c\u65f6\uff0c\u4f5c\u8005\u7ed9\u51fa\u4e86\u6b64\u5b9e\u9a8c\u7ba1\u7406\u5668\u7684\u4e00\u822c\u67b6\u6784\uff0c\u5e76\u7528\u5de5\u4e1a\u8f66\u8f86\u80fd\u6e90\u7cfb\u7edf\u8bbe\u8ba1\u7684\u6848\u4f8b\u8fdb\u884c\u4e86\u9a8c\u8bc1\u3002", "result": "\u8be5\u6846\u67b6\u80fd\u591f\u6709\u6548\u7ba1\u7406\u548c\u590d\u7528\u5b9e\u9a8c\u5143\u6570\u636e\u53ca\u7ed3\u679c\uff0c\u901a\u8fc7\u667a\u80fd\u5224\u65ad\u5b9e\u9a8c\u7684\u590d\u7528\u6027\uff0c\u51cf\u5c11\u91cd\u590d\u5b9e\u9a8c\uff0c\u8282\u7701\u65f6\u95f4\u548c\u8d44\u6e90\u3002\u5de5\u4e1a\u5b9e\u4f8b\u9a8c\u8bc1\u4e86\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u5b9e\u9a8c\u7ba1\u7406\u4e0e\u667a\u80fd\u6570\u636e\u590d\u7528\u673a\u5236\u53ef\u52a0\u901f\u7cfb\u7edf\u8bbe\u8ba1\u6d41\u7a0b\uff0c\u63d0\u9ad8\u7814\u53d1\u6548\u7387\uff0c\u4e14\u6846\u67b6\u5177\u6709\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002"}}
{"id": "2509.10819", "categories": ["cs.SE", "cs.CR", "cs.PL"], "pdf": "https://arxiv.org/pdf/2509.10819", "abs": "https://arxiv.org/abs/2509.10819", "authors": ["Christoph Hochrainer", "Valentin W\u00fcstholz", "Maria Christakis"], "title": "Arguzz: Testing zkVMs for Soundness and Completeness Bugs", "comment": null, "summary": "Zero-knowledge virtual machines (zkVMs) are increasingly deployed in\ndecentralized applications and blockchain rollups since they enable verifiable\noff-chain computation. These VMs execute general-purpose programs, frequently\nwritten in Rust, and produce succinct cryptographic proofs. However, zkVMs are\ncomplex, and bugs in their constraint systems or execution logic can cause\ncritical soundness (accepting invalid executions) or completeness (rejecting\nvalid ones) issues.\n  We present Arguzz, the first automated tool for testing zkVMs for soundness\nand completeness bugs. To detect such bugs, Arguzz combines a novel variant of\nmetamorphic testing with fault injection. In particular, it generates\nsemantically equivalent program pairs, merges them into a single Rust program\nwith a known output, and runs it inside a zkVM. By injecting faults into the\nVM, Arguzz mimics malicious or buggy provers to uncover overly weak\nconstraints.\n  We used Arguzz to test six real-world zkVMs (RISC Zero, Nexus, Jolt, SP1,\nOpenVM, and Pico) and found eleven bugs in three of them. One RISC Zero bug\nresulted in a $50,000 bounty, despite prior audits, demonstrating the critical\nneed for systematic testing of zkVMs.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e13\u4e3azkVM\u8bbe\u8ba1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177Arguzz\uff0c\u80fd\u6709\u6548\u53d1\u73b0\u7ea6\u675f\u7cfb\u7edf\u53ca\u6267\u884c\u903b\u8f91\u4e2d\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u901a\u8fc7\u53d8\u5f62\u6d4b\u8bd5\u548c\u6545\u969c\u6ce8\u5165\u6280\u672f\uff0c\u5728\u591a\u4e2a\u4e3b\u6d41zkVM\u5b9e\u6d4b\u4e2d\u6210\u529f\u53d1\u73b0\u4e25\u91cd\u6f0f\u6d1e\uff0c\u5f3a\u8c03\u4e86\u6b64\u7c7b\u7cfb\u7edf\u5316\u6d4b\u8bd5\u5de5\u5177\u7684\u5b9e\u7528\u4ef7\u503c\u548c\u91cd\u8981\u6027\u3002", "motivation": "zkVM\u5728\u53bb\u4e2d\u5fc3\u5316\u5e94\u7528\u548c\u533a\u5757\u94fe\u4e2d\u5e7f\u6cdb\u5e94\u7528\uff0c\u7528\u4e8e\u5b9e\u73b0\u53ef\u9a8c\u8bc1\u7684\u94fe\u5916\u8ba1\u7b97\u3002\u7136\u800c\u590d\u6742\u6027\u9ad8\uff0c\u5b58\u5728\u7ea6\u675f\u7cfb\u7edf\u6216\u6267\u884c\u903b\u8f91\u4e2d\u7684\u91cd\u5927\u7f3a\u9677\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u6b63\u786e\u6027\u548c\u5b89\u5168\u6027\uff0c\u56e0\u6b64\u4e9f\u9700\u9ad8\u6548\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u65b9\u6cd5\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u53d8\u5f62\u6d4b\u8bd5\u548c\u6545\u969c\u6ce8\u5165\u7684\u65b0\u9896\u65b9\u6cd5\u5de5\u5177Arguzz\u3002\u5177\u4f53\u505a\u6cd5\u662f\u751f\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u7a0b\u5e8f\u5bf9\uff0c\u5c06\u5176\u5408\u5e76\u6210\u4e3a\u5355\u4e00Rust\u7a0b\u5e8f\u5e76\u5728zkVM\u5185\u8fd0\u884c\uff0c\u901a\u8fc7\u5411VM\u4e2d\u6ce8\u5165\u6545\u969c\uff0c\u6a21\u62df\u6076\u610f\u6216\u6709\u7f3a\u9677\u7684\u8bc1\u660e\u8005\uff0c\u4ee5\u6b64\u53d1\u73b0\u7ea6\u675f\u8fc7\u4e8e\u5bbd\u677e\u7684\u95ee\u9898\u3002", "result": "\u5229\u7528Arguzz\u6d4b\u8bd5\u4e86\u516d\u4e2a\u4e3b\u6d41zkVM\u7cfb\u7edf\uff08\u5982RISC Zero\u7b49\uff09\uff0c\u5728\u5176\u4e2d\u4e09\u6b3e\u4e2d\u53d1\u73b0\u4e86\u5341\u4e00\u4e2a\u6f0f\u6d1e\u3002\u5176\u4e2dRISC Zero\u7684\u4e00\u4e2a\u6f0f\u6d1e\u8fd8\u83b7\u5f97\u4e86$50,000\u8d4f\u91d1\uff0c\u867d\u7136\u6b64\u524d\u5df2\u7ecf\u7ecf\u8fc7\u5ba1\u8ba1\u3002", "conclusion": "Arguzz\u5c55\u793a\u4e86\u7cfb\u7edf\u5316\u81ea\u52a8\u5316\u6d4b\u8bd5zkVM\u7684\u5fc5\u8981\u6027\u4e0e\u6709\u6548\u6027\uff0c\u80fd\u53d1\u73b0\u6b64\u524d\u5ba1\u8ba1\u672a\u80fd\u53d1\u73b0\u7684\u5173\u952e\u6f0f\u6d1e\uff0c\u5bf9\u4fdd\u969c\u533a\u5757\u94fe\u5e94\u7528\u4e0erollup\u5b89\u5168\u6027\u6709\u91cd\u8981\u610f\u4e49\u3002"}}
{"id": "2509.10920", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2509.10920", "abs": "https://arxiv.org/abs/2509.10920", "authors": ["Guan-Yan Yang", "Farn Wang", "You-Zong Gu", "Ya-Wen Teng", "Kuo-Hui Yeh", "Ping-Hsueh Ho", "Wei-Ling Wen"], "title": "TPSQLi: Test Prioritization for SQL Injection Vulnerability Detection in Web Applications", "comment": "20 pages; 8 figures", "summary": "The rapid proliferation of network applications has led to a significant\nincrease in network attacks. According to the OWASP Top 10 Projects report\nreleased in 2021, injection attacks rank among the top three vulnerabilities in\nsoftware projects. This growing threat landscape has increased the complexity\nand workload of software testing, necessitating advanced tools to support agile\ndevelopment cycles. This paper introduces a novel test prioritization method\nfor SQL injection vulnerabilities to enhance testing efficiency. By leveraging\nprevious test outcomes, our method adjusts defense strength vectors for\nsubsequent tests, optimizing the testing workflow and tailoring defense\nmechanisms to specific software needs. This approach aims to improve the\neffectiveness and efficiency of vulnerability detection and mitigation through\na flexible framework that incorporates dynamic adjustments and considers the\ntemporal aspects of vulnerability exposure.", "AI": {"tldr": "\u9488\u5bf9\u6ce8\u5165\u653b\u51fb\u65e5\u76ca\u6210\u4e3a\u8f6f\u4ef6\u5b89\u5168\u91cd\u5927\u5a01\u80c1\u7684\u95ee\u9898\uff0c\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u57fa\u4e8e\u5386\u53f2\u6d4b\u8bd5\u7ed3\u679c\u52a8\u6001\u8c03\u6574\u9632\u5fa1\u5f3a\u5ea6\u7684SQL\u6ce8\u5165\u6f0f\u6d1e\u6d4b\u8bd5\u4f18\u5148\u7ea7\u65b9\u6cd5\uff0c\u63d0\u5347\u4e86\u68c0\u6d4b\u6548\u7387\u4e0e\u9632\u5fa1\u6548\u80fd\u3002", "motivation": "\u968f\u7740\u7f51\u7edc\u5e94\u7528\u6fc0\u589e\uff0c\u7f51\u7edc\u653b\u51fb\u663e\u8457\u589e\u591a\uff0c\u5c24\u5176\u662f\u6ce8\u5165\u653b\u51fb\u5df2\u6210\u4e3a\u8f6f\u4ef6\u5b89\u5168\u7684\u4e3b\u8981\u9690\u60a3\uff0c\u5bfc\u81f4\u6d4b\u8bd5\u590d\u6742\u6027\u53ca\u8d1f\u62c5\u663e\u8457\u63d0\u5347\uff0c\u4e9f\u9700\u9ad8\u6548\u7684\u6d4b\u8bd5\u65b9\u6cd5\u4ee5\u652f\u6301\u654f\u6377\u5f00\u53d1\u3002", "method": "\u5229\u7528\u524d\u4e00\u6b21\u6d4b\u8bd5\u7ed3\u679c\u52a8\u6001\u8c03\u6574\u540e\u7eed\u6d4b\u8bd5\u7684\u9632\u5fa1\u5f3a\u5ea6\uff0c\u5e76\u4f18\u5316\u6d4b\u8bd5\u6d41\u7a0b\uff0c\u6839\u636e\u4e0d\u540c\u8f6f\u4ef6\u9700\u6c42\u5b9a\u5236\u9632\u5fa1\u673a\u5236\u3002", "result": "\u6240\u63d0\u65b9\u6cd5\u80fd\u591f\u5728SQL\u6ce8\u5165\u6f0f\u6d1e\u6d4b\u8bd5\u4e2d\u5b9e\u73b0\u4f18\u5148\u7ea7\u6392\u5e8f\u548c\u52a8\u6001\u8c03\u8282\uff0c\u6709\u6548\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387\u548c\u6f0f\u6d1e\u53d1\u73b0\u7387\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684SQL\u6ce8\u5165\u6f0f\u6d1e\u6d4b\u8bd5\u7528\u4f8b\u4f18\u5148\u7ea7\u6392\u5e8f\u65b9\u6cd5\uff0c\u901a\u8fc7\u8c03\u6574\u540e\u7eed\u6d4b\u8bd5\u7684\u9632\u5fa1\u5f3a\u5ea6\u5411\u91cf\uff0c\u63d0\u5347\u4e86\u6f0f\u6d1e\u68c0\u6d4b\u4e0e\u9632\u5fa1\u7684\u6548\u7387\u3002"}}
{"id": "2509.11418", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.11418", "abs": "https://arxiv.org/abs/2509.11418", "authors": ["Runming Li", "Yue Yao", "Robert Harper"], "title": "Mechanizing Synthetic Tait Computability in Istari", "comment": null, "summary": "Categorical gluing is a powerful technique for proving meta-theorems of type\ntheories such as canonicity and normalization. Synthetic Tait Computability\n(STC) provides an abstract treatment of the complex gluing models by\ninternalizing the gluing category into a modal dependent type theory with a\nphase distinction. This work presents a mechanization of STC in the Istari\nproof assistant. Istari is a Martin-L\\\"{o}f-style extensional type theory with\nequality reflection. Equality reflection eliminates the nuisance of transport\nreasoning typically found in intensional proof assistants. This work develops a\nreusable library for synthetic phase distinction, including modalities,\nextension types, and strict glue types, and applies it to two case studies: (1)\na canonicity model for dependent type theory with dependent products and\nbooleans with large elimination, and (2) a Kripke canonicity model for the\ncost-aware logical framework. Our results demonstrate that the core STC\nconstructions can be formalized essentially verbatim in Istari, preserving the\nelegance of the on-paper arguments while ensuring machine-checked correctness.", "AI": {"tldr": "\u672c\u6587\u5728Istari\u8bc1\u660e\u52a9\u624b\u4e2d\u673a\u68b0\u5316\u4e86\u5408\u6210Tait\u53ef\u8ba1\u7b97\u6027\uff08STC\uff09\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e86\u9636\u6bb5\u533a\u5206\u3001\u6a21\u6001\u7b49\u6838\u5fc3\u6784\u9020\uff0c\u5e76\u5728\u4e24\u4e2a\u7c7b\u578b\u7406\u8bba\u89c4\u8303\u6027\u6a21\u578b\u4e2d\u9a8c\u8bc1\u5176\u6709\u6548\u6027\uff0c\u5f3a\u5316\u4e86\u7c7b\u578b\u7406\u8bba\u5143\u5b9a\u7406\u7684\u53ef\u5f62\u5f0f\u5316\u8bc1\u660e\u3002", "motivation": "\u8303\u7574\u62fc\u63a5\u662f\u7528\u4e8e\u8bc1\u660e\u7c7b\u578b\u7406\u8bba\u5143\u5b9a\u7406\uff08\u5982\u89c4\u8303\u6027\u4e0e\u5f52\u4e00\u5316\uff09\u7684\u6709\u529b\u5de5\u5177\u3002\u7136\u800c\uff0c\u62fc\u63a5\u6a21\u578b\u901a\u5e38\u5f88\u590d\u6742\u3002\u5408\u6210Tait\u53ef\u8ba1\u7b97\u6027\uff08STC\uff09\u901a\u8fc7\u5c06\u62fc\u63a5\u8303\u7574\u5185\u5316\u5230\u5e26\u6709\u9636\u6bb5\u533a\u5206\u7684\u6a21\u6001\u4f9d\u8d56\u7c7b\u578b\u7406\u8bba\u4e2d\uff0c\u4ee5\u62bd\u8c61\u624b\u6cd5\u5904\u7406\u8fd9\u4e9b\u6a21\u578b\u3002\u8be5\u5de5\u4f5c\u65e8\u5728\u673a\u68b0\u5316STC\uff0c\u63d0\u5347\u5f62\u5f0f\u5316\u8bc1\u660e\u4e0e\u91cd\u7528\u6027\u3002", "method": "\u4f5c\u8005\u5728Istari\u8bc1\u660e\u52a9\u624b\u4e2d\u673a\u68b0\u5316\u5b9e\u73b0STC\u3002Istari\u662f\u4e00\u79cd\u57fa\u4e8eMartin-L\u00f6f\u98ce\u683c\u7684\u5916\u5ef6\u7c7b\u578b\u7406\u8bba\uff0c\u652f\u6301\u7b49\u4ef7\u53cd\u5c04\uff08\u7b80\u5316\u4e86\u5f3a\u5236\u4f20\u9012\u63a8\u7406\uff09\u3002\u4f5c\u8005\u5f00\u53d1\u4e86\u4e00\u4e2a\u53ef\u91cd\u7528\u7684\u5408\u6210\u9636\u6bb5\u533a\u5206\u5e93\uff0c\u5305\u62ec\u6a21\u6001\u3001\u6269\u5c55\u7c7b\u578b\u548c\u4e25\u683c\u7c98\u5408\u7c7b\u578b\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u4e24\u4e2a\u6848\u4f8b\u7814\u7a76\uff1a1\uff09\u542b\u4f9d\u8d56\u79ef\u548c\u5927\u6d88\u53bb\u5e03\u5c14\u503c\u7684\u4f9d\u8d56\u7c7b\u578b\u7406\u8bba\u89c4\u8303\u6027\u6a21\u578b\uff1b2\uff09\u9762\u5411\u6210\u672c\u903b\u8f91\u6846\u67b6\u7684Kripke\u89c4\u8303\u6027\u6a21\u578b\u3002", "result": "\u4f5c\u8005\u8868\u660e\uff0c\u6838\u5fc3\u7684STC\u6784\u9020\u53ef\u4ee5\u5728Istari\u4e2d\u51e0\u4e4e\u539f\u6837\u5f62\u5f0f\u5316\uff0c\u673a\u5668\u6821\u9a8c\u4e0b\u80fd\u4fdd\u6301\u7eb8\u4e0a\u8bba\u8bc1\u7684\u4f18\u7f8e\u548c\u6b63\u786e\u6027\u3002", "conclusion": "STC\u7684\u6838\u5fc3\u7ed3\u6784\u53ef\u4ee5\u5728Istari\u8bc1\u660e\u52a9\u7406\u4e2d\u673a\u68b0\u5316\uff0c\u65e2\u786e\u4fdd\u4e86\u4f18\u96c5\u7684\u7406\u8bba\u7ed3\u6784\uff0c\u4e5f\u5b9e\u73b0\u4e86\u9ad8\u53ef\u9760\u6027\u7684\u673a\u68b0\u9a8c\u8bc1\u3002\u4f5c\u8005\u5f00\u53d1\u7684\u53ef\u91cd\u7528\u5e93\u4e3a\u5408\u6210\u7c7b\u578b\u7406\u8bba\u63d0\u4f9b\u4e86\u65b0\u5de5\u5177\uff0c\u5e76\u901a\u8fc7\u6848\u4f8b\u9a8c\u8bc1\u4e86\u5176\u5b9e\u7528\u6027\u548c\u6b63\u786e\u6027\u3002"}}
{"id": "2509.11877", "categories": ["cs.LO", "cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.11877", "abs": "https://arxiv.org/abs/2509.11877", "authors": ["Andrei Arusoaie", "Hora\u0163iu Cheval", "Radu Iosif"], "title": "Proceedings 9th edition of Working Formal Methods Symposium", "comment": null, "summary": "This volume contains the proceedings of the 9th Working Formal Methods\nSymposium, which was held at the Alexandru Ioan Cuza University, Ia\\c{s}i,\nRomania on September 17-19, 2025.", "AI": {"tldr": "\u7b2c\u4e5d\u5c4a\u5f62\u5f0f\u65b9\u6cd5\u7814\u8ba8\u4f1a\u5728\u7f57\u9a6c\u5c3c\u4e9a\u6210\u529f\u4e3e\u529e\uff0c\u8bba\u6587\u96c6\u5c55\u793a\u4e86\u8be5\u9886\u57df\u6700\u65b0\u7814\u7a76\u6210\u679c\uff0c\u5e76\u4fc3\u8fdb\u4e86\u5b66\u672f\u4ea4\u6d41\u3002", "motivation": "\u4fc3\u8fdb\u884c\u4e1a\u5b66\u672f\u4ea4\u6d41\uff0c\u63a8\u52a8\u5f62\u5f0f\u65b9\u6cd5\u9886\u57df\u7684\u6700\u65b0\u7814\u7a76\u8fdb\u5c55\uff0c\u6c47\u805a\u4e13\u5bb6\u5fc3\u5f97\uff0c\u5171\u540c\u63a2\u8ba8\u76f8\u5173\u6280\u672f\u3002", "method": "\u672c\u8bba\u6587\u91c7\u7528\u4f1a\u8bae\u8bba\u6587\u96c6\u7684\u7f16\u8f91\u4e0e\u6c47\u603b\u65b9\u5f0f\uff0c\u6536\u5f55\u4e86\u7814\u8ba8\u4f1a\u7684\u7814\u7a76\u8bba\u6587\u3002", "result": "\u8bba\u6587\u96c6\u5c55\u793a\u4e86\u672c\u9886\u57df\u6700\u65b0\u7684\u65b9\u6cd5\u548c\u6210\u679c\uff0c\u6269\u5c55\u4e86\u5b66\u672f\u89c6\u91ce\uff0c\u52a0\u5f3a\u4e86\u5b66\u8005\u95f4\u7684\u4ea4\u6d41\u4e0e\u5408\u4f5c\u3002", "conclusion": "\u672c\u6587\u732e\u96c6\u5df2\u6210\u529f\u4e3e\u529e\u7b2c\u4e5d\u5c4a\u5f62\u5f0f\u65b9\u6cd5\u7814\u8ba8\u4f1a\uff0c\u5e76\u6c47\u603b\u4e86\u76f8\u5173\u5b66\u672f\u7814\u7a76\u6210\u679c\u3002"}}
{"id": "2509.10546", "categories": ["cs.CL", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.10546", "abs": "https://arxiv.org/abs/2509.10546", "authors": ["Gang Cheng", "Haibo Jin", "Wenbin Zhang", "Haohan Wang", "Jun Zhuang"], "title": "Uncovering the Vulnerability of Large Language Models in the Financial Domain via Risk Concealment", "comment": "Preprint, under review. TL;DR: We propose a multi-turn red-teaming\n  framework, RCA, that reveals critical regulatory vulnerabilities in financial\n  LLMs, achieving over 93% attack success on a proposed new benchmark,\n  FIN-Bench", "summary": "Large Language Models (LLMs) are increasingly integrated into financial\napplications, yet existing red-teaming research primarily targets harmful\ncontent, largely neglecting regulatory risks. In this work, we aim to\ninvestigate the vulnerability of financial LLMs through red-teaming approaches.\nWe introduce Risk-Concealment Attacks (RCA), a novel multi-turn framework that\niteratively conceals regulatory risks to provoke seemingly compliant yet\nregulatory-violating responses from LLMs. To enable systematic evaluation, we\nconstruct FIN-Bench, a domain-specific benchmark for assessing LLM safety in\nfinancial contexts. Extensive experiments on FIN-Bench demonstrate that RCA\neffectively bypasses nine mainstream LLMs, achieving an average attack success\nrate (ASR) of 93.18%, including 98.28% on GPT-4.1 and 97.56% on OpenAI o1.\nThese findings reveal a critical gap in current alignment techniques and\nunderscore the urgent need for stronger moderation mechanisms in financial\ndomains. We hope this work offers practical insights for advancing robust and\ndomain-aware LLM alignment.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u98ce\u9669\u9690\u853d\u653b\u51fb\uff08RCA\uff09\u65b0\u6846\u67b6\uff0c\u63ed\u793a\u4e5d\u6b3e\u4e3b\u6d41\u91d1\u878d\u5927\u6a21\u578b\u5728\u76d1\u7ba1\u5408\u89c4\u65b9\u9762\u6613\u88ab\u7ed5\u8fc7\uff0c\u5e73\u5747\u653b\u51fb\u6210\u529f\u7387\u8fbe93%\u3002\u73b0\u6709\u6a21\u578b\u5408\u89c4\u9632\u62a4\u5b58\u5728\u4e25\u91cd\u7f3a\u9677\uff0c\u9700\u5c3d\u5feb\u52a0\u5f3a\u91d1\u878d\u5927\u6a21\u578b\u7684\u5ba1\u6838\u4e0e\u5bf9\u9f50\u3002", "motivation": "\u76ee\u524d\u5927\u6a21\u578b\u7684\u7ea2\u961f\u6d4b\u8bd5\u4e3b\u8981\u5173\u6ce8\u6709\u5bb3\u5185\u5bb9\uff0c\u5374\u5ffd\u89c6\u4e86\u91d1\u878d\u5e94\u7528\u4e2d\u7684\u5408\u89c4\u4e0e\u76d1\u7ba1\u98ce\u9669\u3002\u672c\u7814\u7a76\u65e8\u5728\u63ed\u793a\u91d1\u878d\u5927\u6a21\u578b\u5728\u5408\u89c4\u6027\u4e0a\u7684\u6f5c\u5728\u8106\u5f31\u6027\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u591a\u8f6e\u5bf9\u8bdd\u653b\u51fb\u6846\u67b6\u2014\u2014\u98ce\u9669\u9690\u853d\u653b\u51fb\uff08RCA\uff09\uff0c\u5e76\u6784\u5efa\u4e86\u91d1\u878d\u9886\u57df\u4e13\u7528\u6d4b\u8bd5\u96c6FIN-Bench\uff0c\u5bf9\u4e5d\u6b3e\u4e3b\u6d41\u5927\u6a21\u578b\u5728\u91d1\u878d\u5408\u89c4\u6027\u65b9\u9762\u8fdb\u884c\u7cfb\u7edf\u6027\u7ea2\u961f\u8bc4\u6d4b\u3002", "result": "RCA\u80fd\u4ee593.18%\u7684\u5e73\u5747\u653b\u51fb\u6210\u529f\u7387\u7ed5\u8fc7\u4e5d\u4e2a\u4e3b\u6d41\u91d1\u878d\u5927\u6a21\u578b\u7684\u76d1\u7ba1\u98ce\u9669\u68c0\u6d4b\uff0c\u4e2a\u522b\u6a21\u578b\u5982GPT-4.1\u6210\u529f\u7387\u9ad8\u8fbe98.28%\u3002\u8fd9\u66b4\u9732\u4e86\u73b0\u6709\u5bf9\u9f50\u6280\u672f\u7684\u91cd\u5927\u6f0f\u6d1e\u3002", "conclusion": "\u73b0\u6709\u7684\u5927\u6a21\u578b\u5bf9\u91d1\u878d\u9886\u57df\u7684\u5408\u89c4\u6027\u98ce\u9669\u9632\u62a4\u5b58\u5728\u660e\u663e\u4e0d\u8db3\uff0cRCA\u65b9\u6cd5\u80fd\u591f\u5927\u5e45\u7ed5\u8fc7\u4e3b\u6d41LLMs \u7684\u5408\u89c4\u673a\u5236\u3002\u9700\u8981\u66f4\u5f3a\u6709\u529b\u7684\u5ba1\u6838\u673a\u5236\u6765\u63d0\u5347\u91d1\u878d\u5927\u6a21\u578b\u7684\u5b89\u5168\u6027\u548c\u5408\u89c4\u6027\u3002"}}
{"id": "2509.10991", "categories": ["cs.DM", "G.2.1"], "pdf": "https://arxiv.org/pdf/2509.10991", "abs": "https://arxiv.org/abs/2509.10991", "authors": ["Jin-Yi Cai", "Ben Young"], "title": "Vanishing Signatures, Orbit Closure, and the Converse of the Holant Theorem", "comment": "32 pages, 10 figures", "summary": "Valiant's Holant theorem is a powerful tool for algorithms and reductions for\ncounting problems. It states that if two sets $\\mathcal{F}$ and $\\mathcal{G}$\nof tensors (a.k.a. constraint functions or signatures) are related by a\n\\emph{holographic transformation}, then $\\mathcal{F}$ and $\\mathcal{G}$ are\n\\emph{Holant-indistinguishable}, i.e., every tensor network using tensors from\n$\\mathcal{F}$, resp. from $\\mathcal{G}$, contracts to the same value. Xia\n(ICALP 2010) conjectured the converse of the Holant theorem, but a\ncounterexample was found based on \\emph{vanishing} signatures, those which are\nHolant-indistinguishable from 0.\n  We prove two near-converses of the Holant theorem using techniques from\ninvariant theory. (I) Holant-indistinguishable $\\mathcal{F}$ and $\\mathcal{G}$\nalways admit two sequences of holographic transformations mapping them\narbitrarily close to each other, i.e., their $\\text{GL}_q$-orbit closures\nintersect. (II) We show that vanishing signatures are the only true obstacle to\na converse of the Holant theorem. As corollaries of the two theorems we obtain\nthe first characterization of homomorphism-indistinguishability over graphs of\nbounded degree, a long standing open problem, and show that two graphs with\ninvertible adjacency matrices are isomorphic if and only if they are\nhomomorphism-indistinguishable over graphs with maximum degree at most three.\nWe also show that Holant-indistinguishability is complete for a complexity\nclass \\textbf{TOCI} introduced by Lysikov and Walter, and hence hard for graph\nisomorphism.", "AI": {"tldr": "\u672c\u6587\u7528\u4e0d\u53d8\u91cf\u7406\u8bba\u65b9\u6cd5\uff0c\u8bc1\u660eHolant\u5b9a\u7406\u9006\u5411\u8fd1\u4f3c\u6210\u7acb\uff0c\u53ea\u53d7\u6d88\u5931signatures\u963b\u788d\uff0c\u9996\u6b21\u89e3\u51b3\u4e86\u6709\u754c\u5ea6\u56fe\u540c\u6001\u4e0d\u53ef\u533a\u5206\u6027\u95ee\u9898\uff0c\u5e76\u63ed\u793a\u5176\u4e0e\u56fe\u540c\u6784\u590d\u6742\u6027\u7684\u7d27\u5bc6\u8054\u7cfb\u3002", "motivation": "Valiant\u7684Holant\u5b9a\u7406\u5728\u8ba1\u6570\u95ee\u9898\u7684\u7b97\u6cd5\u548c\u5f52\u7ea6\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u7406\u89e3\u5b83\u7684\u9006\u5b9a\u7406\u80fd\u591f\u8fdb\u4e00\u6b65\u63a8\u52a8\u8be5\u9886\u57df\u7684\u53d1\u5c55\uff0c\u4f46\u4e4b\u524d\u5173\u4e8e\u9006\u5b9a\u7406\u7684\u731c\u60f3\u5df2\u7ecf\u88ab\u53cd\u4f8b\u5426\u5b9a\u3002\u672c\u8bba\u6587\u65e8\u5728\u6f84\u6e05Holant\u5b9a\u7406\u9006\u7684\u53ef\u80fd\u6027\u53ca\u5176\u9650\u5236\u3002", "method": "\u4f5c\u8005\u5229\u7528\u4e0d\u53d8\u91cf\u7406\u8bba\u7684\u65b9\u6cd5\uff0c\u6784\u9020\u4e86\u4e24\u4e2a\u8fd1\u4f3c\u9006\u5b9a\u7406\uff0c\u901a\u8fc7\u5206\u6790\u5f20\u91cf\u7684GL_q\u8f68\u9053\u95ed\u5305\u548c\u6d88\u5931signatures\u6765\u523b\u753bHolant\u4e0d\u53ef\u533a\u5206\u6027\u3002", "result": "\u63d0\u51fa\u4e86\u4e24\u4e2aHolant\u5b9a\u7406\u7684\u8fd1\u4f3c\u9006\u547d\u9898\uff1a(1) Holant-\u4e0d\u53ef\u533a\u5206\u7684\u4e24\u4e2a\u7b7e\u540d\u96c6\u80fd\u591f\u901a\u8fc7\u5e8f\u5217\u7684\u5168\u606f\u53d8\u6362\u4e92\u76f8\u903c\u8fd1\uff0c\u5176GL_q\u8f68\u9053\u95ed\u5305\u76f8\u4ea4\uff1b(2) \u552f\u4e00\u963b\u788dHolant\u5b9a\u7406\u9006\u7684\u662f\u6d88\u5931\u7b7e\u540d\uff0c\u5e76\u636e\u6b64\u9996\u6b21\u523b\u753b\u4e86\u6709\u754c\u5ea6\u56fe\u7684\u540c\u6001\u4e0d\u53ef\u533a\u5206\u6027\u95ee\u9898\u3002\u6b64\u5916\uff0c\u8bc1\u660eHolant\u4e0d\u53ef\u533a\u5206\u6027\u5bf9\u4e8e\u590d\u6742\u6027\u7c7bTOCI\u662f\u5b8c\u5168\u7684\uff0c\u4ece\u800c\u4e0e\u56fe\u540c\u6784\u95ee\u9898\u7b49\u4ef7\u96be\u3002", "conclusion": "\u672c\u6587\u4e3aHolant\u5b9a\u7406\u7684\u9006\u95ee\u9898\u7ed9\u51fa\u7cbe\u786e\u523b\u753b\uff0c\u6f84\u6e05\u4e86\u6d88\u5931\u7b7e\u540d\u662f\u552f\u4e00\u969c\u788d\uff0c\u5e76\u9996\u6b21\u89e3\u51b3\u4e86\u6709\u754c\u5ea6\u56fe\u7684\u540c\u6001\u4e0d\u53ef\u533a\u5206\u6027\u5224\u522b\uff0c\u4e3a\u76f8\u5173\u8ba1\u6570\u590d\u6742\u6027\u548c\u56fe\u540c\u6784\u96be\u5ea6\u7684\u8054\u7cfb\u63d0\u4f9b\u4e86\u65b0\u89c6\u89d2\u3002"}}
{"id": "2509.12077", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2509.12077", "abs": "https://arxiv.org/abs/2509.12077", "authors": ["Yvo Ad Meeres", "Franti\u0161ek Mr\u00e1z"], "title": "A Unifying Approach to Picture Automata", "comment": "A full version of a paper for ITAT WAFNL 2025", "summary": "A directed acyclic graph (DAG) can represent a two-dimensional string or\npicture. We propose recognizing picture languages using DAG automata by\nencoding 2D inputs into DAGs. An encoding can be input-agnostic (based on input\nsize only) or input-driven (depending on symbols). Three distinct\ninput-agnostic encodings characterize classes of picture languages accepted by\nreturning finite automata, boustrophedon automata, and online tessellation\nautomata. Encoding a string as a simple directed path limits recognition to\nregular languages. However, input-driven encodings allow DAG automata to\nrecognize some context-sensitive string languages and outperform online\ntessellation automata in two dimensions.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u7528DAG\u81ea\u52a8\u673a\u901a\u8fc7\u4e0d\u540c\u7f16\u7801\uff08\u8f93\u5165\u65e0\u5173\u6216\u8f93\u5165\u9a71\u52a8\uff09\u6765\u8bc6\u522b\u4e8c\u7ef4\u56fe\u7247\u8bed\u8a00\uff0c\u8bc1\u660e\u8f93\u5165\u9a71\u52a8\u7f16\u7801\u80fd\u8bc6\u522b\u66f4\u590d\u6742\u7684\u8bed\u8a00\uff0c\u5e76\u8d85\u8d8a\u7ecf\u5178\u7684\u81ea\u52a8\u673a\u65b9\u6cd5\u3002", "motivation": "\u5e0c\u671b\u63d0\u9ad8\u5bf9\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6216\u56fe\u7247\u8bed\u8a00\u7684\u8bc6\u522b\u80fd\u529b\uff0c\u5229\u7528\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u8fdb\u884c\u66f4\u7075\u6d3b\u7684\u7f16\u7801\uff0c\u4ee5\u514b\u670d\u76ee\u524d\u81ea\u52a8\u673a\u65b9\u6cd5\u5728\u4e8c\u7ef4\u8f93\u5165\u5904\u7406\u4e0a\u7684\u9650\u5236\u3002", "method": "\u63d0\u51fa\u5c06\u4e8c\u7ef4\u8f93\u5165\u7f16\u7801\u4e3aDAG\uff0c\u5e76\u63d0\u51fa\u4e24\u7c7b\u7f16\u7801\u65b9\u6cd5\uff1a\u8f93\u5165\u65e0\u5173\u7f16\u7801\uff08\u4ec5\u57fa\u4e8e\u8f93\u5165\u5927\u5c0f\uff09\u548c\u8f93\u5165\u9a71\u52a8\u7f16\u7801\uff08\u4f9d\u8d56\u4e8e\u5177\u4f53\u7b26\u53f7\uff09\uff0c\u901a\u8fc7\u4e0d\u540cDAG\u7ed3\u6784\u5bf9\u5e94\u4e0d\u540c\u7c7b\u578b\u81ea\u52a8\u673a\uff0c\u7528\u4e8e\u8bc6\u522b\u4e0d\u540c\u7c7b\u522b\u7684\u56fe\u7247\u8bed\u8a00\u3002", "result": "\u8f93\u5165\u65e0\u5173\u7f16\u7801\u53ef\u5206\u522b\u523b\u753b\u51fa\u8fd4\u56de\u578b\u6709\u9650\u81ea\u52a8\u673a\u3001\u725b\u8015\u81ea\u52a8\u673a\u548c\u5728\u7ebf\u9576\u5d4c\u81ea\u52a8\u673a\u6240\u63a5\u53d7\u7684\u56fe\u7247\u8bed\u8a00\u7c7b\u3002\u5c06\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u7b80\u5355\u6709\u5411\u8def\u5f84\u4ec5\u80fd\u8bc6\u522b\u6b63\u89c4\u8bed\u8a00\uff0c\u800c\u8f93\u5165\u9a71\u52a8\u7f16\u7801\u5141\u8bb8DAG\u81ea\u52a8\u673a\u8bc6\u522b\u90e8\u5206\u4e0a\u4e0b\u6587\u76f8\u5173\u8bed\u8a00\uff0c\u5e76\u5728\u4e8c\u7ef4\u8bed\u8a00\u4e0a\u4f18\u4e8e\u5728\u7ebf\u9576\u5d4c\u81ea\u52a8\u673a\u3002", "conclusion": "\u5229\u7528DAG\u53ca\u5176\u7075\u6d3b\u7f16\u7801\u65b9\u5f0f\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u5bf9\u590d\u6742\u4e8c\u7ef4\u8f93\u5165\u8bed\u8a00\u7684\u8868\u8fbe\u80fd\u529b\u548c\u8bc6\u522b\u80fd\u529b\uff0c\u5c24\u5176\u8f93\u5165\u9a71\u52a8\u7f16\u7801\u5728\u8bc6\u522b\u9ad8\u7ea7\u8bed\u8a00\u65b9\u9762\u8868\u73b0\u4f18\u8d8a\u3002"}}
{"id": "2509.10946", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.10946", "abs": "https://arxiv.org/abs/2509.10946", "authors": ["Roberto Morabito", "Guanghan Wu"], "title": "When the Code Autopilot Breaks: Why LLMs Falter in Embedded Machine Learning", "comment": "This paper has been accepted for publication in Computer (IEEE). Upon\n  publication, the copyright will be transferred to IEEE", "summary": "Large Language Models (LLMs) are increasingly used to automate software\ngeneration in embedded machine learning workflows, yet their outputs often fail\nsilently or behave unpredictably. This article presents an empirical\ninvestigation of failure modes in LLM-powered ML pipelines, based on an\nautopilot framework that orchestrates data preprocessing, model conversion, and\non-device inference code generation. We show how prompt format, model behavior,\nand structural assumptions influence both success rates and failure\ncharacteristics, often in ways that standard validation pipelines fail to\ndetect. Our analysis reveals a diverse set of error-prone behaviors, including\nformat-induced misinterpretations and runtime-disruptive code that compiles but\nbreaks downstream. We derive a taxonomy of failure categories and analyze\nerrors across multiple LLMs, highlighting common root causes and systemic\nfragilities. Though grounded in specific devices, our study reveals broader\nchallenges in LLM-based code generation. We conclude by discussing directions\nfor improving reliability and traceability in LLM-powered embedded ML systems.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9 LLM \u81ea\u52a8\u751f\u6210\u5d4c\u5165\u5f0f\u673a\u5668\u5b66\u4e60\u4ee3\u7801\u7ecf\u5e38\u51fa\u73b0\u9759\u9ed8\u5931\u8d25\u7b49\u95ee\u9898\uff0c\u7cfb\u7edf\u5b9e\u8bc1\u5206\u6790\u4e86\u591a\u7c7b LLM \u7684\u5178\u578b\u5931\u8d25\u6a21\u5f0f\uff0c\u603b\u7ed3\u4e86\u901a\u7528\u5931\u6548\u7c7b\u522b\uff0c\u5e76\u63d0\u51fa\u4e86\u63d0\u5347 LLM \u751f\u6210\u4ee3\u7801\u53ef\u9760\u6027\u7684\u6539\u8fdb\u65b9\u5411\u3002", "motivation": "\u5c3d\u7ba1\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5df2\u88ab\u5e7f\u6cdb\u7528\u4e8e\u81ea\u52a8\u5316\u5d4c\u5165\u5f0f\u673a\u5668\u5b66\u4e60\u7684\u4ee3\u7801\u751f\u6210\uff0c\u4f46\u5176\u751f\u6210\u7684\u4ee3\u7801\u5e38\u5e38\u4f1a\u9759\u9ed8\u5931\u6548\u6216\u8868\u73b0\u51fa\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u7cfb\u7edf\u6027\u5256\u6790\u8fd9\u4e9b\u5931\u6548\u6a21\u5f0f\u4ee5\u63d0\u5347\u5176\u53ef\u9760\u6027\u3002", "method": "\u4f5c\u8005\u57fa\u4e8e\u4e00\u4e2a\u81ea\u52a8\u9a7e\u9a76\u6846\u67b6\uff0c\u901a\u8fc7\u5b9e\u9645 orchestrate \u6570\u636e\u9884\u5904\u7406\u3001\u6a21\u578b\u8f6c\u6362\u548c\u8bbe\u5907\u7aef\u63a8\u7406\u4ee3\u7801\u751f\u6210\u7684\u6d41\u7a0b\uff0c\u5b9e\u8bc1\u8c03\u7814 LLM \u9a71\u52a8\u7684\u5d4c\u5165\u5f0f ML \u7ba1\u9053\u4e2d\u5404\u79cd\u5931\u6548\u6a21\u5f0f\uff0c\u7cfb\u7edf\u5206\u6790 prompt \u683c\u5f0f\u3001\u6a21\u578b\u884c\u4e3a\u548c\u7ed3\u6784\u5047\u8bbe\u5bf9\u4ee3\u7801\u751f\u6210\u6210\u8d25\u7684\u5f71\u54cd\uff0c\u5e76\u5bf9\u591a\u79cd LLM \u7684\u9519\u8bef\u6848\u4f8b\u8fdb\u884c\u5206\u7c7b\u548c\u5f52\u56e0\u3002", "result": "\u5206\u6790\u63ed\u793a\u4e86\u591a\u6837\u7684\u5bb9\u6613\u51fa\u9519\u884c\u4e3a\uff0c\u5305\u62ec\u53d7\u683c\u5f0f\u5f71\u54cd\u7684\u8bef\u89e3\u3001\u7ed3\u6784\u4e0a\u5047\u8bbe\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u867d\u7136\u80fd\u591f\u7f16\u8bd1\u4f46\u4f1a\u5bfc\u81f4\u4e0b\u6e38\u5931\u6548\u7684\u4ee3\u7801\u3002\u6700\u7ec8\u5f62\u6210\u4e86\u5931\u6548\u7c7b\u578b\u7684\u5206\u7c7b\u4f53\u7cfb\uff0c\u5e76\u6307\u51fa\u4e86\u591a\u4e2a LLM \u5171\u6709\u7684\u6839\u672c\u6027\u8106\u5f31\u70b9\u3002", "conclusion": "\u73b0\u6709\u9a8c\u8bc1\u624b\u6bb5\u96be\u4ee5\u53d1\u73b0 LLM \u4ee3\u7801\u751f\u6210\u4e2d\u7684\u6df1\u5c42\u5931\u6548\u95ee\u9898\uff0c\u8be5\u7814\u7a76\u4e0d\u4ec5\u53d1\u73b0 LLM \u9a71\u52a8\u5d4c\u5165\u5f0f ML \u7cfb\u7edf\u5728\u53ef\u9760\u6027\u548c\u53ef\u8ffd\u6eaf\u6027\u4e0a\u5b58\u5728\u666e\u904d\u6311\u6218\uff0c\u8fd8\u4e3a\u540e\u7eed\u63d0\u9ad8 LLM \u9a71\u52a8\u7cfb\u7edf\u53ef\u9760\u6027\u548c\u53ef\u8ffd\u6eaf\u6027\u63d0\u4f9b\u4e86\u5efa\u8bae\u548c\u65b9\u5411\u3002"}}
{"id": "2509.11901", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2509.11901", "abs": "https://arxiv.org/abs/2509.11901", "authors": ["Kentaro Kobayashi", "Yukiyoshi Kameyama"], "title": "Expressive Power of One-Shot Control Operators and Coroutines", "comment": "Full version of the paper accepted at APLAS 2025. Includes appendices\n  with proofs. 59 pages", "summary": "Control operators, such as exceptions and effect handlers, provide a means of\nrepresenting computational effects in programs abstractly and modularly. While\nmost theoretical studies have focused on multi-shot control operators, one-shot\ncontrol operators -- which restrict the use of captured continuations to at\nmost once -- are gaining attention for their balance between expressiveness and\nefficiency. This study aims to fill the gap. We present a mathematically\nrigorous comparison of the expressive power among one-shot control operators,\nincluding effect handlers, delimited continuations, and even asymmetric\ncoroutines. Following previous studies on multi-shot control operators, we\nadopt Felleisen's macro-expressiveness as our measure of expressiveness. We\nverify the folklore that one-shot effect handlers and one-shot\ndelimited-control operators can be macro-expressed by asymmetric coroutines,\nbut not vice versa. We explain why a previous informal argument fails, and how\nto revise it to make a valid macro-translation.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5bf9\u4e00\u7c7b\u79f0\u4e3a\u201cone-shot\u201d\u63a7\u5236\u64cd\u4f5c\u7b26\uff08\u5305\u62ec\u6548\u679c\u5904\u7406\u5668\u3001\u6709\u754c\u5ef6\u7eed\u3001\u975e\u5bf9\u79f0\u534f\u7a0b\u7b49\uff09\u7684\u8868\u8fbe\u80fd\u529b\u8fdb\u884c\u4e86\u7406\u8bba\u5c42\u9762\u7684\u6bd4\u8f83\u548c\u5206\u7c7b\u3002", "motivation": "\u5c3d\u7ba1\u201cmulti-shot\u201d\u63a7\u5236\u64cd\u4f5c\u7b26\u5df2\u83b7\u5f97\u5e7f\u6cdb\u7684\u7406\u8bba\u7814\u7a76\uff0c\u4f46\u5b9e\u9645\u5de5\u7a0b\u5b9e\u73b0\u548c\u6548\u7387\u9700\u6c42\u63a8\u52a8\u4e86\u5bf9\u201cone-shot\u201d\u64cd\u4f5c\u7b26\u7684\u5173\u6ce8\u3002one-shot\u64cd\u4f5c\u7b26\u5728\u8868\u73b0\u529b\u548c\u6267\u884c\u6548\u7387\u4e0a\u8fbe\u6210\u5e73\u8861\uff0c\u4f46\u5176\u6b63\u5f0f\u7684\u8868\u8fbe\u80fd\u529b\u5173\u7cfb\u5c1a\u672a\u88ab\u4e25\u683c\u5206\u6790\uff0c\u56e0\u6b64\u8be5\u7814\u7a76\u586b\u8865\u4e86\u8be5\u7a7a\u767d\u3002", "method": "\u91c7\u7528Felleisen\u63d0\u51fa\u7684\u5b8f\u8868\u8fbe\u6027\u4f5c\u4e3a\u8868\u8fbe\u80fd\u529b\u7684\u5ea6\u91cf\u65b9\u6cd5\uff0c\u5bf9\u6bd4\u4e86\u5404\u79cdone-shot\u63a7\u5236\u64cd\u4f5c\u7b26\u95f4\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5e76\u5bf9\u4e4b\u524d\u7684\u975e\u6b63\u5f0f\u8bba\u8bc1\u8fdb\u884c\u4fee\u6b63\uff0c\u7ed9\u51fa\u4e86\u89c4\u8303\u7684\u5b8f\u8f6c\u6362\u8bc1\u660e\u6d41\u7a0b\u3002", "result": "\u5f62\u5f0f\u5316\u5730\u6bd4\u8f83\u4e86\u4e00\u7cfb\u5217one-shot\u63a7\u5236\u64cd\u4f5c\u7b26\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u6f84\u6e05\u4e86one-shot\u6548\u679c\u5904\u7406\u5668\u3001\u6709\u754c\u5ef6\u7eed\u4e0e\u975e\u5bf9\u79f0\u534f\u7a0b\u4e4b\u95f4\u7684\u8868\u8fbe\u5173\u7cfb\uff0c\u540c\u65f6\u7ea0\u6b63\u4e86\u4e4b\u524d\u76f8\u5173\u975e\u6b63\u5f0f\u63a8\u7406\u7684\u7f3a\u9677\uff0c\u7ed9\u51fa\u66f4\u4e25\u5bc6\u7684\u7406\u8bba\u652f\u6491\u3002", "conclusion": "\u8bba\u6587\u8bc1\u660e\uff1aone-shot\u6548\u679c\u5904\u7406\u5668\u548cdelimited continuations\u90fd\u53ef\u4ee5\u901a\u8fc7\u975e\u5bf9\u79f0\u534f\u7a0b\u4ee5\u5b8f\u65b9\u5f0f\u8868\u8fbe\uff08macro-expressed\uff09\uff0c\u4f46\u53cd\u4e4b\u4e0d\u6210\u7acb\uff08\u5373\u975e\u5bf9\u79f0\u534f\u7a0b\u8868\u8fbe\u80fd\u529b\u66f4\u5f3a\uff09\u3002"}}
{"id": "2410.04581", "categories": ["cs.PL", "cs.DS", "cs.LO", "cs.SE"], "pdf": "https://arxiv.org/pdf/2410.04581", "abs": "https://arxiv.org/abs/2410.04581", "authors": ["Lee Zheng Han", "Umang Mathur"], "title": "Efficient Decrease-and-Conquer Linearizability Monitoring", "comment": null, "summary": "Linearizability has become the de facto correctness specification for\nimplementations of concurrent data structures. While formally verifying such\nimplementations remains challenging, linearizability monitoring has emerged as\na promising first step to rule out early problems in the development of custom\nimplementations, and serves as a key component in approaches that stress test\nsuch implementations. In this work, we investigate linearizability monitoring\n-- check if an execution history of an implementation is linearizable. While\nthis problem is intractable in general, a systematic understanding of when it\nbecomes tractable has remained elusive. We revisit this problem and first\npresent a unified `decrease-and-conquer' algorithmic framework for\nlinearizability monitoring. At its heart, this framework asks to identify\nspecial linearizability-preserving values in a given history -- values whose\npresence yields an equilinearizable sub-history when removed, and whose absence\nindicates non-linearizability. We prove that a polynomial time algorithm for\nthe problem of identifying linearizability-preserving values, yields a\npolynomial time algorithm for linearizability monitoring, while conversely,\nintractability of this problem implies intractability of the monitoring\nproblem. We demonstrate our framework's effectiveness by instantiating it for\nseveral popular data types -- sets, stacks, queues and priority queues --\nderiving polynomial time algorithms for each, with the unambiguity restriction,\nwhere each insertion to the underlying data structure adds a distinct value. We\noptimize these algorithms to achieve the optimal log-linear time complexity by\namortizing the cost of solving sub-problems through efficient data structures.\nOur implementation and evaluation on publicly available implementations show\nthat our approach scales to large histories and outperforms existing tools.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u7ebf\u6027\u5316\u76d1\u63a7\u7b97\u6cd5\u6846\u67b6\uff0c\u9996\u6b21\u7edf\u4e00\u3001\u6709\u6548\u5730\u89e3\u51b3\u4e86\u5bf9\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5927\u89c4\u6a21\u7ebf\u6027\u5316\u68c0\u6d4b\u7684\u6548\u7387\u4e0e\u53ef\u6269\u5c55\u6027\u95ee\u9898\uff0c\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u5de5\u5177\u3002", "motivation": "\u7ebf\u6027\u5316\uff08linearizability\uff09\u5df2\u7ecf\u6210\u4e3a\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u7684\u4e8b\u5b9e\u6807\u51c6\u6b63\u786e\u6027\u89c4\u8303\u3002\u7136\u800c\uff0c\u5f62\u5f0f\u5316\u9a8c\u8bc1\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u6b64\u7ebf\u6027\u5316\u76d1\u63a7\u6210\u4e3a\u5f00\u53d1\u81ea\u5b9a\u4e49\u5b9e\u73b0\u65f6\u6392\u9664\u65e9\u671f\u95ee\u9898\u548c\u538b\u529b\u6d4b\u8bd5\u7684\u5173\u952e\u5de5\u5177\u3002\u6b64\u524d\uff0c\u4f55\u65f6\u7ebf\u6027\u5316\u76d1\u63a7\u95ee\u9898\u53ef\u53d8\u5f97\u6613\u5904\u7406\u5c1a\u4e0d\u660e\u6670\u3002", "method": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u201c\u51cf\u800c\u6cbb\u4e4b\u201d\uff08decrease-and-conquer\uff09\u7b97\u6cd5\u6846\u67b6\uff0c\u901a\u8fc7\u8bc6\u522b\u5386\u53f2\u4e2d\u4fdd\u6301\u7ebf\u6027\u5316\u7684\u7279\u6b8a\u503c\u2014\u2014\u5373\u79fb\u9664\u540e\u53ef\u7ef4\u6301\u7ebf\u6027\u5316\u5b50\u5386\u53f2\u7684\u503c\u3002\u8bc1\u660e\u4e86\u5bf9\u8be5\u503c\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u8bc6\u522b\u7b97\u6cd5\u80fd\u5e26\u6765\u7ebf\u6027\u5316\u76d1\u63a7\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u3002\u4f5c\u8005\u8fd8\u5c06\u8be5\u6846\u67b6\u7528\u4e8e\u96c6\u5408\u3001\u6808\u3001\u961f\u5217\u548c\u4f18\u5148\u961f\u5217\u7b49\u70ed\u95e8\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\u63a8\u5bfc\u51fa\u6700\u4f18\u7684\u5bf9\u6570\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u6cd5\u3002", "result": "\u8be5\u6846\u67b6\u9488\u5bf9\u5177\u5907\u4e0d\u6b67\u4e49\u6027\uff08\u6bcf\u6b21\u63d2\u5165\u4e3a\u552f\u4e00\u503c\uff09\u9650\u5236\u7684\u6570\u636e\u7c7b\u578b\uff0c\u63a8\u5bfc\u4e86\u96c6\u5408\u3001\u6808\u3001\u961f\u5217\u548c\u4f18\u5148\u961f\u5217\u7b49\u60c5\u51b5\u4e0b\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u751a\u81f3\u6700\u4f18\u5bf9\u6570\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u6cd5\u3002\u5b9e\u9a8c\u8bc1\u660e\u65b9\u6cd5\u80fd\u5904\u7406\u5927\u578b\u5386\u53f2\u5e76\u4f18\u4e8e\u73b0\u6709\u5de5\u5177\u3002", "conclusion": "\u4f5c\u8005\u63d0\u51fa\u4e86\u7edf\u4e00\u3001\u7cfb\u7edf\u3001\u53ef\u9ad8\u6548\u5b9e\u73b0\u7684\u7ebf\u6027\u5316\u76d1\u63a7\u7b97\u6cd5\u6846\u67b6\uff0c\u5728\u591a\u4e2a\u4e3b\u6d41\u6570\u636e\u7ed3\u6784\u4e2d\u5747\u8fbe\u5230\u4e86\u7406\u8bba\u4e0a\u548c\u5b9e\u8df5\u4e0a\u7684\u4f18\u826f\u6027\u80fd\uff0c\u6709\u52a9\u4e8e\u63d0\u5347\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u6b63\u786e\u6027\u68c0\u6d4b\u7684\u5b9e\u7528\u6027\u548c\u89c4\u6a21\u5316\u80fd\u529b\u3002"}}
