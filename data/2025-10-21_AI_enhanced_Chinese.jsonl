{"id": "2510.17386", "categories": ["cs.FL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.17386", "abs": "https://arxiv.org/abs/2510.17386", "authors": ["Elaheh Hosseinkhani", "Martin Leucker"], "title": "Inference of Deterministic Finite Automata via Q-Learning", "comment": null, "summary": "Traditional approaches to inference of deterministic finite-state automata\n(DFA) stem from symbolic AI, including both active learning methods (e.g.,\nAngluin's L* algorithm and its variants) and passive techniques (e.g., Biermann\nand Feldman's method, RPNI). Meanwhile, sub-symbolic AI, particularly machine\nlearning, offers alternative paradigms for learning from data, such as\nsupervised, unsupervised, and reinforcement learning (RL). This paper\ninvestigates the use of Q-learning, a well-known reinforcement learning\nalgorithm, for the passive inference of deterministic finite automata. It\nbuilds on the core insight that the learned Q-function, which maps state-action\npairs to rewards, can be reinterpreted as the transition function of a DFA over\na finite domain. This provides a novel bridge between sub-symbolic learning and\nsymbolic representations. The paper demonstrates how Q-learning can be adapted\nfor automaton inference and provides an evaluation on several examples.", "AI": {"tldr": "\u672c\u6587\u521b\u65b0\u6027\u5730\u5c06\u5f3a\u5316\u5b66\u4e60Q-learning\u65b9\u6cd5\u7528\u4e8e\u88ab\u52a8DFA\u63a8\u65ad\uff0c\u5c06Q\u51fd\u6570\u8f6c\u5316\u4e3a\u81ea\u52a8\u673a\u7684\u8f6c\u79fb\u51fd\u6570\uff0c\u5b9e\u9a8c\u8bc1\u660e\u65b9\u6cd5\u6709\u6548\uff0c\u4e3a\u673a\u5668\u5b66\u4e60\u4e0e\u7b26\u53f7\u63a8\u7406\u7ed3\u5408\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002", "motivation": "\u73b0\u6709DFA\uff08\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff09\u63a8\u65ad\u65b9\u6cd5\u5927\u591a\u6e90\u81ea\u7b26\u53f7AI\uff0c\u5305\u62ec\u4e3b\u52a8\u5b66\u4e60\uff08\u5982Angluin\u7684L*\u7b97\u6cd5\uff09\u548c\u88ab\u52a8\u5b66\u4e60\u65b9\u6cd5\uff1b\u800c\u5b50\u7b26\u53f7AI\u5c24\u5176\u662f\u673a\u5668\u5b66\u4e60\u63d0\u4f9b\u4e86\u65b0\u7684\u4ece\u6570\u636e\u5b66\u4e60\u8303\u5f0f\u3002\u672c\u7814\u7a76\u7684\u52a8\u673a\u662f\u63a2\u7d22\u5c06\u5f3a\u5316\u5b66\u4e60\uff08Q-learning\uff09\u5e94\u7528\u4e8eDFA\u88ab\u52a8\u63a8\u65ad\u7684\u53ef\u80fd\u6027\uff0c\u5e76\u5c1d\u8bd5\u5efa\u7acb\u5b50\u7b26\u53f7\u5b66\u4e60\u4e0e\u7b26\u53f7\u63a8\u65ad\u4e4b\u95f4\u7684\u6865\u6881\u3002", "method": "\u672c\u7814\u7a76\u63d0\u51fa\u4f7f\u7528Q-learning\uff08\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u77e5\u540d\u7b97\u6cd5\uff09\u8fdb\u884cDFA\u7684\u88ab\u52a8\u63a8\u65ad\u3002\u4f5c\u8005\u5c06Q\u51fd\u6570\uff08\u72b6\u6001-\u52a8\u4f5c\u5bf9\u5230\u5956\u52b1\u7684\u6620\u5c04\uff09\u91cd\u65b0\u89e3\u91ca\u4e3aDFA\u7684\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\uff0c\u5e76\u5bf9\u6b64\u8fdb\u884c\u4e86\u7b97\u6cd5\u9002\u914d\u4e0e\u5b9e\u73b0\u3002", "result": "\u901a\u8fc7\u5b9e\u9a8c\u8bc1\u660eQ-learning\u5728\u82e5\u5e72DFA\u63a8\u65ad\u793a\u4f8b\u4e0a\u53ef\u4ee5\u6709\u6548\u5de5\u4f5c\uff0c\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u7684\u53ef\u884c\u6027\u548c\u521b\u65b0\u6027\u3002", "conclusion": "Q-learning\u53ef\u5e94\u7528\u4e8eDFA\u7684\u88ab\u52a8\u63a8\u65ad\uff0c\u5e76\u80fd\u81ea\u7136\u5730\u5c06\u5b66\u4e60\u5230\u7684Q\u51fd\u6570\u8f6c\u5316\u4e3aDFA\u7684\u8f6c\u79fb\u51fd\u6570\uff0c\u5b9e\u73b0\u5b50\u7b26\u53f7\u65b9\u6cd5\u4e0e\u7b26\u53f7\u77e5\u8bc6\u8868\u5f81\u7684\u7ed3\u5408\u3002"}}
{"id": "2510.17438", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2510.17438", "abs": "https://arxiv.org/abs/2510.17438", "authors": ["Christian Hercher"], "title": "Castor Ministerialis", "comment": null, "summary": "The famous problem of Busy Beavers can be stated as the question on how long\na $n$-state Turing machine (using a 2-symbol alphabet or -- in a generalization\n-- a $m$-symbol alphabet) can run if it is started on the blank tape before it\nholds. Thus, not halting Turing machines are excluded. For up to four states\nthe answer to this question is well-known. Recently, it could be verified that\nthe widely assumed candidate for five states is in fact the champion. And there\nis progress in searching for good candidates with six or more states.\n  We investigate a variant of this problem: Additionally to the requirement\nthat the Turing machines have to start from the blank tape we only consider\nsuch Turing machines that hold on the blank tape, too. For this variant we give\ndefinitive answers on how long such a Turing machine with up to five states can\nrun, analyze the behavior of a six-states candidate and give some findings on\nthe generalization of Turing-machines with $m$-symbol alphabet.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4fee\u6b63\u7248busy beaver\u95ee\u9898\uff0c\u5373\u4ece\u7a7a\u767d\u5e26\u8d77\u59cb\u4e14\u5728\u7a7a\u767d\u5e26\u7ec8\u6b62\u7684\u56fe\u7075\u673a\uff0c\u5168\u9762\u89e3\u51b3\u4e865\u72b6\u6001\u5185\u7684\u6700\u5927\u6b65\u6570\u95ee\u9898\uff0c\u5206\u6790\u4e866\u72b6\u6001\u5019\u9009\uff0c\u5e76\u90e8\u5206\u8ba8\u8bba\u4e86\u591a\u7b26\u53f7\u60c5\u5f62\u3002", "motivation": "\u539f\u59cb\u7684busy beaver\u95ee\u9898\u4ec5\u8981\u6c42\u7a7a\u767d\u5e26\u5f00\u59cb\u5e76\u505c\u673a\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u8fdb\u4e00\u6b65\u6536\u7d27\u7684\u7ea6\u675f\u2014\u2014\u4e0d\u4ec5\u8981\u4ece\u7a7a\u767d\u5e26\u5f00\u59cb\uff0c\u8fd8\u8981\u5fc5\u987b\u5728\u7a7a\u767d\u5e26\u505c\u673a\uff0c\u63a2\u7d22\u5176\u6781\u9650\u884c\u4e3a\uff0c\u5e76\u7cfb\u7edf\u7ed9\u51fa\u82e5\u5e72\u72b6\u6001\u4e0b\u7684\u7b54\u6848\u3002", "method": "\u9488\u5bf9\u9650\u5236\u6761\u4ef6\uff08\u5fc5\u987b\u4ece\u7a7a\u767d\u5e26\u5f00\u59cb\u4e14\u5728\u7a7a\u767d\u5e26\u7ec8\u6b62\uff09\u7684busy beaver\u95ee\u9898\uff0c\u901a\u8fc7\u7406\u8bba\u5206\u6790\u4e0e\u7a77\u4e3e\uff0c\u7ed9\u51fa\u4e86\u5c0f\u72b6\u6001\u6570\uff08\u6700\u591a\u4e94\u72b6\u6001\uff09\u7684\u8be6\u5c3d\u7b54\u6848\uff1b\u516d\u72b6\u6001\u901a\u8fc7\u5019\u9009\u4e3e\u4f8b\u8fdb\u884c\u5206\u6790\uff0c\u63a8\u5e7f\u5230\u591a\u7b26\u53f7\u5219\u8ba8\u8bba\u90e8\u5206\u6027\u8d28\u3002", "result": "\u83b7\u5f97\u4e865\u72b6\u6001\u4e0b\u6b64variant\u7684\u7cbe\u786ebusy beaver\u503c\uff0c\u5bf96\u72b6\u6001\u7684\u5019\u9009\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u5e76\u521d\u63a2\u4e86m\u7b26\u53f7\u60c5\u666f\u7684\u884c\u4e3a\u3002", "conclusion": "\u4f5c\u8005\u5bf9\u201c\u4ece\u7a7a\u767d\u5e26\u5b50\u5f00\u59cb\u5e76\u6700\u7ec8\u505c\u673a\uff08\u5728\u7a7a\u767d\u5e26\u4e0a\u505c\u673a\uff09\u201d\u7684\u56fe\u7075\u673a\uff0c\u5728\u72b6\u6001\u6570\u81f3\u4e94\u7684\u60c5\u5f62\u4e0b\u7ed9\u51fa\u4e86\u7cbe\u786e\u6700\u5927\u8fd0\u884c\u6b65\u6570\uff1b\u8fd8\u5206\u6790\u4e86\u516d\u72b6\u6001\u5019\u9009\u673a\uff0c\u5e76\u5bf9m\u7b26\u53f7\u5b57\u6bcd\u8868\u7684\u60c5\u5f62\u4f5c\u4e86\u90e8\u5206\u7814\u7a76\u3002"}}
{"id": "2510.17582", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2510.17582", "abs": "https://arxiv.org/abs/2510.17582", "authors": ["Ning Ran", "Zhengguang Wu", "Shaokang Zhang", "Zhou He", "Carla Seatzu"], "title": "Non-interference analysis of bounded labeled Petri nets", "comment": null, "summary": "This paper focuses on a fundamental problem on information security of\nbounded labeled Petri nets: non-interference analysis. As in hierarchical\ncontrol, we assume that a system is observed by users at different levels,\nnamely high-level users and low-level users. The output events produced by the\nfiring of transitions are also partitioned into high-level output events and\nlow-level output events. In general, high-level users can observe the\noccurrence of all the output events, while low-level users can only observe the\noccurrence of low-level output events. A system is said to be non-interferent\nif low-level users cannot infer the firing of transitions labeled with\nhigh-level output events by looking at low-level outputs. In this paper, we\nstudy a particular non-interference property, namely strong non-deterministic\nnon-interference (SNNI), using a special automaton called SNNI Verifier, and\npropose a necessary and sufficient condition for SNNI.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9\u6709\u754c\u6807\u6ce8Petri\u7f51\u7cfb\u7edf\u7684\u4fe1\u606f\u5b89\u5168\uff0c\u7814\u7a76\u4e86\u4e00\u79cd\u66f4\u4e25\u683c\u7684\u975e\u5e72\u6270\u6027\uff08SNNI\uff09\uff0c\u63d0\u51fa\u4e86\u4ee5SNNI Verifier\u81ea\u52a8\u673a\u4e3a\u57fa\u7840\u7684\u5224\u5b9a\u65b9\u6cd5\u548c\u5b8c\u6574\u7684\u7406\u8bba\u5224\u636e\uff0c\u6709\u52a9\u4e8e\u4fe1\u606f\u5b89\u5168\u7cfb\u7edf\u7684\u5206\u6790\u548c\u9a8c\u8bc1\u3002", "motivation": "\u5728\u5206\u5c42\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u540c\u5c42\u7ea7\u7528\u6237\u80fd\u89c2\u6d4b\u5230\u7684\u4fe1\u606f\u4e0d\u540c\u3002\u4f4e\u5c42\u7528\u6237\u4e0d\u5e94\u901a\u8fc7\u81ea\u5df1\u53ef\u4ee5\u89c2\u6d4b\u7684\u4fe1\u606f\u63a8\u65ad\u51fa\u9ad8\u5c42\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u7cfb\u7edf\u8fdb\u884c\u975e\u5e72\u6270\u6027\u5206\u6790\u4ee5\u4fdd\u969c\u4fe1\u606f\u5b89\u5168\u3002", "method": "\u901a\u8fc7\u5f15\u5165\u4e00\u79cd\u7279\u6b8a\u7684\u81ea\u52a8\u673a\uff08SNNI Verifier\uff09\u6765\u5224\u5b9a\u7cfb\u7edf\u662f\u5426\u6ee1\u8db3\u5f3a\u975e\u786e\u5b9a\u6027\u975e\u5e72\u6270\u6027\uff08SNNI\uff09\u5c5e\u6027\u3002", "result": "\u7814\u7a76\u4e86\u5f3a\u975e\u786e\u5b9a\u6027\u975e\u5e72\u6270\u6027\uff08SNNI\uff09\u5c5e\u6027\uff0c\u5e76\u5229\u7528SNNI Verifier\u7ed9\u51fa\u4e86SNNI\u7684\u5fc5\u8981\u548c\u5145\u5206\u6761\u4ef6\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u4e86\u9488\u5bf9\u6709\u754c\u6807\u6ce8Petri\u7f51\u4fe1\u606f\u5b89\u5168\u4e2d\u7684\u975e\u5e72\u6270\u6027\u5206\u6790\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u5fc5\u8981\u4e14\u5145\u5206\u7684SNNI\u5224\u5b9a\u6761\u4ef6\u3002"}}
{"id": "2510.16398", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2510.16398", "abs": "https://arxiv.org/abs/2510.16398", "authors": ["Nick Bezhanishvili", "Balder ten Cate", "Rosalie Iemhoff"], "title": "Six Proofs of Interpolation for the Modal Logic K", "comment": "The article will appear in Balder ten Cate, Jean Christoph Jung,\n  Patrick Koopmann, Christoph Wernhard and Frank Wolter, editors. Theory and\n  Applications of Craig Interpolation. Ubiquity Press, 2026", "summary": "In this chapter, we present six different proofs of Craig interpolation for\nthe modal logic K, each using a different set of techniques (model-theoretic,\nproof-theoretic, syntactic, automata-theoretic, using quasi-models, and\nalgebraic). We compare the pros and cons of each proof technique.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u5730\u7528\u516d\u79cd\u4e0d\u540c\u6280\u672f\u8bc1\u660e\u4e86\u6a21\u6001\u903b\u8f91K\u7684Craig\u63d2\u503c\u5b9a\u7406\uff0c\u5e76\u8be6\u7ec6\u6bd4\u8f83\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u7684\u4f18\u52a3\u3002", "motivation": "Craig\u63d2\u503c\u6027\u8d28\u662f\u903b\u8f91\u5b66\u91cd\u8981\u7684\u5143\u6027\u8d28\uff0c\u5bf9\u4e0d\u540c\u8bc1\u660e\u65b9\u6cd5\u8fdb\u884c\u5f52\u7eb3\u603b\u7ed3\u6709\u52a9\u4e8e\u6df1\u5165\u7406\u89e3\u5176\u672c\u8d28\u3002\u8be5\u5de5\u4f5c\u9488\u5bf9\u6a21\u6001\u903b\u8f91K\uff0c\u6bd4\u8f83\u516d\u79cd\u4e0d\u540c\u63d2\u503c\u5b9a\u7406\u7684\u8bc1\u660e\u6280\u672f\uff0c\u4ece\u591a\u89d2\u5ea6\u8bc4\u4f30\u5176\u4f18\u52a3\u3002", "method": "\u4f5c\u8005\u5bf9\u6a21\u6001\u903b\u8f91K\u7684Craig\u63d2\u503c\u5b9a\u7406\uff0c\u5206\u522b\u5e94\u7528\u4e86\u516d\u79cd\u4e0d\u540c\u7684\u8bc1\u660e\u6280\u672f\uff1a\u6a21\u578b\u8bba\u3001\u8bc1\u660e\u8bba\u3001\u53e5\u6cd5\u6cd5\u3001\u81ea\u52a8\u673a\u7406\u8bba\u6cd5\u3001\u51c6\u6a21\u578b\u6cd5\u548c\u4ee3\u6570\u6cd5\u3002\u5bf9\u4e8e\u6bcf\u79cd\u65b9\u6cd5\uff0c\u90fd\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u8bc1\u660e\u8fc7\u7a0b\u3002", "result": "\u901a\u8fc7\u5bf9\u6bd4\u5206\u6790\uff0c\u660e\u786e\u5c55\u793a\u4e86\u516d\u79cd\u8bc1\u660e\u6280\u672f\u5728\u5e94\u7528\u5230\u6a21\u6001\u903b\u8f91K\u7684Craig\u63d2\u503c\u5b9a\u7406\u65f6\u7684\u4f18\u7f3a\u70b9\uff0c\u603b\u7ed3\u4e86\u5404\u79cd\u65b9\u6cd5\u7684\u9002\u7528\u573a\u666f\u548c\u5c40\u9650\u6027\u3002", "conclusion": "\u591a\u6837\u5316\u7684\u8bc1\u660e\u65b9\u6cd5\u5e2e\u52a9\u66f4\u5168\u9762\u8ba4\u8bc6Craig\u63d2\u503c\u5b9a\u7406\u5728\u6a21\u6001\u903b\u8f91K\u4e2d\u7684\u6210\u7acb\u539f\u56e0\uff0c\u5e76\u4e3a\u76f8\u5173\u903b\u8f91\u7406\u8bba\u7684\u53d1\u5c55\u63d0\u4f9b\u591a\u5143\u5de5\u5177\u3002\u8be5\u5bf9\u6bd4\u4e3a\u7814\u7a76\u8005\u9009\u62e9\u9002\u5f53\u7684\u6280\u672f\u8def\u5f84\u63d0\u4f9b\u4e86\u501f\u9274\u3002"}}
{"id": "2510.15972", "categories": ["cs.CL", "cs.AI", "81P68 (Primary), 68T50, 68T07 (Secondary)", "I.2.7; F.1.2"], "pdf": "https://arxiv.org/pdf/2510.15972", "abs": "https://arxiv.org/abs/2510.15972", "authors": ["Ling Sun", "Peter Sullivan", "Michael Martin", "Yun Zhou"], "title": "Quantum NLP models on Natural Language Inference", "comment": "Accepted, presented, and to appear in the Proceedings of the Quantum\n  AI and NLP 2025 Conference", "summary": "Quantum natural language processing (QNLP) offers a novel approach to\nsemantic modeling by embedding compositional structure directly into quantum\ncircuits. This paper investigates the application of QNLP models to the task of\nNatural Language Inference (NLI), comparing quantum, hybrid, and classical\ntransformer-based models under a constrained few-shot setting. Using the lambeq\nlibrary and the DisCoCat framework, we construct parameterized quantum circuits\nfor sentence pairs and train them for both semantic relatedness and inference\nclassification. To assess efficiency, we introduce a novel\ninformation-theoretic metric, Information Gain per Parameter (IGPP), which\nquantifies learning dynamics independent of model size. Our results demonstrate\nthat quantum models achieve performance comparable to classical baselines while\noperating with dramatically fewer parameters. The Quantum-based models\noutperform randomly initialized transformers in inference and achieve lower\ntest error on relatedness tasks. Moreover, quantum models exhibit significantly\nhigher per-parameter learning efficiency (up to five orders of magnitude more\nthan classical counterparts), highlighting the promise of QNLP in low-resource,\nstructure-sensitive settings. To address circuit-level isolation and promote\nparameter sharing, we also propose a novel cluster-based architecture that\nimproves generalization by tying gate parameters to learned word clusters\nrather than individual tokens.", "AI": {"tldr": "\u672c\u6587\u5c06QNLP\u65b9\u6cd5\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u63a8\u7406\u5e76\u4e0e\u7ecf\u5178\u6a21\u578b\u5bf9\u6bd4\uff0c\u7ed3\u679c\u8868\u660e\u5728\u53c2\u6570\u6781\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u91cf\u5b50\u6a21\u578b\u53ef\u8fbe\u5230\u7c7b\u4f3c\u7cbe\u5ea6\u4e14\u6bcf\u53c2\u6570\u5b66\u4e60\u6548\u7387\u6781\u9ad8\uff0c\u540c\u65f6\u63d0\u51fa\u7684\u805a\u7c7b\u53c2\u6570\u7ed3\u6784\u589e\u5f3a\u4e86\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u3002", "motivation": "\u5f53\u524d\u81ea\u7136\u8bed\u8a00\u63a8\u7406\u4e0e\u8bed\u4e49\u5efa\u6a21\u5728\u4f4e\u8d44\u6e90\u548c\u7ed3\u6784\u654f\u611f\u573a\u666f\u4e0b\u9762\u4e34\u6311\u6218\uff0c\u4f20\u7edf\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u53c2\u6570\u4f17\u591a\uff0c\u6548\u7387\u4e0d\u9ad8\u3002\u91cf\u5b50\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08QNLP\uff09\u56e0\u5176\u5929\u7136\u7684\u7ec4\u5408\u7ed3\u6784\u548c\u6f5c\u5728\u9ad8\u6548\u6027\u800c\u88ab\u8ba4\u4e3a\u6709\u671b\u6539\u5584\u73b0\u72b6\uff0c\u4e9f\u9700\u5b9e\u8bc1\u6bd4\u8f83\u5176\u4e0e\u7ecf\u5178\u6a21\u578b\u7684\u8868\u73b0\u53ca\u4f18\u52bf\u3002", "method": "\u5229\u7528lambeq\u5e93\u548cDisCoCat\u6846\u67b6\uff0c\u642d\u5efa\u9488\u5bf9\u53e5\u5b50\u5bf9\u7684\u53ef\u53c2\u6570\u5316\u91cf\u5b50\u7535\u8def\uff0c\u5e76\u5728\u8bed\u4e49\u76f8\u5173\u6027\u548c\u63a8\u7406\u5206\u7c7b\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002\u5f15\u5165\u4fe1\u606f\u589e\u76ca\u6bcf\u53c2\u6570\uff08IGPP\uff09\u4f5c\u4e3a\u65b0\u7684\u4fe1\u606f\u8bba\u8bc4\u4f30\u6307\u6807\uff0c\u5e76\u7814\u7a76\u4e86\u968f\u673a\u521d\u59cb\u5316transformer\u3001\u6807\u51c6transformer\u3001\u6df7\u5408\u6a21\u578b\u4e0e\u91cf\u5b50\u6a21\u578b\u5728\u5c11\u6837\u672c\u8bbe\u5b9a\u4e0b\u7684\u8868\u73b0\u3002", "result": "\u91cf\u5b50\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u9519\u8bef\u7387\u8f83\u4f4e\uff0c\u5e76\u663e\u8457\u4f18\u4e8e\u968f\u5373\u521d\u59cb\u5316\u7684transformer\u3002\u91cf\u5b50\u6a21\u578b\u5728\u4fe1\u606f\u589e\u76ca\u6bcf\u53c2\u6570\u4e0a\u8868\u73b0\u51fa\u8fdc\u9ad8\u4e8e\u7ecf\u5178\u6a21\u578b\uff08\u6700\u9ad8\u8d85\u8fc75\u4e2a\u6570\u91cf\u7ea7\uff09\u7684\u5b66\u4e60\u6548\u7387\u3002\u57fa\u4e8e\u805a\u7c7b\u7684\u53c2\u6570\u5171\u4eab\u673a\u5236\u63d0\u5347\u4e86\u6cdb\u5316\u6027\u80fd\u3002", "conclusion": "\u91cf\u5b50\u6a21\u578b\u5728\u53c2\u6570\u8fdc\u5c11\u4e8e\u7ecf\u5178\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u5b9e\u73b0\u4e0e\u7ecf\u5178\u57fa\u7ebf\u6a21\u578b\u76f8\u5f53\u7684\u6548\u679c\uff0c\u5e76\u4e14\u91cf\u5b50\u6a21\u578b\u7684\u6bcf\u53c2\u6570\u5b66\u4e60\u6548\u7387\u8fdc\u4f18\u4e8e\u7ecf\u5178\u6a21\u578b\u3002\u63d0\u51fa\u7684\u57fa\u4e8e\u805a\u7c7b\u7684\u91cf\u5b50\u7535\u8def\u7ed3\u6784\u8fdb\u4e00\u6b65\u63d0\u5347\u4e86\u6cdb\u5316\u80fd\u529b\u3002"}}
{"id": "2510.16183", "categories": ["cs.DM"], "pdf": "https://arxiv.org/pdf/2510.16183", "abs": "https://arxiv.org/abs/2510.16183", "authors": ["Ismail Belgacem", "Franck Delaplace"], "title": "Forward-Backward Binarization", "comment": null, "summary": "Binarization of gene expression data is a \\textbf{critical prerequisite} for\nthe synthesis of Boolean gene regulatory network (GRN) models from omics\ndatasets. Because Boolean networks encode gene activity as binary variables,\nthe accuracy of binarization directly conditions whether the inferred models\ncan faithfully reproduce biological experiments, capture regulatory dynamics,\nand support downstream analyses such as controllability and therapeutic\nstrategy design. In practice, binarization is most often performed using\nthresholding methods that partition expression values into two discrete levels,\nrepresenting the absence or presence of gene expression. However, such\napproaches oversimplify the underlying biology: gene-specific functional roles,\nmeasurement uncertainty, and the scarcity of time-resolved experimental data\nrender thresholding alone insufficient. To overcome these limitations, we\npropose a novel \\textbf{regulation-based binarization method} tailored to\nsnapshot data. Our approach combines thresholding with functional binary value\ncompletion guided by the regulatory graph, propagating values between\nregulators and targets according to Boolean regulation rules. This strategy\nenables the inference of missing or uncertain values and ensures that\nbinarization remains biologically consistent with both regulatory interactions\nand Boolean modeling principles of the gene regulation. Validation against ODE\nsimulations of artificial and established Boolean GRNs demonstrates that the\nmethod achieves accurate and robust binarization, thereby strengthening the\nreliability of Boolean network synthesis.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u8c03\u63a7\u7f51\u7edc\u8865\u5168\u7684\u57fa\u56e0\u8868\u8fbe\u6570\u636e\u4e8c\u503c\u5316\u65b9\u6cd5\uff0c\u6709\u6548\u63d0\u5347\u6570\u636e\u4e8c\u503c\u5316\u51c6\u786e\u6027\u548c\u751f\u7269\u5b66\u4e00\u81f4\u6027\uff0c\u4e3a\u5b9e\u73b0\u53ef\u9760\u7684\u5e03\u5c14GRN\u5efa\u6a21\u5960\u5b9a\u57fa\u7840\u3002", "motivation": "Boolean\u57fa\u56e0\u8c03\u63a7\u7f51\u7edc\uff08GRN\uff09\u7684\u5efa\u6a21\u9700\u8981\u5c06\u57fa\u56e0\u8868\u8fbe\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u4f46\u4f20\u7edf\u7684\u9608\u503c\u6cd5\u6613\u4e8e\u8fc7\u5ea6\u7b80\u5316\u751f\u7269\u5b66\u672c\u8d28\uff0c\u5e76\u96be\u4ee5\u5e94\u5bf9\u57fa\u56e0\u7279\u5f02\u6027\u3001\u6d4b\u91cf\u4e0d\u786e\u5b9a\u6027\u548c\u5feb\u7167\u5f0f\u6570\u636e\u7b49\u95ee\u9898\u3002\u4e3a\u63d0\u5347\u4e8c\u503c\u5316\u7684\u51c6\u786e\u6027\u548c\u751f\u7269\u5b66\u4e00\u81f4\u6027\uff0c\u4e9f\u9700\u4e00\u79cd\u66f4\u79d1\u5b66\u7684\u4e8c\u503c\u5316\u65b9\u6cd5\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u8c03\u63a7\u5173\u7cfb\u7684\u4e8c\u503c\u5316\u65b0\u65b9\u6cd5\uff0c\u7ed3\u5408\u5e38\u89c4\u9608\u503c\u6cd5\u548c\u8c03\u63a7\u56fe\u7ed3\u6784\uff0c\u901a\u8fc7\u5728\u8c03\u63a7\u8005\u4e0e\u9776\u57fa\u56e0\u95f4\u4f20\u64ad\u5e03\u5c14\u8c03\u63a7\u89c4\u5219\uff0c\u5b9e\u73b0\u529f\u80fd\u6027\u7684\u4e8c\u503c\u5316\u8865\u5168\u3002\u8be5\u65b9\u6cd5\u80fd\u591f\u63a8\u65ad\u7f3a\u5931\u6216\u4e0d\u786e\u5b9a\u7684\u8868\u8fbe\u503c\uff0c\u5e76\u4fdd\u6301\u6570\u636e\u4e0e\u751f\u7269\u8c03\u63a7\u7f51\u7edc\u53ca\u5e03\u5c14\u5efa\u6a21\u7684\u79d1\u5b66\u6027\u548c\u4e00\u81f4\u6027\u3002", "result": "\u901a\u8fc7\u4eba\u5de5\u548c\u5df2\u6709\u5e03\u5c14GRN\u7684ODE\u4eff\u771f\u9a8c\u8bc1\uff0c\u6240\u63d0\u65b9\u6cd5\u5728\u4e8c\u503c\u5316\u51c6\u786e\u6027\u548c\u9c81\u68d2\u6027\u65b9\u9762\u4f18\u4e8e\u4f20\u7edf\u9608\u503c\u6cd5\uff0c\u80fd\u591f\u63d0\u5347\u5e03\u5c14\u7f51\u7edc\u5efa\u6a21\u7684\u53ef\u9760\u6027\u3002", "conclusion": "\u8c03\u63a7\u7f51\u7edc\u5f15\u5bfc\u4e0b\u7684\u4e8c\u503c\u5316\u7b97\u6cd5\u6709\u6548\u514b\u670d\u4e86\u9608\u503c\u6cd5\u5728\u5feb\u7167\u6570\u636e\u5904\u7406\u4e2d\u7684\u5c40\u9650\u6027\uff0c\u63d0\u5347\u4e86\u5e03\u5c14GRN\u6a21\u578b\u7684\u751f\u7269\u5b66\u53ef\u4fe1\u5ea6\u4e0e\u540e\u7eed\u5206\u6790\u7684\u53ef\u9760\u6027\u3002"}}
{"id": "2510.16059", "categories": ["cs.SE", "cs.CL", "D.2.2; D.2.3"], "pdf": "https://arxiv.org/pdf/2510.16059", "abs": "https://arxiv.org/abs/2510.16059", "authors": ["Xin Cao", "Nan Yu"], "title": "SIADAFIX: issue description response for adaptive program repair", "comment": "20 pages, 3 figures", "summary": "We propose utilizing fast and slow thinking to enhance the capabilities of\nlarge language model-based agents on complex tasks such as program repair. In\nparticular, we design an adaptive program repair method based on issue\ndescription response, called SIADAFIX. The proposed method utilizes slow\nthinking bug fix agent to complete complex program repair tasks, and employs\nfast thinking workflow decision components to optimize and classify issue\ndescriptions, using issue description response results to guide the\norchestration of bug fix agent workflows. SIADAFIX adaptively selects three\nrepair modes, i.e., easy, middle and hard mode, based on problem complexity. It\nemploys fast generalization for simple problems and test-time scaling\ntechniques for complex problems. Experimental results on the SWE-bench Lite\nshow that the proposed method achieves 60.67% pass@1 performance using the\nClaude-4 Sonnet model, reaching state-of-the-art levels among all open-source\nmethods. SIADAFIX effectively balances repair efficiency and accuracy,\nproviding new insights for automated program repair. Our code is available at\nhttps://github.com/liauto-siada/siada-cli.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u7ed3\u5408\u5feb\u6162\u601d\u7ef4\u673a\u5236\u7684\u81ea\u9002\u5e94\u7a0b\u5e8f\u4fee\u590d\u65b9\u6cd5SIADAFIX\uff0c\u80fd\u6839\u636e\u4efb\u52a1\u590d\u6742\u5ea6\u7075\u6d3b\u8c03\u6574\u4fee\u590d\u6d41\u7a0b\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u73b0\u51fa\u8272\uff0c\u8fbe\u5230\u4e86\u5f53\u524d\u6700\u4f18\u3002", "motivation": "\u5f53\u524d\u5927\u6a21\u578b\u5728\u7a0b\u5e8f\u4fee\u590d\u7b49\u590d\u6742\u4efb\u52a1\u4e2d\u8868\u73b0\u867d\u6709\u8fdb\u6b65\uff0c\u4f46\u5728\u89e3\u51b3\u4e0d\u540c\u590d\u6742\u5ea6\u95ee\u9898\u65f6\u6548\u7387\u4e0e\u51c6\u786e\u6027\u96be\u4ee5\u517c\u987e\uff0c\u56e0\u6b64\u8feb\u5207\u9700\u8981\u66f4\u81ea\u9002\u5e94\u7684\u65b9\u6cd5\u6765\u63d0\u5347\u4fee\u590d\u6548\u679c\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u81ea\u9002\u5e94\u7a0b\u5e8f\u4fee\u590d\u65b9\u6cd5SIADAFIX\u3002\u8be5\u65b9\u6cd5\u7ed3\u5408\u201c\u5feb-\u6162\u201d\u601d\u7ef4\uff0c\u5229\u7528\u5feb\u601d\u7ef4\u7ec4\u4ef6\u4f18\u5316\u4e0e\u5206\u7c7b\u4efb\u52a1\u63cf\u8ff0\uff0c\u5e76\u7528\u6162\u601d\u7ef4agent\u5b8c\u6210\u590d\u6742\u4fee\u590d\uff0c\u540c\u65f6\u6839\u636e\u95ee\u9898\u96be\u5ea6\u81ea\u9002\u5e94\u9009\u62e9\u4e09\u79cd\u4fee\u590d\u6a21\u5f0f\uff0c\u5206\u522b\u4f7f\u7528\u901a\u7528\u6cdb\u5316\u4e0e\u6d4b\u8bd5\u65f6\u6269\u5c55\u6280\u672f\u3002", "result": "\u5728SWE-bench Lite\u6570\u636e\u96c6\u4e0a\uff0c\u4f7f\u7528Claude-4 Sonnet\u6a21\u578b\uff0cSIADAFIX\u65b9\u6cd5\u5b9e\u73b0\u4e8660.67%\u7684pass@1\u8868\u73b0\uff0c\u8fbe\u5230\u4e86\u5f53\u524d\u5f00\u6e90\u65b9\u6cd5\u4e2d\u7684\u6700\u4f18\u6c34\u5e73\u3002", "conclusion": "SIADAFIX\u517c\u987e\u4e86\u7a0b\u5e8f\u4fee\u590d\u7684\u6548\u7387\u4e0e\u51c6\u786e\u6027\uff0c\u5728\u81ea\u52a8\u5316\u7a0b\u5e8f\u4fee\u590d\u9886\u57df\u63d0\u4f9b\u4e86\u65b0\u7684\u601d\u8def\u3002"}}
{"id": "2510.15912", "categories": ["cs.PL", "cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.15912", "abs": "https://arxiv.org/abs/2510.15912", "authors": ["Jack Cashman"], "title": "Latency Based Tiling", "comment": null, "summary": "Latency Based Tiling provides a systems based approach to deriving\napproximate tiling solution that maximizes locality while maintaining a fast\ncompile time. The method uses triangular loops to characterize miss ratio\nscaling of a machine avoiding prefetcher distortion. Miss ratio scaling\ncaptures the relationship between data access latency and working set size with\nsharp increases in latency indicating the data footprint exceeds capacity from\na cache level. Through these noticeable increases in latency we can determine\nan approximate location for L1, L2, and L3 memory sizes. These sizes are\nexpected to be under approximations of a systems true memory sizes which is in\nline with our expectations given the shared nature of cache in a multi process\nsystem as described in defensive loop tiling. Unlike auto tuning, which can be\neffective but prohibitively slow, Latency Based Tiling achieves negligible\ncompile time overhead. The implementation in Rust enables a hardware agnostic\napproach which combined with a cache timing based techniques, yields a\nportable, memory safe system running wherever Rust is supported. The tiling\nstrategy is applied to a subset of the polyhedral model, where loop nestings\nare tiled based on both the derived memory hierarchy and the observed data\nfootprint per iteration.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u57fa\u4e8e\u5ef6\u8fdf\u89c2\u6d4b\u7684\u5faa\u73af\u5206\u5757\u65b9\u6cd5\uff0c\u80fd\u5728\u7f16\u8bd1\u65f6\u9ad8\u6548\u5224\u5b9a\u7f13\u5b58\u5bb9\u91cf\u5e76\u636e\u6b64\u4f18\u5316\u5faa\u73af\u5c40\u90e8\u6027\uff0c\u7f16\u8bd1\u5f00\u9500\u5c0f\uff0c\u901a\u7528\u4e14\u9002\u5408 Rust \u73af\u5883\u3002", "motivation": "\u73b0\u6709\u81ea\u52a8\u8c03\u4f18\u65b9\u6cd5\u867d\u7136\u80fd\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u7f16\u8bd1\u548c\u8c03\u4f18\u6240\u8017\u65f6\u95f4\u8fc7\u957f\uff0c\u4e0d\u9002\u5408\u5927\u89c4\u6a21/\u5feb\u901f\u5f00\u53d1\u3002\u5e0c\u671b\u8bbe\u8ba1\u4e00\u79cd\u7cfb\u7edf\u7ea7\u3001\u786c\u4ef6\u65e0\u5173\u3001\u5f00\u9500\u6781\u5c0f\u3001\u540c\u65f6\u80fd\u9ad8\u6548\u63d0\u5347\u5c40\u90e8\u6027\u7684\u5faa\u73af\u5206\u5757\u7b56\u7565\u3002", "method": "\u5229\u7528\u4e09\u89d2\u5faa\u73af\u68c0\u6d4b\u7cfb\u7edf\u4e2d\u7684\u7f13\u5b58\u5ef6\u8fdf\u7a81\u589e\u70b9\uff0c\u4ece\u800c\u63a8\u65ad L1/L2/L3\u00a0\u7f13\u5b58\u5bb9\u91cf\uff0c\u5e76\u636e\u6b64\u5bf9\u5faa\u73af\u8fdb\u884c\u57fa\u4e8e\u5185\u5b58\u5c42\u6b21\u7ed3\u6784\u548c\u6570\u636e\u8bbf\u95ee\u7279\u5f81\u7684\u5206\u5757\u4f18\u5316\u3002\u8be5\u65b9\u6cd5\u5728 Rust \u8bed\u8a00\u4e0b\u5b9e\u73b0\uff0c\u7ed3\u5408\u7f13\u5b58\u8ba1\u65f6\u6280\u672f\uff0c\u63d0\u4f9b\u901a\u7528\u3001\u5185\u5b58\u5b89\u5168\u7684\u4f18\u5316\u3002", "result": "\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u80fd\u591f\u8f83\u51c6\u786e\u5730\u63a8\u65ad\u7cfb\u7edf\u7f13\u5b58\u5927\u5c0f\uff0c\u5b9e\u73b0\u4e86\u83b7\u5f97\u4f4e\u8bef\u5dee\u3001\u9ad8\u6548\u7387\u5c40\u90e8\u6027\u4f18\u5316\uff0c\u5e76\u907f\u514d\u4e86\u975e\u9884\u53d6\u5668\u5e26\u6765\u7684\u5931\u771f\u95ee\u9898\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7f16\u8bd1\u8d1f\u62c5\u6781\u5c0f\uff0c\u4e0d\u4f9d\u8d56\u7279\u5b9a\u786c\u4ef6\u3002", "conclusion": "Latency Based Tiling \u5b9e\u73b0\u4e86\u8fd1\u4f3c\u7684\u6700\u4f73\u5faa\u73af\u5206\u5757\uff0c\u63d0\u5347\u4e86\u6570\u636e\u5c40\u90e8\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u4e86\u6781\u5feb\u7684\u7f16\u8bd1\u901f\u5ea6\uff0c\u4e14\u9002\u7528\u4e8e\u4e0d\u540c\u786c\u4ef6\u73af\u5883\u3002"}}
{"id": "2510.16402", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2510.16402", "abs": "https://arxiv.org/abs/2510.16402", "authors": ["Bernd Finkbeiner", "Julian Siber"], "title": "Explainability Requirements as Hyperproperties", "comment": null, "summary": "Explainability is emerging as a key requirement for autonomous systems. While\nmany works have focused on what constitutes a valid explanation, few have\nconsidered formalizing explainability as a system property. In this work, we\napproach this problem from the perspective of hyperproperties. We start with a\ncombination of three prominent flavors of modal logic and show how they can be\nused for specifying and verifying counterfactual explainability in multi-agent\nsystems: With Lewis' counterfactuals, linear-time temporal logic, and a\nknowledge modality, we can reason about whether agents know why a specific\nobservation occurs, i.e., whether that observation is explainable to them. We\nuse this logic to formalize multiple notions of explainability on the system\nlevel. We then show how this logic can be embedded into a hyperlogic. Notably,\nfrom this analysis we conclude that the model-checking problem of our logic is\ndecidable, which paves the way for the automated verification of explainability\nrequirements.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u591a\u79cd\u6a21\u6001\u903b\u8f91\u7684\u65b0\u903b\u8f91\u4f53\u7cfb\uff0c\u53ef\u7528\u4e8e\u5728\u591a\u667a\u80fd\u4f53\u81ea\u6cbb\u7cfb\u7edf\u4e2d\u5f62\u5f0f\u5316\u548c\u9a8c\u8bc1\u53ef\u89e3\u91ca\u6027\uff0c\u4e14\u6a21\u578b\u68c0\u6d4b\u95ee\u9898\u53ef\u5224\u5b9a\uff0c\u4e3a\u81ea\u52a8\u5316\u5b9e\u73b0\u53ef\u89e3\u91ca\u6027\u68c0\u6d4b\u63d0\u4f9b\u4e86\u7406\u8bba\u652f\u6491\u3002", "motivation": "\u73b0\u6709\u5de5\u4f5c\u591a\u5173\u6ce8\u4e8e\u4ec0\u4e48\u662f\u6709\u6548\u7684\u89e3\u91ca\uff0c\u8f83\u5c11\u5c06\u53ef\u89e3\u91ca\u6027\u5f62\u5f0f\u5316\u4e3a\u81ea\u6cbb\u7cfb\u7edf\u7684\u7cfb\u7edf\u6027\u8d28\u3002\u8be5\u5de5\u4f5c\u7740\u773c\u4e8e\u5982\u4f55\u5c06\u53ef\u89e3\u91ca\u6027\u4f5c\u4e3a\u7cfb\u7edf\u7ea7\u5c5e\u6027\u5728\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u4e2d\u8fdb\u884c\u89c4\u8303\u548c\u9a8c\u8bc1\u3002", "method": "\u5c06\u4e09\u79cd\u6a21\u6001\u903b\u8f91\uff08\u8def\u6613\u65af\u53cd\u4e8b\u5b9e\u3001\u7ebf\u6027\u65f6\u5e8f\u903b\u8f91\u3001\u77e5\u8bc6\u6a21\u6001\uff09\u7ed3\u5408\uff0c\u63d0\u51fa\u7528\u4e8e\u5efa\u6a21\u548c\u9a8c\u8bc1\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u4e2d\u7684\u53cd\u4e8b\u5b9e\u53ef\u89e3\u91ca\u6027\u7684\u65b0\u903b\u8f91\u4f53\u7cfb\uff0c\u5e76\u8fdb\u4e00\u6b65\u5c06\u5176\u5d4c\u5165\u81f3\u8d85\u903b\u8f91\u4e2d\u8fdb\u884c\u5206\u6790\u3002", "result": "\u63d0\u51fa\u7684\u903b\u8f91\u4f53\u7cfb\u80fd\u591f\u5f62\u5f0f\u5316\u7cfb\u7edf\u7ea7\u7684\u591a\u79cd\u53ef\u89e3\u91ca\u6027\u5b9a\u4e49\uff0c\u5e76\u80fd\u88ab\u5d4c\u5165\u81f3\u8d85\u903b\u8f91\u4e2d\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u4e14\u6a21\u578b\u68c0\u6d4b\u662f\u53ef\u5224\u5b9a\u7684\uff0c\u4e3a\u53ef\u89e3\u91ca\u6027\u9700\u6c42\u7684\u81ea\u52a8\u5316\u6821\u9a8c\u63d0\u4f9b\u4e86\u7406\u8bba\u4fdd\u969c\u3002", "conclusion": "\u672c\u6587\u8bc1\u660e\u4e86\u63d0\u51fa\u7684\u903b\u8f91\u4f53\u7cfb\u5728\u6a21\u578b\u68c0\u6d4b\u65b9\u9762\u662f\u53ef\u5224\u5b9a\u7684\uff0c\u8fd9\u4e3a\u81ea\u52a8\u5316\u9a8c\u8bc1\u81ea\u6cbb\u7cfb\u7edf\u7684\u53ef\u89e3\u91ca\u6027\u8981\u6c42\u5960\u5b9a\u4e86\u57fa\u7840\u3002"}}
{"id": "2510.16057", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.16057", "abs": "https://arxiv.org/abs/2510.16057", "authors": ["Md Kamrul Siam", "Md Jobair Hossain Faruk", "Jerry Q. Cheng", "Huanying Gu"], "title": "Fusion-Augmented Large Language Models: Boosting Diagnostic Trustworthiness via Model Consensus", "comment": "7 pages (Accepted to IEEE BHI 2025)", "summary": "This study presents a novel multi-model fusion framework leveraging two\nstate-of-the-art large language models (LLMs), ChatGPT and Claude, to enhance\nthe reliability of chest X-ray interpretation on the CheXpert dataset. From the\nfull CheXpert corpus of 224,316 chest radiographs, we randomly selected 234\nradiologist-annotated studies to evaluate unimodal performance using image-only\nprompts. In this setting, ChatGPT and Claude achieved diagnostic accuracies of\n62.8% and 76.9%, respectively. A similarity-based consensus approach, using a\n95% output similarity threshold, improved accuracy to 77.6%. To assess the\nimpact of multimodal inputs, we then generated synthetic clinical notes\nfollowing the MIMIC-CXR template and evaluated a separate subset of 50 randomly\nselected cases paired with both images and synthetic text. On this multimodal\ncohort, performance improved to 84% for ChatGPT and 76% for Claude, while\nconsensus accuracy reached 91.3%. Across both experimental conditions,\nagreement-based fusion consistently outperformed individual models. These\nfindings highlight the utility of integrating complementary modalities and\nusing output-level consensus to improve the trustworthiness and clinical\nutility of AI-assisted radiological diagnosis, offering a practical path to\nreduce diagnostic errors with minimal computational overhead.", "AI": {"tldr": "\u901a\u8fc7\u878d\u5408ChatGPT\u548cClaude\u4e24\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\uff0c\u5e76\u52a0\u5165\u4e34\u5e8a\u6587\u672c\uff0c\u91c7\u7528\u8f93\u51fa\u5171\u8bc6\u7b56\u7565\uff0c\u663e\u8457\u63d0\u5347\u4e86AI\u5bf9\u80f8\u90e8X\u5149\u7247\u7684\u8bca\u65ad\u51c6\u786e\u7387\uff0c\u4e3aAI\u533b\u5b66\u5f71\u50cf\u8bca\u65ad\u589e\u5f3a\u63d0\u4f9b\u4e86\u4f4e\u6210\u672c\u4e14\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002", "motivation": "\u80f8\u90e8X\u5149\u7684\u81ea\u52a8\u89e3\u8bfb\u6709\u52a9\u4e8e\u63d0\u9ad8\u8bca\u65ad\u6548\u7387\u548c\u51c6\u786e\u6027\uff0c\u4f46\u5355\u4e00\u6a21\u578b\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\u6709\u9650\uff0c\u5b58\u5728\u8bef\u8bca\u98ce\u9669\u3002\u56e0\u6b64\uff0c\u5982\u4f55\u5229\u7528\u591a\u79cdAI\u6a21\u578b\u548c\u591a\u6a21\u6001\u4fe1\u606f\u63d0\u5347\u8bca\u65ad\u6027\u80fd\uff0c\u662f\u8be5\u7814\u7a76\u5173\u6ce8\u7684\u95ee\u9898\u3002", "method": "\u91c7\u7528\u4e86\u591a\u6a21\u578b\u878d\u5408\u6846\u67b6\uff0c\u7ed3\u5408\u4e86\u4e24\u79cd\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08ChatGPT\u548cClaude\uff09\uff0c\u5e76\u901a\u8fc7\u8f93\u51fa\u76f8\u4f3c\u6027\u9608\u503c\uff0895%\uff09\u5b9e\u73b0\u5171\u8bc6\u51b3\u7b56\u3002\u5728\u4e8c\u7ef4\u5b9e\u9a8c\u7ec4\u4e2d\uff0c\u5206\u522b\u53ea\u8f93\u5165\u5f71\u50cf\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff1b\u5728\u591a\u6a21\u6001\u7ec4\uff0c\u5219\u751f\u6210\u6a21\u62df\u4e34\u5e8a\u7b14\u8bb0\uff0c\u4e0e\u5f71\u50cf\u4e00\u540c\u8f93\u5165\u6a21\u578b\uff0c\u6bd4\u8f83\u5404\u81ea\u53ca\u878d\u5408\u65b9\u5f0f\u7684\u8bca\u65ad\u8868\u73b0\u3002", "result": "\u4ec5\u5f71\u50cf\u8f93\u5165\u65f6\uff0cChatGPT\u51c6\u786e\u7387\u4e3a62.8%\uff0cClaude\u4e3a76.9%\uff0c\u5171\u8bc6\u540e\u4e3a77.6%\uff1b\u5f71\u50cf+\u6587\u672c\u8f93\u5165\u65f6\uff0cChatGPT\u63d0\u5347\u81f384%\uff0cClaude\u4e3a76%\uff0c\u5171\u8bc6\u63d0\u5347\u81f391.3%\u3002\u6bcf\u79cd\u5b9e\u9a8c\u6761\u4ef6\u4e0b\uff0c\u57fa\u4e8e\u5171\u8bc6\u7684\u878d\u5408\u5747\u9ad8\u4e8e\u4efb\u4e00\u5355\u72ec\u6a21\u578b\u3002", "conclusion": "\u591a\u6a21\u6001\u4fe1\u606f\u548c\u6a21\u578b\u8f93\u51fa\u7ea7\u5171\u8bc6\u7ed3\u5408\uff0c\u53ef\u6709\u6548\u63d0\u5347AI\u8f85\u52a9\u80f8\u90e8X\u5149\u8bca\u65ad\u7684\u53ef\u9760\u6027\u548c\u5b9e\u7528\u6027\uff0c\u53ef\u964d\u4f4e\u8bca\u65ad\u9519\u8bef\uff0c\u4e14\u6210\u672c\u4e0d\u9ad8\u3002"}}
{"id": "2510.16545", "categories": ["cs.DM", "math.CO"], "pdf": "https://arxiv.org/pdf/2510.16545", "abs": "https://arxiv.org/abs/2510.16545", "authors": ["Joe Sawada", "Daniel Gabri\u0107"], "title": "Random generation of universal cycles and de Bruijn sequences", "comment": null, "summary": "We present practical algorithms for generating universal cycles uniformly at\nrandom. In particular, we consider universal cycles for shorthand permutations,\nsubsets and multiset permutations, weak orders, and orientable sequences.\nAdditionally, we consider de Bruijn sequences, weight-range de Bruin sequences,\nand de Bruijn sequences, with forbidden $0^z$ substring. Each algorithm, seeded\nwith a random element from the given set, applies a random walk of an\nunderlying Eulerian de Bruijn graph to obtain a random arborescence (spanning\nin-tree). Given the random arborescence and the de Bruijn graph, a\ncorresponding random universal cycle can be generated in constant time per\nsymbol. We present experimental results on the average cover time needed to\ncompute a random arborescence for each object using a Las Vegas algorithm.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u5b9e\u7528\u7684\u901a\u7528\u5faa\u73af\u968f\u673a\u751f\u6210\u7b97\u6cd5\uff0c\u9002\u7528\u591a\u79cd\u7ec4\u5408\u5bf9\u8c61\uff0c\u5229\u7528 de Bruijn \u56fe\u548c\u968f\u673a\u6e38\u8d70\u539f\u7406\uff0c\u7406\u8bba\u4e0e\u5b9e\u9a8c\u7ed3\u679c\u5747\u663e\u793a\u751f\u6210\u6548\u7387\u9ad8\u4e14\u5206\u5e03\u5747\u5300\u3002", "motivation": "\u751f\u6210\u5747\u5300\u5206\u5e03\u7684\u901a\u7528\u5faa\u73af\uff08universal cycles\uff09\u5728\u7ec4\u5408\u5b66\u7b49\u9886\u57df\u6709\u5e7f\u6cdb\u5e94\u7528\uff0c\u4f46\u7f3a\u4e4f\u9ad8\u6548\u3001\u5b9e\u7528\u7684\u968f\u673a\u751f\u6210\u7b97\u6cd5\u3002\u672c\u8bba\u6587\u65e8\u5728\u63d0\u51fa\u5b9e\u9645\u53ef\u7528\u7684\u751f\u6210\u7b97\u6cd5\uff0c\u5e76\u6269\u5c55\u8986\u76d6\u591a\u79cd\u7ec4\u5408\u5bf9\u8c61\u3002", "method": "\u9488\u5bf9\u591a\u79cd\u7ec4\u5408\u5bf9\u8c61\uff08\u5982\u7b80\u5199\u6392\u5217\u3001\u5b50\u96c6\u3001\u591a\u91cd\u96c6\u6392\u5217\u3001\u5f31\u5e8f\u3001\u53ef\u5b9a\u5411\u5e8f\u5217\u3001de Bruijn \u5e8f\u5217\u3001\u5e26\u6743 de Bruijn \u5e8f\u5217\u4ee5\u53ca\u5e26\u9650\u5236\u7684 de Bruijn \u5e8f\u5217\uff09\uff0c\u4f5c\u8005\u63d0\u51fa\u57fa\u4e8e\u968f\u673a\u6e38\u8d70\u7684\u7b97\u6cd5\uff1a\u9996\u5148\u4ece\u7ed9\u5b9a\u96c6\u5408\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528\u5b83\u4f5c\u4e3a\u8d77\u70b9\u5728\u5e95\u5c42\u6b27\u62c9 de Bruijn \u56fe\u4e0a\u6267\u884c\u968f\u673a\u6e38\u8d70\uff0c\u751f\u6210\u968f\u673a\u751f\u6210\u6811\uff08arborescence\uff09\uff0c\u8fdb\u800c\u5728\u5e38\u6570\u65f6\u95f4\u5185\u751f\u6210\u5bf9\u5e94\u7684\u968f\u673a\u901a\u7528\u5faa\u73af\u3002\u6587\u4e2d\u8fd8\u91c7\u7528 Las Vegas \u7b97\u6cd5\u6d4b\u7b97\u751f\u6210\u4efb\u610f\u5bf9\u8c61\u6240\u9700\u7684\u5e73\u5747\u8986\u76d6\u65f6\u95f4\uff08cover time\uff09\uff0c\u5e76\u7ed9\u51fa\u5b9e\u9a8c\u7ed3\u679c\u3002", "result": "\u4f5c\u8005\u63d0\u51fa\u7684\u7b97\u6cd5\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u7ec4\u5408\u5bf9\u8c61\u9ad8\u6548\u3001\u5747\u5300\u5730\u751f\u6210\u901a\u7528\u5faa\u73af\uff0c\u6bcf\u4e2a\u7b26\u53f7\u751f\u6210\u4ec5\u9700\u5e38\u6570\u65f6\u95f4\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u5229\u7528\u968f\u673a\u6e38\u8d70\u7684 Las Vegas \u7b97\u6cd5\u6c42\u89e3\u968f\u673a\u751f\u6210\u6811\u7684\u5e73\u5747\u8986\u76d6\u65f6\u95f4\u8868\u73b0\u826f\u597d\uff0c\u9a8c\u8bc1\u4e86\u7b97\u6cd5\u7684\u5b9e\u7528\u6027\u548c\u9ad8\u6548\u6027\u3002", "conclusion": "\u8bba\u6587\u63d0\u4f9b\u4e86\u4e00\u5957\u5b9e\u7528\u3001\u9ad8\u6548\u7684\u751f\u6210\u901a\u7528\u5faa\u73af\u7684\u968f\u673a\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u591a\u79cd\u5e38\u89c1\u7684\u7ec4\u5408\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u5c55\u793a\u4e86\u5176\u5e73\u5747\u6027\u80fd\u548c\u5e7f\u6cdb\u9002\u7528\u6027\u3002\u521b\u65b0\u70b9\u5728\u4e8e\u7ed3\u5408\u968f\u673a\u6e38\u8d70\u4e0e de Bruijn \u56fe\uff0c\u6781\u5927\u63d0\u5347\u4e86\u751f\u6210\u901a\u7528\u5faa\u73af\u7684\u6548\u7387\u548c\u53ef\u64cd\u4f5c\u6027\u3002"}}
{"id": "2510.16242", "categories": ["cs.SE", "cs.DL"], "pdf": "https://arxiv.org/pdf/2510.16242", "abs": "https://arxiv.org/abs/2510.16242", "authors": ["Eva Maxfield Brown", "Isaac Slaughter", "Nicholas Weber"], "title": "Code Contribution and Credit in Science", "comment": null, "summary": "Software development has become essential to scientific research, but its\nrelationship to traditional metrics of scholarly credit remains poorly\nunderstood. We develop a dataset of approximately 140,000 paired research\narticles and code repositories, as well as a predictive model that matches\nresearch article authors with software repository developer accounts. We use\nthis data to investigate how software development activities influence credit\nallocation in collaborative scientific settings. Our findings reveal\nsignificant patterns distinguishing software contributions from traditional\nauthorship credit. We find that nearly 30% of articles include non-author code\ncontributors- individuals who participated in software development but received\nno formal authorship recognition. While code-contributing authors show a modest\n$\\sim$4.2% increase in article citations, this effect becomes non-significant\nwhen controlling for domain, article type, and open access status. First\nauthors are significantly more likely to be code contributors than other author\npositions. Notably, we identify a negative relationship between coding\nfrequency and scholarly impact metrics. Authors who contribute code more\nfrequently exhibit progressively lower h-indices than non-coding colleagues,\neven when controlling for publication count, author position, domain, and\narticle type. These results suggest a disconnect between software contributions\nand credit, highlighting important implications for institutional reward\nstructures and science policy.", "AI": {"tldr": "\u672c\u7814\u7a76\u53d1\u73b0\u79d1\u5b66\u8f6f\u4ef6\u5f00\u53d1\u8005\u5728\u5b66\u672f\u7f72\u540d\u548c\u5f71\u54cd\u529b\u8bc4\u4ef7\u4e0a\u5e38\u88ab\u5ffd\u89c6\uff0c\u9891\u7e41\u7f16\u7801\u4e0eh\u6307\u6570\u5448\u8d1f\u76f8\u5173\uff0c\u6d89\u53ca\u4ee3\u7801\u8d21\u732e\u7684\u8bc4\u4f30\u4e0e\u6fc0\u52b1\u673a\u5236\u6709\u5f85\u6539\u8fdb\u3002", "motivation": "\u867d\u7136\u8f6f\u4ef6\u5f00\u53d1\u5bf9\u79d1\u5b66\u7814\u7a76\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u5176\u5bf9\u5b66\u672f\u7f72\u540d\u548c\u5f71\u54cd\u529b\u7684\u5b9e\u9645\u4f5c\u7528\u5c1a\u4e0d\u6e05\u695a\uff0c\u4e9f\u9700\u91cf\u5316\u5206\u6790\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u63ed\u793a\u8bc4\u4ef7\u4f53\u7cfb\u7684\u6f5c\u5728\u4e0d\u516c\u3002", "method": "\u4f5c\u8005\u5efa\u7acb\u4e86\u5305\u542b\u7ea6140,000\u5bf9\u7814\u7a76\u8bba\u6587\u4e0e\u4ee3\u7801\u4ed3\u5e93\u7684\u6570\u636e\u96c6\uff0c\u5e76\u901a\u8fc7\u9884\u6d4b\u6a21\u578b\u5c06\u8bba\u6587\u4f5c\u8005\u4e0e\u5f00\u53d1\u8005\u8d26\u53f7\u8fdb\u884c\u5339\u914d\uff0c\u8fdb\u800c\u5206\u6790\u4e86\u4ee3\u7801\u5f00\u53d1\u6d3b\u52a8\u4e0e\u5b66\u672f\u7f72\u540d\u548c\u5f71\u54cd\u529b\u6307\u6807\u4e4b\u95f4\u7684\u5173\u7cfb\u3002", "result": "\u7ea630%\u7684\u8bba\u6587\u6d89\u53ca\u4e86\u672a\u7f72\u540d\u7684\u4ee3\u7801\u8d21\u732e\u8005\uff1b\u4ee3\u7801\u8d21\u732e\u8005\u7684\u6587\u7ae0\u88ab\u5f15\u6b21\u6570\u7565\u6709\u63d0\u5347\uff08\u7ea64.2%\uff09\uff0c\u4f46\u5728\u63a7\u5236\u5b66\u79d1\u3001\u7c7b\u578b\u4e0e\u5f00\u653e\u83b7\u53d6\u540e\u8be5\u5f71\u54cd\u4e0d\u663e\u8457\uff1b\u4e00\u4f5c\u66f4\u53ef\u80fd\u662f\u4ee3\u7801\u8d21\u732e\u8005\uff1b\u7f16\u7801\u9891\u7387\u8d8a\u9ad8\uff0c\u5176h\u6307\u6570\u5f80\u5f80\u8d8a\u4f4e\uff0c\u8bf4\u660e\u7f16\u7801\u8d21\u732e\u4e0e\u4f20\u7edf\u5b66\u672f\u58f0\u8a89\u8bc4\u4ef7\u4e4b\u95f4\u5b58\u5728\u8d1f\u76f8\u5173\u3002", "conclusion": "\u8f6f\u4ef6\u5f00\u53d1\u5728\u79d1\u5b66\u7814\u7a76\u4e2d\u7684\u8d21\u732e\u5f80\u5f80\u672a\u80fd\u901a\u8fc7\u4f20\u7edf\u5b66\u672f\u7f72\u540d\u83b7\u5f97\u6b63\u5f0f\u8ba4\u53ef\uff0c\u9891\u7e41\u8fdb\u884c\u7f16\u7801\u7684\u4f5c\u8005\u901a\u5e38\u5b66\u672f\u5f71\u54cd\u529b\u6307\u6807\uff08\u5982h\u6307\u6570\uff09\u8f83\u4f4e\uff0c\u8fd9\u53cd\u6620\u51fa\u5b66\u672f\u5956\u52b1\u673a\u5236\u4e0e\u5b9e\u9645\u7814\u7a76\u8d21\u732e\u4e4b\u95f4\u5b58\u5728\u8131\u8282\u3002"}}
{"id": "2510.16133", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2510.16133", "abs": "https://arxiv.org/abs/2510.16133", "authors": ["Daniel Sainati", "Joseph W. Cutler", "Benjamin C. Pierce", "Stephanie Weirich"], "title": "Typing Strictness (Extended Version)", "comment": "30 pages, 22 figures, extended version of a paper to be published at\n  POPL 2026", "summary": "Strictness analysis is critical to efficient implementation of languages with\nnon-strict evaluation, mitigating much of the performance overhead of laziness.\nHowever, reasoning about strictness at the source level can be challenging and\nunintuitive. We propose a new definition of strictness that refines the\ntraditional one by describing variable usage more precisely. We lay\ntype-theoretic foundations for this definition in both call-by-name and\ncall-by-push-value settings, drawing inspiration from the literature on type\nsystems tracking effects and coeffects. We prove via a logical relation that\nthe strictness attributes computed by our type systems accurately describe the\nuse of variables at runtime, and we offer a strictness-annotation-preserving\ntranslation from the call-by-name system to the call-by-push-value one. All our\nresults are mechanized in Rocq.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u66f4\u7cbe\u7ec6\u7684\u4e25\u683c\u6027\u5b9a\u4e49\u548c\u5bf9\u5e94\u7c7b\u578b\u7cfb\u7edf\uff0c\u6709\u6548\u63d0\u5347\u975e\u4e25\u683c\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4e25\u683c\u6027\u5206\u6790\u7684\u51c6\u786e\u6027\uff0c\u5e76\u5728\u7406\u8bba\u4e0e\u5de5\u5177\u4e2d\u5747\u5f97\u5230\u9a8c\u8bc1\u3002", "motivation": "\u73b0\u6709\u4e25\u683c\u6027\u5206\u6790\u7684\u4f20\u7edf\u5b9a\u4e49\u4e0d\u591f\u7cbe\u786e\u4e14\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u96be\u4ee5\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u56e0\u800c\u5e0c\u671b\u4ece\u7c7b\u578b\u8bba\u89d2\u5ea6\u63d0\u51fa\u66f4\u76f4\u89c2\u3001\u66f4\u7ec6\u81f4\u7684\u65b0\u5b9a\u4e49\uff0c\u63d0\u5347\u975e\u4e25\u683c\u8bed\u8a00\u5b9e\u73b0\u7684\u6548\u7387\uff0c\u5e76\u8ba9\u4e25\u683c\u6027\u5206\u6790\u7ed3\u679c\u66f4\u80fd\u53cd\u6620\u8fd0\u884c\u65f6\u5b9e\u9645\u3002", "method": "\u91c7\u7528\u4e86\u7c7b\u578b\u7cfb\u7edf\u7406\u8bba\u57fa\u7840\uff0c\u5206\u522b\u9488\u5bf9\u6309\u540d\u8c03\u7528\u548c\u6309\u63a8\u503c\u8c03\u7528\u4e24\u79cd\u8ba1\u7b97\u6a21\u578b\uff0c\u7ed3\u5408\u6548\u679c\u548c\u5171\u6548\u679c\u7c7b\u578b\u7cfb\u7edf\u7684\u76f8\u5173\u6587\u732e\uff0c\u63d0\u51fa\u65b0\u7684\u4e25\u683c\u6027\u5b9a\u4e49\u5e76\u5efa\u7acb\u4e86\u7c7b\u578b\u7cfb\u7edf\u3002\u5728\u6280\u672f\u4e0a\u4f7f\u7528\u903b\u8f91\u5173\u7cfb\u8bc1\u660e\u7c7b\u578b\u7cfb\u7edf\u5bf9\u53d8\u91cf\u8fd0\u884c\u65f6\u4f7f\u7528\u7684\u523b\u753b\u51c6\u786e\uff0c\u8fd8\u5b9e\u73b0\u4e86\u4ece\u6309\u540d\u8c03\u7528\u5230\u6309\u63a8\u503c\u8c03\u7528\u7684\u4e25\u683c\u6027\u6ce8\u91ca\u4fdd\u6301\u578b\u7ffb\u8bd1\u3002\u6240\u6709\u5de5\u4f5c\u5747\u88ab\u673a\u68b0\u5316\u9a8c\u8bc1\u3002", "result": "\u63d0\u51fa\u4e86\u6bd4\u4f20\u7edf\u5b9a\u4e49\u66f4\u7cbe\u7ec6\u7684\u4e25\u683c\u6027\u5206\u6790\u65b0\u5b9a\u4e49\uff0c\u5efa\u7acb\u4e86\u652f\u6301\u65b0\u5b9a\u4e49\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u7406\u8bba\u4e0a\u8bc1\u660e\u4e86\u5176\u51c6\u786e\u6027\uff0c\u5e76\u8bc1\u660e\u4e24\u79cd\u8ba1\u7b97\u6a21\u578b\u95f4\u53ef\u4e25\u683c\u6027\u4fdd\u6301\u5730\u8f6c\u6362\u3002\u6240\u6709\u7406\u8bba\u6210\u679c\u90fd\u7528Rocq\u5de5\u5177\u673a\u68b0\u5316\u5b9e\u73b0\u3002", "conclusion": "\u4f5c\u8005\u63d0\u51fa\u7684\u4e25\u683c\u6027\u5b9a\u4e49\u548c\u7c7b\u578b\u7cfb\u7edf\u80fd\u66f4\u7cbe\u786e\u5730\u8868\u793a\u548c\u8ffd\u8e2a\u975e\u4e25\u683c\u8ba1\u7b97\u8bed\u8a00\u4e2d\u53d8\u91cf\u7684\u5b9e\u9645\u4f7f\u7528\u60c5\u51b5\uff0c\u5176\u7c7b\u578b\u7cfb\u7edf\u63a8\u5bfc\u51fa\u7684\u4e25\u683c\u6027\u5c5e\u6027\u4e0e\u8fd0\u884c\u65f6\u53d8\u91cf\u4f7f\u7528\u543b\u5408\uff0c\u5e76\u5728\u7cfb\u7edf\uff08Rocq\uff09\u4e2d\u5f62\u5f0f\u5316\u548c\u9a8c\u8bc1\u3002"}}
{"id": "2510.16763", "categories": ["cs.LO", "03F03, 00A30", "F.3; F.4"], "pdf": "https://arxiv.org/pdf/2510.16763", "abs": "https://arxiv.org/abs/2510.16763", "authors": ["Victor Barroso-Nascimento", "Maria Os\u00f3rio Costa", "Elaine Pimentel"], "title": "Bilateralist base-extension semantics with incompatible proofs and refutations", "comment": null, "summary": "Logical bilateralism challenges traditional concepts of logic by treating\nassertion and denial as independent yet opposed acts. While initially devised\nto justify classical logic, its constructive variants show that both acts admit\nintuitionistic interpretations. This paper presents a bilateral system where a\nformula cannot be both provable and refutable without contradiction, offering a\nframework for modelling epistemic entities, such as mathematical proofs and\nrefutations, that exclude inconsistency.\n  The logic is formalised through a bilateral natural deduction system with\ndesirable proof-theoretic properties, including normalisation. We also\nintroduce a base-extension semantics requiring explicit constructions of proofs\nand refutations while preventing them from being established for the same\nformula. The semantics is proven sound and complete with respect to the\ncalculus. Finally, we show that our notion of refutation corresponds to David\nNelson's constructive falsity, extending rather than revising intuitionistic\nlogic and reinforcing the system's suitability for representing constructive\nepistemic reasoning.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u65ad\u8a00\u548c\u5426\u5b9a\u72ec\u7acb\u53c8\u5bf9\u7acb\u7684\u53cc\u8fb9\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\uff0c\u907f\u514d\u53ef\u8bc1\u53ef\u9a73\u5e76\u5b58\uff0c\u6269\u5c55\u548c\u5f3a\u5316\u4e86\u76f4\u89c9\u4e3b\u4e49\u903b\u8f91\uff0c\u9002\u5408\u5efa\u6784\u6027\u8ba4\u8bc6\u8bba\u63a8\u7406\u3002", "motivation": "\u4f20\u7edf\u903b\u8f91\u5f80\u5f80\u53ea\u5f3a\u8c03\u65ad\u8a00\uff08assertion\uff09\uff0c\u800c\u5ffd\u89c6\u5426\u5b9a\uff08denial\uff09\u7684\u72ec\u7acb\u5730\u4f4d\u3002\u903b\u8f91\u53cc\u8fb9\u4e3b\u4e49\uff08bilateralism\uff09\u7406\u8bba\u6311\u6218\u4e86\u8fd9\u4e00\u70b9\uff0c\u8ba4\u4e3a\u65ad\u8a00\u4e0e\u5426\u5b9a\u662f\u72ec\u7acb\u4f46\u5bf9\u7acb\u7684\u884c\u4e3a\uff0c\u5e76\u63a2\u8ba8\u8fd9\u4e9b\u884c\u4e3a\u5728\u76f4\u89c9\u4e3b\u4e49\u903b\u8f91\uff08intuitionistic logic\uff09\u4e2d\u7684\u89e3\u91ca\u3002\u672c\u6587\u65e8\u5728\u6784\u5efa\u4e00\u79cd\u80fd\u907f\u514d\u81ea\u76f8\u77db\u76fe\u7684\u53cc\u8fb9\u7cfb\u7edf\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5efa\u6a21\u5982\u6570\u5b66\u8bc1\u660e\u548c\u53cd\u9a73\u7b49\u5177\u6709\u8ba4\u8bc6\u8bba\u610f\u4e49\u7684\u5b9e\u4f53\u3002", "method": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u53cc\u8fb9\u81ea\u7136\u6f14\u7ece\u7cfb\u7edf\uff08bilateral natural deduction system\uff09\uff0c\u5e76\u5177\u5907\u8303\u5f0f\u5316\uff08normalisation\uff09\u7b49\u826f\u597d\u7684\u8bc1\u660e\u8bba\u6027\u8d28\u3002\u540c\u65f6\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u7840-\u6269\u5c55\uff08base-extension\uff09\u8bed\u4e49\uff0c\u8be5\u8bed\u4e49\u8981\u6c42\u5bf9\u6bcf\u4e2a\u516c\u5f0f\u5fc5\u987b\u5206\u522b\u663e\u5f0f\u6784\u9020\u8bc1\u660e\u548c\u53cd\u9a73\uff0c\u4e14\u4fdd\u8bc1\u5b83\u4eec\u4e0d\u80fd\u5171\u5b58\u3002\u901a\u8fc7\u8bc1\u660e\u8be5\u8bed\u4e49\u4e0e\u6f14\u7b97\u7684\u5b8c\u5907\u6027\u548c\u6b63\u786e\u6027\uff0c\u8bba\u8bc1\u4e86\u8be5\u7cfb\u7edf\u7684\u4e25\u683c\u6027\u3002", "result": "\u63d0\u51fa\u7684\u7cfb\u7edf\u4f7f\u5f97\u903b\u8f91\u4e2d\u4efb\u4f55\u516c\u5f0f\u4e0d\u80fd\u65e2\u53ef\u8bc1\u53c8\u53ef\u9a73\uff0c\u4fdd\u969c\u4e86\u903b\u8f91\u7cfb\u7edf\u5185\u5728\u7684\u4e00\u81f4\u6027\u3002\u53cd\u9a73\u7684\u6982\u5ff5\u4e0eNelson\u7684\u201c\u5efa\u6784\u6027\u4f2a\u201d\uff08constructive falsity\uff09\u76f8\u7b26\uff0c\u7cfb\u7edf\u65e2\u6269\u5c55\u4e86\u76f4\u89c9\u4e3b\u4e49\u903b\u8f91\uff0c\u53c8\u5f3a\u5316\u4e86\u5176\u5728\u5efa\u6784\u6027\u8ba4\u8bc6\u8bba\u63a8\u7406\u4e2d\u7684\u9002\u7528\u6027\u3002", "conclusion": "\u8be5\u7cfb\u7edf\u4e3a\u65ad\u8a00\u4e0e\u5426\u5b9a\u5404\u81ea\u72ec\u7acb\u4f46\u4e92\u65a5\u7684\u5f62\u5f0f\u5316\uff0c\u589e\u5f3a\u4e86\u903b\u8f91\u7cfb\u7edf\u8868\u8fbe\u5efa\u6784\u6027\u8ba4\u8bc6\u8bba\u5bf9\u8c61\uff08\u5982\u8bc1\u660e\u548c\u53cd\u9a73\uff09\u7684\u80fd\u529b\uff0c\u4e5f\u4e3a\u5c06Nelson\u7684\u5efa\u6784\u6027\u5426\u5b9a\u7eb3\u5165\u66f4\u5e7f\u6cdb\u8303\u7574\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u3002"}}
{"id": "2510.16062", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.16062", "abs": "https://arxiv.org/abs/2510.16062", "authors": ["Guiyao Tie", "Zenghui Yuan", "Zeli Zhao", "Chaoran Hu", "Tianhe Gu", "Ruihang Zhang", "Sizhe Zhang", "Junran Wu", "Xiaoyue Tu", "Ming Jin", "Qingsong Wen", "Lixing Chen", "Pan Zhou", "Lichao Sun"], "title": "Can LLMs Correct Themselves? A Benchmark of Self-Correction in LLMs", "comment": "38 pages, 25 figures, 8 tables", "summary": "Self-correction of large language models (LLMs) emerges as a critical\ncomponent for enhancing their reasoning performance. Although various\nself-correction methods have been proposed, a comprehensive evaluation of these\nmethods remains largely unexplored, and the question of whether LLMs can truly\ncorrect themselves is a matter of significant interest and concern. In this\nstudy, we introduce CorrectBench, a benchmark developed to evaluate the\neffectiveness of self-correction strategies, including intrinsic, external, and\nfine-tuned approaches, across three tasks: commonsense reasoning, mathematical\nreasoning, and code generation. Our findings reveal that: 1) Self-correction\nmethods can improve accuracy, especially for complex reasoning tasks; 2) Mixing\ndifferent self-correction strategies yields further improvements, though it\nreduces efficiency; 3) Reasoning LLMs (e.g., DeepSeek-R1) have limited\noptimization under additional self-correction methods and have high time costs.\nInterestingly, a comparatively simple chain-of-thought (CoT) baseline\ndemonstrates competitive accuracy and efficiency. These results underscore the\npotential of self-correction to enhance LLM's reasoning performance while\nhighlighting the ongoing challenge of improving their efficiency. Consequently,\nwe advocate for further research focused on optimizing the balance between\nreasoning capabilities and operational efficiency. Project Page:\nhttps://correctbench.github.io/", "AI": {"tldr": "CorrectBench\u7cfb\u7edf\u6027\u8bc4\u6d4b\u4e86\u591a\u79cd\u5927\u6a21\u578b\u81ea\u6211\u7ea0\u9519\u65b9\u6cd5\uff0c\u9a8c\u8bc1\u4e86\u81ea\u6211\u7ea0\u9519\u5bf9\u63a8\u7406\u51c6\u786e\u7387\u6709\u63d0\u5347\u4f5c\u7528\uff0c\u4f46\u6548\u7387\u6709\u5f85\u4f18\u5316\uff0cCoT\u65b9\u6cd5\u8868\u73b0\u7a81\u51fa\u3002", "motivation": "\u968f\u7740\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u63a8\u7406\u4efb\u52a1\uff0c\u6a21\u578b\u81ea\u6211\u7ea0\u9519\u80fd\u529b\u6210\u4e3a\u63d0\u5347\u5176\u63a8\u7406\u6027\u80fd\u7684\u5173\u952e\u3002\u4f46\u76ee\u524d\u9488\u5bf9\u4e0d\u540c\u81ea\u6211\u7ea0\u9519\u65b9\u6cd5\u7684\u7cfb\u7edf\u6027\u8bc4\u4f30\u5c1a\u7f3a\u4e4f\uff0c\u4e14LLM\u662f\u5426\u771f\u7684\u80fd\u591f\u6709\u6548\u81ea\u6211\u7ea0\u6b63\u4ecd\u503c\u5f97\u5173\u6ce8\u3002", "method": "\u63d0\u51fa\u5e76\u6784\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3aCorrectBench\u7684\u8bc4\u6d4b\u57fa\u51c6\uff0c\u7cfb\u7edf\u6027\u5730\u8bc4\u4f30\u4e86\u591a\u79cd\u81ea\u6211\u7ea0\u9519\u65b9\u6cd5\uff08\u5185\u5728\u3001\u5916\u90e8\u4ee5\u53ca\u5fae\u8c03\uff09\uff0c\u5e76\u5728\u5e38\u8bc6\u63a8\u7406\u3001\u6570\u5b66\u63a8\u7406\u548c\u4ee3\u7801\u751f\u6210\u4e09\u9879\u4efb\u52a1\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002\u7814\u7a76\u540c\u65f6\u6bd4\u8f83\u4e0d\u540c\u7ea0\u9519\u65b9\u6cd5\u7684\u7ec4\u5408\u6548\u679c\u3002", "result": "\u81ea\u6211\u7ea0\u9519\u65b9\u6cd5\u80fd\u63d0\u5347\u6a21\u578b\u51c6\u786e\u7387\uff0c\u7279\u522b\u662f\u5728\u590d\u6742\u63a8\u7406\u4efb\u52a1\u4e2d\uff1b\u6df7\u5408\u4e0d\u540c\u65b9\u6cd5\u8fdb\u4e00\u6b65\u63d0\u5347\u6548\u679c\u4f46\u6548\u7387\u964d\u4f4e\uff1b\u67d0\u4e9b\u63a8\u7406\u578bLLM\uff08\u5982DeepSeek-R1\uff09\u901a\u8fc7\u81ea\u6211\u7ea0\u9519\u63d0\u5347\u6709\u9650\u4e14\u8017\u65f6\u8f83\u9ad8\uff1b\u7b80\u5355\u7684chain-of-thought (CoT) \u57fa\u7ebf\u867d\u7136\u65b9\u6cd5\u7b80\u5355\uff0c\u5374\u5728\u51c6\u786e\u7387\u548c\u6548\u7387\u4e0a\u5c55\u73b0\u7ade\u4e89\u529b\u3002", "conclusion": "\u81ea\u6211\u7ea0\u9519\u6709\u52a9\u4e8e\u63d0\u5347LLM\u63a8\u7406\u80fd\u529b\uff0c\u4f46\u6548\u7387\u63d0\u5347\u4f9d\u7136\u662f\u6311\u6218\u3002\u672a\u6765\u7814\u7a76\u5e94\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\u4e0e\u6548\u7387\u4e4b\u95f4\u7684\u5e73\u8861\u3002"}}
{"id": "2510.16812", "categories": ["cs.DM", "05C50, 05C05"], "pdf": "https://arxiv.org/pdf/2510.16812", "abs": "https://arxiv.org/abs/2510.16812", "authors": ["Germain Past\u00e9n", "Carla Silva Oliveira", "Jo\u00e3o Domingos G. da Silva Junior", "Claudia M. Justel"], "title": "New results on $B_\u03b1$-eigenvalues of a graph", "comment": "19 pages, 10 figures", "summary": "Let $G$ be a graph with adjacency matrix $A(G)$ and Laplacian matrix $L(G)$.\nIn 2024, Samanta \\textit{et} \\textit{al.} defined the convex linear combination\nof $A(G)$ and $L(G)$ as $B_\\alpha(G) = \\alpha A(G) + (1-\\alpha)L(G)$, for\n$\\alpha \\in [0,1]$. This paper presents some results on the eigenvalues of\n$B_{\\alpha}(G)$ and their multiplicity when some sets of vertices satisfy\ncertain conditions. Moreover, the positive semidefiniteness problem of\n$B_{\\alpha}(G)$ is studied.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u548c\u62c9\u666e\u62c9\u65af\u77e9\u9635\u51f8\u7ec4\u5408$B_\\alpha(G)$\u5728\u67d0\u4e9b\u9876\u70b9\u96c6\u6ee1\u8db3\u6761\u4ef6\u4e0b\u7684\u7279\u5f81\u503c\u6027\u8d28\u548c\u6b63\u534a\u5b9a\u6027\u3002", "motivation": "\u53d72024\u5e74Samanta\u7b49\u4eba\u63d0\u51fa$A(G)$\u548c$L(G)$\u7684\u51f8\u7ebf\u6027\u7ec4\u5408$B_\\alpha(G)$\u542f\u53d1\uff0c\u8fdb\u4e00\u6b65\u7814\u7a76\u5176\u7279\u5f81\u503c\u6027\u8d28\u53ca\u6b63\u534a\u5b9a\u6027\u95ee\u9898\u3002", "method": "\u901a\u8fc7\u7814\u7a76\u56fe\u7684\u90bb\u63a5\u77e9\u9635$A(G)$\u548c\u62c9\u666e\u62c9\u65af\u77e9\u9635$L(G)$\u7684\u51f8\u7ebf\u6027\u7ec4\u5408$B_\\alpha(G)$\uff0c\u5206\u6790\u5176\u5728\u7279\u5b9a\u9876\u70b9\u6761\u4ef6\u4e0b\u7684\u7279\u5f81\u503c\u5206\u5e03\u4ee5\u53ca\u6b63\u534a\u5b9a\u6027\u3002", "result": "\u7ed9\u51fa\u4e86\u5728\u7279\u6b8a\u9876\u70b9\u96c6\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6$B_\\alpha(G)$\u7684\u7279\u5f81\u503c\u53ca\u5176\u91cd\u6570\u7684\u82e5\u5e72\u7ed3\u679c\uff0c\u5e76\u5bf9$B_\\alpha(G)$\u6b63\u534a\u5b9a\u6027\u8fdb\u884c\u4e86\u7cfb\u7edf\u8ba8\u8bba\u3002", "conclusion": "\u672c\u6587\u5f97\u51fa\u7ed3\u8bba\uff1a\u5728\u67d0\u4e9b\u9876\u70b9\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\uff0c$B_\\alpha(G)$\u7684\u7279\u5f81\u503c\u53ca\u5176\u91cd\u6570\u5177\u6709\u4e00\u5b9a\u89c4\u5f8b\uff0c\u5e76\u4e14\u8ba8\u8bba\u4e86$B_\\alpha(G)$\u7684\u6b63\u534a\u5b9a\u6027\u95ee\u9898\u3002"}}
{"id": "2510.16357", "categories": ["cs.SE", "cs.LG", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.16357", "abs": "https://arxiv.org/abs/2510.16357", "authors": ["Jugal Gajjar", "Kamalasankari Subramaniakuppusamy"], "title": "MLCPD: A Unified Multi-Language Code Parsing Dataset with Universal AST Schema", "comment": "12 pages, 7 figures, 4 tables, 2 algorithms, and 34 references.\n  HuggingFace:\n  https://huggingface.co/datasets/jugalgajjar/MultiLang-Code-Parser-Dataset\n  GitHub: https://github.com/JugalGajjar/MultiLang-Code-Parser-Dataset", "summary": "We introduce the MultiLang Code Parser Dataset (MLCPD), a large-scale,\nlanguage-agnostic dataset unifying syntactic and structural representations of\ncode across ten major programming languages. MLCPD contains over seven million\nparsed source files normalized under our proposed universal Abstract Syntax\nTree (AST) schema, enabling consistent cross-language reasoning, structural\nlearning, and multilingual software analysis. Unlike existing corpora that\nfocus purely on token-level code or isolated parsers, MLCPD provides both\nhierarchical tree representations and rich metadata for every file, ensuring\nlossless syntactic coverage and structural uniformity. Each entry includes a\nnormalized schema, language-level metadata, and abstracted node semantics\nstored in Parquet format for scalable retrieval. Empirical analyses reveal\nstrong cross-language structural regularities-demonstrating that syntactic\ngraphs from languages as diverse as Python, Java, and Go can be aligned under a\nshared schema. We release the dataset publicly on Hugging Face and the\naccompanying codebase on GitHub, which includes complete pipelines for dataset\nreproduction, grammar compilation, and a visualization tool for exploring the\nunified AST across languages. Together, these resources establish MLCPD as an\nopen, reproducible foundation for future research in cross-language\nrepresentation learning and program analysis.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63a8\u51faMLCPD\u6570\u636e\u96c6\uff0c\u4ee5\u7edf\u4e00AST\u7ed3\u6784\u8986\u76d6\u5341\u79cd\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u7684\u4e03\u767e\u591a\u4e07\u6e90\u7801\u6587\u4ef6\uff0c\u5b9e\u73b0\u4e86\u8de8\u8bed\u8a00\u7ed3\u6784\u7684\u6807\u51c6\u5316\u548c\u53ef\u5bf9\u9f50\u6027\uff0c\u586b\u8865\u4e86\u73b0\u6709\u6570\u636e\u96c6\u7684\u4e0d\u8db3\uff0c\u5e76\u5df2\u5728Hugging Face\u7b49\u5e73\u53f0\u5f00\u6e90\uff0c\u52a9\u63a8\u8de8\u8bed\u8a00\u7a0b\u5e8f\u5206\u6790\u4e0e\u8868\u5f81\u5b66\u4e60\u7814\u7a76\u3002", "motivation": "\u76ee\u524d\u516c\u5f00\u7684\u4ee3\u7801\u8bed\u6599\u5e93\u591a\u5c40\u9650\u4e8e\u5355\u4e00\u7f16\u7a0b\u8bed\u8a00\u3001\u5206\u8bcd\u7ea7\u8868\u793a\u6216\u5404\u81ea\u4e3a\u653f\u7684\u89e3\u6790\u5668\uff0c\u7f3a\u4e4f\u7edf\u4e00\u7684\u7ed3\u6784\u5316\u8868\u793a\uff0c\u65e0\u6cd5\u65b9\u4fbf\u8fdb\u884c\u8de8\u8bed\u8a00\u7ed3\u6784\u5206\u6790\u4e0e\u8868\u793a\u5b66\u4e60\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u3001\u7edf\u4e00\u7684\u3001\u591a\u8bed\u8a00\u4ee3\u7801\u6570\u636e\u96c6\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u901a\u7528AST\uff08\u62bd\u8c61\u8bed\u6cd5\u6811\uff09\u67b6\u6784\uff0c\u5e76\u57fa\u4e8e\u8be5\u67b6\u6784\uff0c\u5c06\u5341\u79cd\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u7684\u4e03\u767e\u591a\u4e07\u4e2a\u6e90\u7801\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\u4e0e\u6807\u51c6\u5316\uff0c\u751f\u6210\u5305\u542b\u4e30\u5bcc\u5143\u6570\u636e\u7684\u65b0\u6570\u636e\u96c6MLCPD\u3002\u6240\u6709\u6570\u636e\u4ee5\u9ad8\u6548Parquet\u683c\u5f0f\u5b58\u50a8\uff0c\u914d\u5957\u63d0\u4f9b\u5b8c\u6574\u5904\u7406\u6d41\u7a0b\u3001\u53ef\u89c6\u5316\u5de5\u5177\u548c\u6e90\u4ee3\u7801\u3002", "result": "MLCPD\u6570\u636e\u5c55\u793a\u4e86\u4e0d\u540c\u8bed\u8a00\uff08\u5982Python\u3001Java\u3001Go\uff09\u5728\u7edf\u4e00AST\u6a21\u5f0f\u4e0b\u7684\u7ed3\u6784\u76f8\u4f3c\u6027\uff0c\u5b9e\u9a8c\u8bc1\u660e\u4e0d\u540c\u8bed\u8a00\u7684\u8bed\u6cd5\u56fe\u53ef\u4ee5\u5bf9\u9f50\uff0c\u4e3a\u8de8\u8bed\u8a00\u7ed3\u6784\u5206\u6790\u548c\u8868\u793a\u5b66\u4e60\u63d0\u4f9b\u4e86\u5b9e\u8bc1\u57fa\u7840\u3002\u6570\u636e\u96c6\u548c\u5de5\u5177\u5747\u5df2\u5f00\u653e\u3002", "conclusion": "MLCPD\u4e3a\u8de8\u8bed\u8a00\u4ee3\u7801\u7ed3\u6784\u5206\u6790\u548c\u8868\u793a\u5b66\u4e60\u5960\u5b9a\u4e86\u7edf\u4e00\u3001\u53ef\u590d\u73b0\u7684\u5f00\u6e90\u57fa\u7840\uff0c\u5c06\u652f\u6301\u8be5\u9886\u57df\u7684\u8fdb\u4e00\u6b65\u7814\u7a76\u548c\u5e94\u7528\u3002"}}
{"id": "2510.16594", "categories": ["cs.PL", "F.3.2; F.1.1"], "pdf": "https://arxiv.org/pdf/2510.16594", "abs": "https://arxiv.org/abs/2510.16594", "authors": ["Moida Praneeth Jain", "Venkatesh Choppella"], "title": "SimpliPy: A Source-Tracking Notional Machine for Simplified Python", "comment": "15 pages, 1 figure, 1 table. Accepted at the 4th Workshop on Research\n  Highlights in Programming Languages (RHPL 2025), co-located with FSTTCS 2025.\n  Code available at: https://github.com/PraneethJain/simplipy", "summary": "Misconceptions about program execution hinder many novice programmers. We\nintroduce SimpliPy, a notional machine designed around a carefully chosen\nPython subset to clarify core control flow and scoping concepts. Its foundation\nis a precise operational semantics that explicitly tracks source code line\nnumbers for each execution step, making the link between code and behavior\nunambiguous. Complementing the dynamic semantics, SimpliPy uses static analysis\nto generate Control Flow Graphs (CFGs) and identify lexical scopes, helping\nstudents build a structural understanding before tracing. We also present an\ninteractive web-based debugger built on these principles. This tool embodies\nthe formal techniques, visualizing the operational state (environments, stack)\nand using the static CFG to animate control flow directly on the graph during\nstep-by-step execution. SimpliPy thus integrates formal semantics, program\nanalysis, and visualization to offer both a pedagogical approach and a\npractical demonstration of applying formal methods to program understanding.", "AI": {"tldr": "SimpliPy\u901a\u8fc7\u7ed3\u5408\u5f62\u5f0f\u8bed\u4e49\u3001\u7a0b\u5e8f\u5206\u6790\u548c\u53ef\u89c6\u5316\uff0c\u5e2e\u52a9\u521d\u5b66\u8005\u66f4\u597d\u5730\u638c\u63e1Python\u63a7\u5236\u6d41\u548c\u4f5c\u7528\u57df\uff0c\u662f\u7a0b\u5e8f\u7406\u89e3\u6559\u80b2\u548c\u5b9e\u9645\u6f14\u793a\u7684\u6709\u529b\u5de5\u5177\u3002", "motivation": "\u8bb8\u591a\u521d\u5b66\u8005\u5bf9\u7a0b\u5e8f\u6267\u884c\u5b58\u5728\u8bef\u89e3\uff0c\u5c24\u5176\u5728\u63a7\u5236\u6d41\u548c\u4f5c\u7528\u57df\u7b49\u6838\u5fc3\u6982\u5ff5\u4e0a\uff0c\u4e3a\u6b64\u4f5c\u8005\u63d0\u51fa\u5e2e\u52a9\u7406\u89e3\u7684\u5de5\u5177\u3002", "method": "\u63d0\u51fa\u4e86SimpliPy\u2014\u2014\u57fa\u4e8ePython\u5b50\u96c6\u7684\u60f3\u8c61\u673a\u6a21\u578b\u3002\u8be5\u6a21\u578b\u660e\u786e\u8ffd\u8e2a\u6bcf\u4e00\u6b65\u6267\u884c\u7684\u6e90\u4ee3\u7801\u884c\u53f7\uff0c\u7ed3\u5408\u9759\u6001\u5206\u6790\u751f\u6210\u63a7\u5236\u6d41\u56fe\uff08CFG\uff09\u548c\u8bcd\u6cd5\u4f5c\u7528\u57df\u6807\u8bc6\uff0c\u540c\u65f6\u8fd8\u5f00\u53d1\u4e86\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u8c03\u8bd5\u5668\uff0c\u5c06\u52a8\u6001\u8fd0\u884c\u72b6\u6001\u548c\u9759\u6001\u7ed3\u6784\u76f4\u89c2\u5448\u73b0\u3002", "result": "SimpliPy\u5c06\u5f62\u5f0f\u8bed\u4e49\u3001\u7a0b\u5e8f\u5206\u6790\u4e0e\u53ef\u89c6\u5316\u96c6\u6210\uff0c\u4e3a\u5b66\u4e60\u8005\u63d0\u4f9b\u7406\u8bba\u4e0e\u5b9e\u8df5\u7ed3\u5408\u7684\u7a0b\u5e8f\u7406\u89e3\u65b0\u65b9\u6cd5\uff0c\u5e76\u6709\u6548\u4fc3\u8fdb\u521d\u5b66\u8005\u5bf9\u7a0b\u5e8f\u6267\u884c\u6838\u5fc3\u6982\u5ff5\u7684\u628a\u63e1\u3002", "conclusion": "SimpliPy\u4e0d\u4ec5\u662f\u4e00\u79cd\u6559\u5b66\u9014\u5f84\uff0c\u4e5f\u5c55\u793a\u4e86\u5f62\u5f0f\u5316\u65b9\u6cd5\u5728\u7a0b\u5e8f\u7406\u89e3\u4e2d\u7684\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\uff0c\u901a\u8fc7\u5176\u5de5\u5177\u63d0\u5347\u521d\u5b66\u8005\u5bf9\u63a7\u5236\u6d41\u548c\u4f5c\u7528\u57df\u7684\u7406\u89e3\u3002"}}
{"id": "2510.17306", "categories": ["cs.LO", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.17306", "abs": "https://arxiv.org/abs/2510.17306", "authors": ["Sofia Garcia de Blas Garcia-Alcalde", "Francesco Belardinelli"], "title": "ATL*AS: An Automata-Theoretic Approach and Tool for the Verification of Strategic Abilities in Multi-Agent Systems", "comment": null, "summary": "We present two novel symbolic algorithms for model checking the\nAlternating-time Temporal Logic ATL*, over both the infinite-trace and the\nfinite-trace semantics. In particular, for infinite traces we design a novel\nsymbolic reduction to parity games. We implement both methods in the ATL*AS\nmodel checker and evaluate it using synthetic benchmarks as well as a\ncybersecurity scenario. Our results demonstrate that the symbolic approach\nsignificantly outperforms the explicit-state representation and we find that\nour parity-game-based algorithm offers a more scalable and efficient solution\nfor infinite-trace verification, outperforming previously available tools. Our\nresults also confirm that finite-trace model checking yields substantial\nperformance benefits over infinite-trace verification. As such, we provide a\ncomprehensive toolset for verifying multiagent systems against specifications\nin ATL*.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e24\u79cd\u9488\u5bf9ATL*\u6a21\u578b\u68c0\u6d4b\u7684\u521b\u65b0\u7b26\u53f7\u7b97\u6cd5\uff0c\u663e\u8457\u63d0\u5347\u4e86\u9a8c\u8bc1\u6548\u7387\u548c\u89c4\u6a21\uff0c\u5c24\u5176\u662f\u5728\u65e0\u9650\u8f68\u8ff9\u60c5\u5f62\uff0c\u5b9e\u9a8c\u548c\u5de5\u5177\u9a8c\u8bc1\u5176\u4f18\u8d8a\u6027\u3002", "motivation": "ATL*\u662f\u4e00\u79cd\u91cd\u8981\u7684\u65f6\u5e8f\u903b\u8f91\uff0c\u7528\u4e8e\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u89c4\u8303\u9a8c\u8bc1\u3002\u4f46\u4f20\u7edf\u7684\u663e\u5f0f\u72b6\u6001\u65b9\u6cd5\u5728\u89c4\u6a21\u548c\u6548\u7387\u4e0a\u5b58\u5728\u74f6\u9888\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u65e0\u9650\u8f68\u8ff9\u8bed\u4e49\u65f6\uff0c\u73b0\u6709\u5de5\u5177\u7684\u53ef\u4f38\u7f29\u6027\u4e0e\u6548\u7387\u4e9f\u5f85\u63d0\u5347\u3002", "method": "\u63d0\u51fa\u4e86\u4e24\u79cd\u5173\u4e8eATL*\u6a21\u578b\u68c0\u6d4b\u7684\u521b\u65b0\u7b26\u53f7\u7b97\u6cd5\uff0c\u5206\u522b\u9002\u7528\u4e8e\u65e0\u9650\u8f68\u8ff9\u548c\u6709\u9650\u8f68\u8ff9\u8bed\u4e49\u3002\u5bf9\u4e8e\u65e0\u9650\u8f68\u8ff9\uff0c\u901a\u8fc7\u7b26\u53f7\u5316\u5f52\u7ea6\u5230\u5947\u5076\u535a\u5f08(parity games)\u5b9e\u73b0\u3002\u7b97\u6cd5\u5728ATL*AS\u6a21\u578b\u68c0\u6d4b\u5de5\u5177\u4e2d\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7\u5408\u6210\u57fa\u51c6\u4e0e\u7f51\u7edc\u5b89\u5168\u573a\u666f\u8fdb\u884c\u4e86\u5b9e\u9a8c\u8bc4\u6d4b\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u57fa\u4e8e\u7b26\u53f7\u65b9\u6cd5\u7684\u5b9e\u73b0\u663e\u8457\u4f18\u4e8e\u663e\u5f0f\u72b6\u6001\u65b9\u6cd5\uff0c\u5947\u5076\u535a\u5f08\u7b97\u6cd5\u53ef\u6269\u5c55\u6027\u548c\u6027\u80fd\u66f4\u4f18\uff1b\u6709\u9650\u8f68\u8ff9\u8bed\u4e49\u4e0b\u7684\u6a21\u578b\u68c0\u6d4b\u6027\u80fd\u4f18\u52bf\u663e\u8457\u3002ATL*AS\u5de5\u5177\u80fd\u6709\u6548\u652f\u6301ATL*\u89c4\u8303\u7684\u81ea\u52a8\u5316\u9a8c\u8bc1\uff0c\u63d0\u5347\u4e86\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u7684\u5b9e\u9645\u5e94\u7528\u4ef7\u503c\u3002", "conclusion": "\u6211\u4eec\u63d0\u51fa\u7684\u7b26\u53f7\u5316\u65b9\u6cd5\u5728ATL*\u6a21\u578b\u68c0\u6d4b\u4e0a\u6781\u5927\u4f18\u4e8e\u73b0\u6709\u7684\u663e\u5f0f\u72b6\u6001\u65b9\u6cd5\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u65e0\u9650\u8f68\u8ff9\u9a8c\u8bc1\u65f6\u8868\u73b0\u66f4\u9ad8\u6548\u3001\u66f4\u5177\u6269\u5c55\u6027\uff0c\u5e76\u901a\u8fc7ATL*AS\u5de5\u5177\u96c6\u6210\uff0c\u4e3a\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\u7684ATL*\u89c4\u8303\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u5b8c\u6574\u5de5\u5177\u94fe\u3002"}}
{"id": "2510.16079", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.16079", "abs": "https://arxiv.org/abs/2510.16079", "authors": ["Rong Wu", "Xiaoman Wang", "Jianbiao Mei", "Pinlong Cai", "Daocheng Fu", "Cheng Yang", "Licheng Wen", "Xuemeng Yang", "Yufan Shen", "Yuxin Wang", "Botian Shi"], "title": "EvolveR: Self-Evolving LLM Agents through an Experience-Driven Lifecycle", "comment": null, "summary": "Current Large Language Model (LLM) agents show strong performance in tool\nuse, but lack the crucial capability to systematically learn from their own\nexperiences. While existing frameworks mainly focus on mitigating external\nknowledge gaps, they fail to address a more fundamental limitation: the\ninability to iteratively refine problem-solving strategies. In this work, we\nintroduce EvolveR, a framework designed to enable agent to self-improve through\na complete, closed-loop experience lifecycle. This lifecycle comprises two key\nstages: (1) Offline Self-Distillation, where the agent's interaction\ntrajectories are synthesized into a structured repository of abstract, reusable\nstrategic principles; (2) Online Interaction, where the agent interacts with\ntasks and actively retrieves distilled principles to guide its decision-making,\naccumulating a diverse set of behavioral trajectories. This loop employs a\npolicy reinforcement mechanism to iteratively update the agent based on its\nperformance. We demonstrate the effectiveness of EvolveR on complex multi-hop\nquestion-answering benchmarks, where it achieves superior performance over\nstrong agentic baselines. Our work presents a comprehensive blueprint for\nagents that learn not only from external data but also from the consequences of\ntheir own actions, paving the way for more autonomous and continuously\nimproving systems. Code is available at https://github.com/Edaizi/EvolveR.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faEvolveR\u6846\u67b6\uff0c\u901a\u8fc7\u79bb\u7ebf\u81ea\u84b8\u998f\u548c\u5728\u7ebf\u5f3a\u5316\u5b66\u4e60\uff0c\u8d4b\u4e88\u5927\u8bed\u8a00\u6a21\u578b\u6301\u7eed\u81ea\u6211\u4f18\u5316\u7684\u80fd\u529b\uff0c\u5728\u591a\u8df3\u95ee\u7b54\u4efb\u52a1\u4e0a\u8d85\u8d8a\u73b0\u6709\u57fa\u7ebf\uff0c\u4e3a\u6253\u9020\u66f4\u81ea\u4e3b\u53ef\u8fdb\u5316\u667a\u80fd\u4f53\u5960\u5b9a\u57fa\u7840\u3002", "motivation": "\u73b0\u6709\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u867d\u5728\u5de5\u5177\u4f7f\u7528\u65b9\u9762\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u7f3a\u4e4f\u4ece\u81ea\u8eab\u7ecf\u9a8c\u4e2d\u7cfb\u7edf\u6027\u5b66\u4e60\u548c\u81ea\u6211\u6539\u8fdb\u7684\u80fd\u529b\u3002\u76ee\u524d\u7684\u6846\u67b6\u4e3b\u8981\u5173\u6ce8\u4e8e\u5f25\u8865\u5916\u90e8\u77e5\u8bc6\u5dee\u8ddd\uff0c\u672a\u80fd\u6839\u672c\u89e3\u51b3\u6a21\u578b\u65e0\u6cd5\u8fed\u4ee3\u4f18\u5316\u89e3\u9898\u7b56\u7565\u7684\u95ee\u9898\u3002", "method": "\u63d0\u51fa\u4e86EvolveR\u6846\u67b6\uff0c\u5305\u62ec\u4e24\u4e2a\u6838\u5fc3\u9636\u6bb5\uff1a\uff081\uff09\u79bb\u7ebf\u81ea\u84b8\u998f\uff0c\u5c06\u6a21\u578b\u5b9e\u9645\u4ea4\u4e92\u8fc7\u7a0b\u63d0\u70bc\u6210\u7ed3\u6784\u5316\u3001\u53ef\u590d\u7528\u7684\u7b56\u7565\u539f\u5219\uff1b\uff082\uff09\u5728\u7ebf\u4ea4\u4e92\uff0c\u6a21\u578b\u5728\u4efb\u52a1\u4e2d\u5b9e\u65f6\u8c03\u7528\u8fd9\u4e9b\u7b56\u7565\u539f\u5219\uff0c\u5e76\u901a\u8fc7\u591a\u6837\u5316\u884c\u4e3a\u8f68\u8ff9\u81ea\u6211\u79ef\u7d2f\u7ecf\u9a8c\uff0c\u540c\u65f6\u501f\u52a9\u5f3a\u5316\u5b66\u4e60\u673a\u5236\uff0c\u57fa\u4e8e\u8868\u73b0\u6301\u7eed\u66f4\u65b0\u6a21\u578b\u3002", "result": "\u5728\u590d\u6742\u591a\u8df3\u95ee\u7b54\u4efb\u52a1\u57fa\u51c6\u4e0a\uff0cEvolveR\u6846\u67b6\u5728\u6027\u80fd\u4e0a\u660e\u663e\u4f18\u4e8e\u73b0\u6709\u5f3a\u529b\u57fa\u51c6\u65b9\u6cd5\u3002", "conclusion": "EvolveR\u4e3a\u667a\u80fd\u4f53\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u4ece\u81ea\u6211\u7ecf\u9a8c\u4e2d\u95ed\u73af\u81ea\u5b66\u4e60\u7684\u84dd\u56fe\uff0c\u4e0d\u4ec5\u80fd\u5229\u7528\u5916\u90e8\u6570\u636e\uff0c\u8fd8\u80fd\u8fed\u4ee3\u5438\u6536\u81ea\u8eab\u884c\u4e3a\u540e\u679c\uff0c\u5b9e\u73b0\u66f4\u9ad8\u6c34\u5e73\u7684\u81ea\u4e3b\u6027\u548c\u6301\u7eed\u6539\u8fdb\u3002"}}
{"id": "2510.17665", "categories": ["cs.DM", "05C85"], "pdf": "https://arxiv.org/pdf/2510.17665", "abs": "https://arxiv.org/abs/2510.17665", "authors": ["Flavia Bonomo-Braberman", "Min Chih Lin", "Ignacio Maqueda"], "title": "Efficient recognition algorithms for $(1,2)$-, $(2,1)$- and $(2,2)$-graphs", "comment": "14 pages, 0 figures", "summary": "A graph $G$ is said to be a $(k,\\ell)$-graph if its vertex set can be\npartitioned into $k$ independent sets and $\\ell$ cliques. It is well\nestablished that the recognition problem for $(k,\\ell)$-graphs is NP-complete\nwhenever $k \\geq 3$ or $\\ell \\geq 3$, while it is solvable in polynomial time\notherwise. In particular, for the case $k+\\ell \\leq 2$, recognition can be\ncarried out in linear time, since split graphs coincide with the class of\n$(1,1)$-graphs, bipartite graphs correspond precisely to $(2,0)$-graphs, and\n$(\\ell,k)$-graphs are the complements of $(k,\\ell)$-graphs. Recognition\nalgorithms for $(2,1)$- and $(1,2)$-graphs were provided by Brandst\\\"adt, Le\nand Szymczak in 1998, while the case of $(2,2)$-graphs was addressed by Feder,\nHell, Klein, and Motwani in 1999. In this work, we refine these results by\npresenting improved recognition algorithms with lower time complexity.\nSpecifically, we reduce the running time from $O((n+m)^2)$ to $O(n^2+nm)$ for\n$(2,1)$-graphs, from $O((n+\\overline{m})^2)$ to $O(n^2+n\\overline{m})$ for\n$(1,2)$-graphs, and from $O(n^{10}(n+m))$ to $O(n^4\n(n+\\min\\{m,\\overline{m}\\})^3)$ for $(2,2)$-graphs. Here, $n$ and $m$ denote the\nnumber of vertices and edges of the input graph $G$, respectively, and\n$\\overline{m}$ denotes the number of edges in the complement of $G$.", "AI": {"tldr": "\u672c\u6587\u9488\u5bf9\u90e8\u5206(k,\u2113)-\u56fe\u8bc6\u522b\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u66f4\u9ad8\u6548\u7684\u65b0\u7b97\u6cd5\uff0c\u628a\u5173\u952e\u7c7b\u578b\u7684\u8bc6\u522b\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u8457\u964d\u4f4e\uff0c\u63a8\u52a8\u56fe\u8bc6\u522b\u6548\u7387\u63d0\u5347\u3002", "motivation": "\u73b0\u6709(k,\u2113)-\u56fe\u7684\u8bc6\u522b\u7b97\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u7279\u522b\u662f\u5bf9\u4e8e(2,1)\u3001(1,2)\u548c(2,2)\u4e09\u7c7b\uff0c\u9650\u5236\u4e86\u5176\u5e94\u7528\u3002\u4f5c\u8005\u5e0c\u671b\u901a\u8fc7\u4f18\u5316\u7b97\u6cd5\u63d0\u5347\u8bc6\u522b\u6548\u7387\u3002", "method": "\u4f5c\u8005\u901a\u8fc7\u6539\u8fdb\u7b97\u6cd5\u8bbe\u8ba1\uff0c\u5229\u7528\u5df2\u6709\u56fe\u7ed3\u6784\u7406\u8bba\uff0c\u4f18\u5316\u4e86\u5bf9(2,1)\u3001(1,2)\u548c(2,2)\u7c7b\u56fe\u7684\u8bc6\u522b\u8fc7\u7a0b\u3002\u5177\u4f53\u901a\u8fc7\u5206\u6790\u56fe\u53ca\u5176\u8865\u56fe\u7684\u7ed3\u6784\u7279\u6027\uff0c\u7b80\u5316\u7b97\u6cd5\u8fd0\u884c\u6b65\u9aa4\u3002", "result": "\u5bf9(2,1)-\u56fe\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7531O((n+m)^2)\u964d\u81f3O(n^2+nm)\uff1b\u5bf9(1,2)-\u56fe\uff0c\u7531O((n+\\overline{m})^2)\u964d\u81f3O(n^2+n\\overline{m})\uff1b\u5bf9(2,2)-\u56fe\uff0c\u7531O(n^{10}(n+m))\u5927\u5e45\u4f18\u5316\u81f3O(n^4(n+min{m,\\overline{m}})^3)\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u4e86\u9488\u5bf9(2,1)\u3001(1,2)\u548c(2,2)\u7c7b\u578b\u56fe\u7684\u65b0\u8bc6\u522b\u7b97\u6cd5\uff0c\u5927\u5e45\u964d\u4f4e\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u4e86\u8bc6\u522b\u6548\u7387\u3002"}}
{"id": "2510.16384", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.16384", "abs": "https://arxiv.org/abs/2510.16384", "authors": ["Yuwei Zhao", "Yuan-An Xiao", "Qianyu Xiao", "Zhao Zhang", "Yingfei Xiong"], "title": "SemOpt: LLM-Driven Code Optimization via Rule-Based Analysis", "comment": null, "summary": "Automated code optimization aims to improve performance in programs by\nrefactoring code, and recent studies focus on utilizing LLMs for the\noptimization. Typical existing approaches mine optimization commits from\nopen-source codebases to construct a large-scale knowledge base, then employ\ninformation retrieval techniques such as BM25 to retrieve relevant optimization\nexamples for hotspot code locations, thereby guiding LLMs to optimize these\nhotspots. However, since semantically equivalent optimizations can manifest in\nsyntactically dissimilar code snippets, current retrieval methods often fail to\nidentify pertinent examples, leading to suboptimal optimization performance.\nThis limitation significantly reduces the effectiveness of existing\noptimization approaches.\n  To address these limitations, we propose SemOpt, a novel framework that\nleverages static program analysis to precisely identify optimizable code\nsegments, retrieve the corresponding optimization strategies, and generate the\noptimized results. SemOpt consists of three key components: (1) A strategy\nlibrary builder that extracts and clusters optimization strategies from\nreal-world code modifications. (2) A rule generator that generates Semgrep\nstatic analysis rules to capture the condition of applying the optimization\nstrategy. (3) An optimizer that utilizes the strategy library to generate\noptimized code results. All the three components are powered by LLMs.\n  On our benchmark containing 151 optimization tasks, SemOpt demonstrates its\neffectiveness under different LLMs by increasing the number of successful\noptimizations by 1.38 to 28 times compared to the baseline. Moreover, on\npopular large-scale C/C++ projects, it can improve individual performance\nmetrics by 5.04% to 218.07%, demonstrating its practical utility.", "AI": {"tldr": "SemOpt\u901a\u8fc7\u9759\u6001\u5206\u6790\u548cLLM\u76f8\u7ed3\u5408\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7801\u4f18\u5316\u7684\u6210\u529f\u7387\u548c\u5b9e\u9645\u6027\u80fd\uff0c\u89e3\u51b3\u4e86\u4f20\u7edf\u68c0\u7d22\u65b9\u6cd5\u7684\u5c40\u9650\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u68c0\u7d22\u7684\u81ea\u52a8\u5316\u4ee3\u7801\u4f18\u5316\u65b9\u6cd5\u96be\u4ee5\u6355\u6349\u8bed\u4e49\u7b49\u4ef7\u4f46\u8bed\u6cd5\u4e0d\u540c\u7684\u4f18\u5316\u793a\u4f8b\uff0c\u5bfc\u81f4\u4f18\u5316\u6548\u679c\u6709\u9650\u3002\u9700\u8981\u66f4\u9ad8\u6548\u3001\u66f4\u51c6\u786e\u5730\u53d1\u73b0\u548c\u5e94\u7528\u4f18\u5316\u7b56\u7565\u3002", "method": "\u63d0\u51faSemOpt\u6846\u67b6\uff0c\u6574\u5408\u9759\u6001\u7a0b\u5e8f\u5206\u6790\u548cLLM\u9a71\u52a8\u7ec4\u4ef6\uff0c\u5305\u62ec\u7b56\u7565\u5e93\u6784\u5efa\u3001\u89c4\u5219\u751f\u6210\u4e0e\u4ee3\u7801\u4f18\u5316\uff0c\u80fd\u591f\u66f4\u7cbe\u786e\u5730\u8bc6\u522b\u548c\u6539\u8fdb\u4f18\u5316\u70b9\u3002", "result": "\u5728151\u9879\u4f18\u5316\u4efb\u52a1\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cSemOpt\u6bd4\u4f20\u7edf\u65b9\u6cd5\u4f18\u5316\u6210\u529f\u6570\u63d0\u53471.38\u500d\u81f328\u500d\u3002\u5728\u5927\u578bC/C++\u5f00\u6e90\u9879\u76ee\u4e2d\uff0c\u76f8\u5173\u6027\u80fd\u6307\u6807\u63d0\u53475.04%\u81f3218.07%\u3002", "conclusion": "SemOpt\u663e\u8457\u63d0\u5347\u4e86\u81ea\u52a8\u5316\u4ee3\u7801\u4f18\u5316\u7684\u6709\u6548\u6027\u548c\u5b9e\u7528\u6027\uff0c\u5728\u591a\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u548c\u5b9e\u9645\u5f00\u6e90\u5de5\u7a0b\u4e2d\u5747\u53d6\u5f97\u4e86\u660e\u663e\u7684\u6027\u80fd\u63d0\u5347\u3002"}}
{"id": "2510.16883", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2510.16883", "abs": "https://arxiv.org/abs/2510.16883", "authors": ["Giulia Giusti", "Michele Pagani"], "title": "JAX Autodiff from a Linear Logic Perspective (Extended Version)", "comment": null, "summary": "Autodiff refers to the core of the automatic differentiation systems\ndeveloped in projects like JAX and Dex. Autodiff has recently been formalised\nin a linear typed calculus by Radul et al in arXiv:2204.10923. Although this\nformalisation suffices to express the main program transformations of Autodiff,\nthe calculus is very specific to this task, and it is not clear whether the\ntype system yields a substructural logic that has interest on its own.\n  We propose an encoding of Autodiff into a linear $\\lambda$-calculus that\nenjoys a Curry-Howard correspondence with Girard's linear logic. We prove that\nthe encoding is sound both qualitatively (the encoded terms are extensionally\nequivalent to the original ones) and quantitatively (the encoding preserves the\noriginal work cost as described in arXiv:2204.10923). As a byproduct, we show\nthat unzipping, one of the transformations used to implement backpropagation in\nAutodiff, is, in fact, optional.", "AI": {"tldr": "\u672c\u6587\u5c06\u81ea\u52a8\u5fae\u5206\uff08Autodiff\uff09\u7f16\u8bd1\u5230\u6807\u51c6\u7ebf\u6027\u03bb-\u6f14\u7b97\uff0c\u5b9e\u73b0\u4e0eGirard\u7ebf\u6027\u903b\u8f91\u7684\u7406\u8bba\u7edf\u4e00\uff0c\u5e76\u8bc1\u660e\u5176\u8bed\u4e49\u548c\u6210\u672c\u7684\u6b63\u786e\u6027\uff0c\u540c\u65f6\u6307\u51faAutodiff\u4e2d\u7684unzipping\u64cd\u4f5c\u5176\u5b9e\u53ef\u4ee5\u7701\u7565\u3002", "motivation": "\u73b0\u6709\u7684Autodiff\u7ebf\u6027\u7c7b\u578b\u6f14\u7b97\u867d\u80fd\u8868\u8fbeAutodiff\u7684\u4e3b\u8981\u7a0b\u5e8f\u8f6c\u6362\uff0c\u4f46\u5176\u4e13\u7528\u6027\u5f3a\uff0c\u4e14\u8be5\u7c7b\u578b\u7cfb\u7edf\u662f\u5426\u6709\u66f4\u5e7f\u6cdb\u903b\u8f91\u610f\u4e49\u5c1a\u4e0d\u660e\u786e\u3002\u4f5c\u8005\u5e0c\u671b\u5c06Autodiff\u7f6e\u4e8e\u66f4\u901a\u7528\u3001\u5177\u6709\u7406\u8bba\u610f\u4e49\u7684\u7ebf\u6027\u903b\u8f91\u6846\u67b6\u4e0b\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u5c06Autodiff\u7f16\u7801\u8fdb\u4e0eGirard\u7ebf\u6027\u903b\u8f91\u5b58\u5728Curry-Howard\u5bf9\u5e94\u7684\u7ebf\u6027\u03bb-\u6f14\u7b97\uff0c\u5e76\u4ece\u5b9a\u6027\uff08\u6269\u5c55\u7b49\u4ef7\uff09\u4e0e\u5b9a\u91cf\uff08\u4fdd\u7559\u5de5\u4f5c\u91cf\u6210\u672c\uff09\u4e24\u4e2a\u65b9\u9762\u4e25\u683c\u8bba\u8bc1\u8be5\u7f16\u7801\u7684\u6b63\u786e\u6027\u3002", "result": "\u4f5c\u8005\u8bc1\u660e\u4e86Autodiff\u5230\u7ebf\u6027\u03bb-\u6f14\u7b97\u7684\u7f16\u7801\u65e2\u5728\u884c\u4e3a\u7b49\u4ef7\u6027\u4e0a\u6210\u7acb\uff0c\u4e5f\u80fd\u4fdd\u7559\u539f\u7b97\u6cd5\u7684\u5de5\u4f5c\u91cf\u6210\u672c\u3002\u6b64\u5916\uff0c\u8fd8\u610f\u5916\u53d1\u73b0Autodiff\u4e2d\u7528\u4e8e\u53cd\u5411\u4f20\u64ad\u5b9e\u73b0\u7684\u201cunzipping\u201d\u64cd\u4f5c\u5176\u5b9e\u662f\u53ef\u9009\u7684\u3002", "conclusion": "\u4f5c\u8005\u63d0\u4f9b\u4e86Autodiff\u7684\u7ebf\u6027\u903b\u8f91\u5316\u7f16\u7801\uff0c\u4e3a\u5176\u4e13\u7528\u578b\u7c7b\u578b\u7cfb\u7edf\u8d4b\u4e88\u4e00\u822c\u7406\u8bba\u610f\u4e49\uff0c\u5e76\u4f18\u5316\u4e86\u81ea\u52a8\u5fae\u5206\u7684\u5b9e\u73b0\u7ec6\u8282\u3002"}}
{"id": "2510.17494", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2510.17494", "abs": "https://arxiv.org/abs/2510.17494", "authors": ["Jacob Neumann"], "title": "A Judgmental Construction of Directed Type Theory", "comment": null, "summary": "We reformulate recent advances in directed type theory--a type theory where\nthe types have the structure of synthetic (higher) categories--as a logical\ncalculus with multiple context 'zones', following the example of Pfenning and\nDavies. This allows us to have two kinds of variables--'neutral' and\n'polar'--with different functoriality requirements. We focus on the\nlowest-dimension version of this theory (where types are synthetic preorders)\nand apply the logical language to articulate concepts from the theory of\nrewriting. We also take the occasion to develop the categorical semantics of\ndual-context systems, proposing a notion of dual CwF to serve as a common\nstructural base for the model theories of such logics.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u591a\u4e0a\u4e0b\u6587\u533a\u57df\u7684\u903b\u8f91\u6f14\u7b97\u91cd\u65b0\u8868\u8ff0\u4e86\u6709\u5411\u7c7b\u578b\u7406\u8bba\u7684\u8fdb\u5c55\uff0c\u5f15\u5165\u4e2d\u6027\u548c\u6781\u6027\u53d8\u91cf\uff0c\u63d0\u4f9b\u4e86\u91cd\u5199\u7406\u8bba\u7684\u65b0\u903b\u8f91\u63cf\u8ff0\uff0c\u5e76\u63d0\u51fa\u4e86dual CwF\uff0c\u62d3\u5c55\u4e86\u8be5\u7c7b\u903b\u8f91\u7684\u8303\u7574\u6a21\u578b\u57fa\u7840\u3002", "motivation": "\u65e8\u5728\u7528\u66f4\u7ed3\u6784\u5316\u3001\u66f4\u7075\u6d3b\u7684\u903b\u8f91\u4f53\u7cfb\u6765\u8868\u8fbe\u548c\u6269\u5c55\u6709\u5411\u7c7b\u578b\u7406\u8bba\uff0c\u4f7f\u5176\u80fd\u591f\u66f4\u597d\u5730\u523b\u753b\u548c\u5904\u7406\u8303\u7574\u7ed3\u6784\u3001\u91cd\u5199\u7406\u8bba\uff0c\u5e76\u7edf\u4e00\u6a21\u578b\u7406\u8bba\u57fa\u7840\u3002", "method": "\u672c\u7814\u7a76\u91c7\u7528\u4e86Pfenning\u548cDavies\u7684\u591a\u4e0a\u4e0b\u6587'\u533a\u57df'\u6846\u67b6\uff0c\u5f15\u5165\u4e86\u4e24\u7c7b\u53d8\u91cf\uff08'\u4e2d\u6027'\u4e0e'\u6781\u6027'\uff09\uff0c\u5e76\u91cd\u70b9\u5206\u6790\u6700\u4f4e\u7ef4\u5ea6\u60c5\u5f62\uff08\u7c7b\u578b\u4e3a\u5408\u6210\u9884\u5e8f\u65f6\uff09\u3002\u8fdb\u4e00\u6b65\u53d1\u5c55\u4e86\u53cc\u4e0a\u4e0b\u6587\u7cfb\u7edf\u7684\u8303\u7574\u8bed\u4e49\uff0c\u63d0\u51fadual CwF\u3002", "result": "\u8bba\u6587\u5c55\u793a\u4e86\u591a\u533a\u57df\u903b\u8f91\u8bed\u8a00\u5728\u91cd\u5199\u7406\u8bba\u8868\u8fbe\u4e2d\u7684\u5e94\u7528\uff0c\u5e76\u63d0\u51fa\u4e86dual CwF\u7684\u6982\u5ff5\uff0c\u4e30\u5bcc\u4e86\u76f8\u5173\u903b\u8f91\u7684\u8303\u7574\u6a21\u578b\u57fa\u7840\u3002", "conclusion": "\u8be5\u8bba\u6587\u5c06\u6709\u5411\u7c7b\u578b\u7406\u8bba\u7684\u6700\u65b0\u8fdb\u5c55\u91cd\u65b0\u8868\u8ff0\u4e3a\u591a\u4e0a\u4e0b\u6587\u533a\u57df\u7684\u903b\u8f91\u6f14\u7b97\uff0c\u5e76\u53d1\u5c55\u4e86\u53cc\u4e0a\u4e0b\u6587\u7cfb\u7edf\u7684\u8303\u7574\u8bed\u4e49\u5b66\uff0c\u63d0\u51fa\u4e86dual CwF\u7684\u65b0\u6982\u5ff5\uff0c\u4e3a\u6b64\u7c7b\u903b\u8f91\u7684\u6a21\u578b\u7406\u8bba\u63d0\u4f9b\u4e86\u7ed3\u6784\u57fa\u7840\u3002"}}
{"id": "2510.16091", "categories": ["cs.CL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.16091", "abs": "https://arxiv.org/abs/2510.16091", "authors": ["Binglan Han", "Anuradha Mathrani", "Teo Susnjak"], "title": "Evaluating Prompting Strategies and Large Language Models in Systematic Literature Review Screening: Relevance and Task-Stage Classification", "comment": null, "summary": "This study quantifies how prompting strategies interact with large language\nmodels (LLMs) to automate the screening stage of systematic literature reviews\n(SLRs). We evaluate six LLMs (GPT-4o, GPT-4o-mini, DeepSeek-Chat-V3,\nGemini-2.5-Flash, Claude-3.5-Haiku, Llama-4-Maverick) under five prompt types\n(zero-shot, few-shot, chain-of-thought (CoT), CoT-few-shot, self-reflection)\nacross relevance classification and six Level-2 tasks, using accuracy,\nprecision, recall, and F1. Results show pronounced model-prompt interaction\neffects: CoT-few-shot yields the most reliable precision-recall balance;\nzero-shot maximizes recall for high-sensitivity passes; and self-reflection\nunderperforms due to over-inclusivity and instability across models. GPT-4o and\nDeepSeek provide robust overall performance, while GPT-4o-mini performs\ncompetitively at a substantially lower dollar cost. A cost-performance analysis\nfor relevance classification (per 1,000 abstracts) reveals large absolute\ndifferences among model-prompt pairings; GPT-4o-mini remains low-cost across\nprompts, and structured prompts (CoT/CoT-few-shot) on GPT-4o-mini offer\nattractive F1 at a small incremental cost. We recommend a staged workflow that\n(1) deploys low-cost models with structured prompts for first-pass screening\nand (2) escalates only borderline cases to higher-capacity models. These\nfindings highlight LLMs' uneven but promising potential to automate literature\nscreening. By systematically analyzing prompt-model interactions, we provide a\ncomparative benchmark and practical guidance for task-adaptive LLM deployment.", "AI": {"tldr": "\u9488\u5bf9\u7cfb\u7edf\u7efc\u8ff0\u6587\u732e\u7b5b\u9009\uff0c\u7cfb\u7edf\u8bc4\u4f30\u4e86LLM\u4e0e\u63d0\u793a\u7684\u4ea4\u4e92\uff0c\u53d1\u73b0\u4e0d\u540c\u7ec4\u5408\u6027\u80fd\u548c\u6210\u672c\u5dee\u5f02\u660e\u663e\uff0c\u63a8\u8350\u5148\u7528\u4f4e\u6210\u672c\u6a21\u578b\u521d\u7b5b\u3001\u7591\u96be\u518d\u4ea4\u9ad8\u6027\u80fd\u6a21\u578b\u5904\u7406\uff0c\u6709\u52a9\u63d0\u5347\u81ea\u52a8\u5316\u7b5b\u6587\u6548\u7387\u53ca\u6210\u672c\u63a7\u5236\u3002", "motivation": "\u5f53\u524d\u7cfb\u7edf\u6027\u6587\u732e\u7efc\u8ff0\uff08SLR\uff09\u7684\u7b5b\u9009\u9636\u6bb5\u4eba\u5de5\u6210\u672c\u9ad8\uff0c\u800c\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u6709\u6f5c\u529b\u5b9e\u73b0\u81ea\u52a8\u5316\uff0c\u4f46\u4e0d\u540c\u6a21\u578b\u4e0e\u63d0\u793a\u65b9\u5f0f\u5982\u4f55\u5f71\u54cd\u8868\u73b0\u7f3a\u4e4f\u7cfb\u7edf\u5206\u6790\u3002", "method": "\u5bf9\u516d\u4e2a\u4e3b\u6d41\u5927\u8bed\u8a00\u6a21\u578b\u4e0e\u4e94\u79cd\u63d0\u793a\u65b9\u6cd5\u8fdb\u884c\u7ec4\u5408\u5b9e\u9a8c\uff0c\u6db5\u76d6\u76f8\u5173\u6027\u5206\u7c7b\u53ca\u516d\u4e2a\u4e8c\u7ea7\u4efb\u52a1\uff0c\u7528\u51c6\u786e\u7387\u3001\u7cbe\u5ea6\u3001\u53ec\u56de\u7387\u548cF1\u503c\u7b49\u591a\u6307\u6807\u8003\u5bdf\u8868\u73b0\uff1b\u5e76\u4ee5\u6bcf\u5343\u7bc7\u6458\u8981\u4e3a\u5355\u4f4d\u6bd4\u8f83\u6210\u672c\u2014\u6027\u80fd\u3002", "result": "CoT-few-shot\u63d0\u793a\u6574\u4f53\u7cbe\u5ea6-\u53ec\u56de\u8868\u73b0\u6700\u597d\uff0czero-shot\u9002\u5408\u9ad8\u53ec\u56de\u9700\u6c42\uff1bself-reflection\u4e0d\u7a33\u5b9a\u4e14\u5305\u5bb9\u6027\u8fc7\u9ad8\u3002GPT-4o\u4e0eDeepSeek\u7efc\u5408\u8868\u73b0\u6700\u4f73\uff0cGPT-4o-mini\u6027\u4ef7\u6bd4\u9ad8\u3002\u4e0d\u540c\u6a21\u578b-\u63d0\u793a\u7ec4\u5408\u6210\u672c\u4e0e\u8868\u73b0\u5dee\u5f02\u5927\u3002\u63d0\u51fa\u4f4e\u6210\u672c\u6a21\u578b+\u7ed3\u6784\u5316\u63d0\u793a\u4f18\u5148\uff0c\u8fb9\u754c\u60c5\u51b5\u518d\u5347\u7ea7\u81f3\u9ad8\u6027\u80fd\u6a21\u578b\u7684\u6d41\u7a0b\u5efa\u8bae\u3002", "conclusion": "\u6a21\u578b\u548c\u63d0\u793a\u65b9\u5f0f\u5bf9\u81ea\u52a8\u5316\u6587\u732e\u7b5b\u9009\u6548\u679c\u5f71\u54cd\u663e\u8457\uff0c\u5e94\u91c7\u7528\u5206\u9636\u6bb5\u6d41\u7a0b\u63d0\u5347\u6548\u76ca\u3002\u672c\u7814\u7a76\u4e3a\u57fa\u4e8e\u4efb\u52a1\u8c03\u4f18\u7684LLM\u90e8\u7f72\u63d0\u4f9b\u5b9e\u8bc1\u5bf9\u6bd4\u4e0e\u5b9e\u7528\u5efa\u8bae\u3002"}}
{"id": "2510.16395", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.16395", "abs": "https://arxiv.org/abs/2510.16395", "authors": ["Xin Peng", "Chong Wang"], "title": "Code Digital Twin: Empowering LLMs with Tacit Knowledge for Complex Software Development", "comment": null, "summary": "Recent advances in large language models (LLMs) have demonstrated strong\ncapabilities in software engineering tasks, raising expectations of\nrevolutionary productivity gains. However, enterprise software development is\nlargely driven by incremental evolution, where challenges extend far beyond\nroutine coding and depend critically on tacit knowledge, including design\ndecisions at different levels and historical trade-offs. To achieve effective\nAI-powered support for complex software development, we should align emerging\nAI capabilities with the practical realities of enterprise development. To this\nend, we systematically identify challenges from both software and LLM\nperspectives. Alongside these challenges, we outline opportunities where AI and\nstructured knowledge frameworks can enhance decision-making in tasks such as\nissue localization and impact analysis. To address these needs, we propose the\nCode Digital Twin, a living framework that models both the physical and\nconceptual layers of software, preserves tacit knowledge, and co-evolves with\nthe codebase. By integrating hybrid knowledge representations, multi-stage\nextraction pipelines, incremental updates, LLM-empowered applications, and\nhuman-in-the-loop feedback, the Code Digital Twin transforms fragmented\nknowledge into explicit and actionable representations. Our vision positions it\nas a bridge between AI advancements and enterprise software realities,\nproviding a concrete roadmap toward sustainable, intelligent, and resilient\ndevelopment and evolution of ultra-complex systems.", "AI": {"tldr": "\u63d0\u51faCode Digital Twin\u6846\u67b6\uff0c\u901a\u8fc7\u878d\u5408AI\u4e0e\u7ed3\u6784\u5316\u77e5\u8bc6\uff0c\u89e3\u51b3\u4f01\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u9690\u6027\u77e5\u8bc6\u4fdd\u5b58\u4e0e\u6301\u7eed\u6f14\u5316\u96be\u9898\uff0c\u4f7fLLM\u66f4\u6709\u6548\u9002\u914d\u8d85\u590d\u6742\u7cfb\u7edf\u5f00\u53d1\u3002", "motivation": "\u5c3d\u7ba1LLM\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u4e2d\u8868\u73b0\u51fa\u8272\uff0c\u4f46\u4f01\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u6d89\u53ca\u5927\u91cf\u9690\u6027\u77e5\u8bc6\u4e0e\u6301\u7eed\u6f14\u5316\uff0c\u5e38\u89c4LLM\u5e94\u7528\u96be\u4ee5\u6ee1\u8db3\u5b9e\u9645\u9700\u6c42\uff0c\u9700\u8981\u5bf9AI\u80fd\u529b\u4e0e\u8f6f\u4ef6\u5f00\u53d1\u73b0\u5b9e\u8fdb\u884c\u6df1\u5ea6\u5bf9\u9f50\u3002", "method": "\u7cfb\u7edf\u68b3\u7406LLM\u548c\u4f01\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u9762\u4e34\u7684\u6311\u6218\uff0c\u63d0\u70bcAI\u4e0e\u7ed3\u6784\u5316\u77e5\u8bc6\u7ed3\u5408\u7684\u673a\u4f1a\uff0c\u63d0\u51fa\u4ee5\u6df7\u5408\u77e5\u8bc6\u8868\u793a\u3001\u591a\u9636\u6bb5\u62bd\u53d6\u3001\u589e\u91cf\u66f4\u65b0\u3001\u4eba\u673a\u534f\u4f5c\u4e3a\u6838\u5fc3\u7684Code Digital Twin\u6846\u67b6\u3002", "result": "Code Digital Twin\u6846\u67b6\u80fd\u591f\u4fdd\u7559\u5e76\u6f14\u8fdb\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u9690\u6027\u4e0e\u663e\u6027\u77e5\u8bc6\uff0c\u5c06\u77e5\u8bc6\u788e\u7247\u5316\u8f6c\u5316\u4e3a\u53ef\u7528\u8d44\u6e90\uff0c\u52a9\u63a8\u4f01\u4e1a\u7ea7AI\u8f85\u52a9\u5f00\u53d1\uff0c\u5b9e\u73b0\u590d\u6742\u7cfb\u7edf\u7684\u667a\u80fd\u3001\u53ef\u6301\u7eed\u6f14\u8fdb\u3002", "conclusion": "\u63d0\u51faCode Digital Twin\u6846\u67b6\uff0c\u5c06AI\u4e0e\u7ed3\u6784\u5316\u77e5\u8bc6\u7ed3\u5408\uff0c\u5b9e\u73b0\u5bf9\u4f01\u4e1a\u7ea7\u8f6f\u4ef6\u5f00\u53d1\u590d\u6742\u6027\u7684\u652f\u6301\u3002\u8be5\u6846\u67b6\u53ef\u589e\u5f3aAI\u8f85\u52a9\u51b3\u7b56\u3001\u77e5\u8bc6\u4fdd\u7559\u4e0e\u6f14\u8fdb\u80fd\u529b\uff0c\u6709\u52a9\u4e8e\u4f01\u4e1a\u5e94\u5bf9\u590d\u6742\u7cfb\u7edf\u6f14\u5316\u3002"}}
{"id": "2510.17429", "categories": ["cs.PL", "D.3.1"], "pdf": "https://arxiv.org/pdf/2510.17429", "abs": "https://arxiv.org/abs/2510.17429", "authors": ["Jin Sano", "Naoki Yamamoto", "Kazunori Ueda"], "title": "Introducing Linear Implication Types to $\u03bb_{GT}$ for Computing With Incomplete Graphs", "comment": "26 pages, 14 figures, This paper is submitted to PRO2025-3", "summary": "Designing programming languages that enable intuitive and safe manipulation\nof data structures is a critical research challenge. Conventional destructive\nmemory operations using pointers are complex and prone to errors. Existing type\nsystems, such as affine types and shape types, address this problem towards\nsafe manipulation of heaps and pointers, but design of high-level declarative\nlanguages that allow us to manipulate complex pointer data structures at a\nhigher level of abstraction is largely an open problem. The $\\lambda_{GT}$\nlanguage, a purely functional programming language that treats hypergraphs\n(hereafter referred to as graphs) as primary data structures, addresses some of\nthese challenges. By abstracting data with shared references and cycles as\ngraphs, it enables declarative operations through pattern matching and\nleverages its type system to guarantee safety of these operations.\nNevertheless, the previously proposed type system of $\\lambda_{GT}$ leaves two\nsignificant open challenges. First, the type system does not support\n\\emph{incomplete graphs}, that is, graphs in which some elements are missing\nfrom the graphs of user-defined types. Second, the type system relies on\ndynamic type checking during pattern matching. This study addresses these two\nchallenges by incorporating linear implication into the $\\lambda_{GT}$ type\nsystem, while introducing new constraints to ensure its soundness.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u5728\u03bb_{GT}\u8bed\u8a00\u7c7b\u578b\u7cfb\u7edf\u4e2d\u5f15\u5165\u7ebf\u6027\u8574\u542b\u548c\u65b0\u7ea6\u675f\uff0c\u89e3\u51b3\u4e86\u5bf9\u4e0d\u5b8c\u6574\u56fe\u7684\u652f\u6301\u53ca\u5bf9\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u7684\u4f9d\u8d56\uff0c\u4ece\u800c\u63d0\u5347\u4e86\u590d\u6742\u56fe\u7ed3\u6784\u7684\u5b89\u5168\u58f0\u660e\u5f0f\u64cd\u4f5c\u80fd\u529b\u3002", "motivation": "\u73b0\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u5728\u5b89\u5168\u3001\u76f4\u89c2\u64cd\u4f5c\u590d\u6742\u6307\u9488\u6570\u636e\u7ed3\u6784\u65f6\u9762\u4e34\u91cd\u5927\u6311\u6218\u3002\u4f20\u7edf\u7684\u6307\u9488\u64cd\u4f5c\u590d\u6742\u4e14\u6613\u9519\uff0c\u73b0\u6709\u7c7b\u578b\u7cfb\u7edf\u867d\u7136\u6709\u6240\u6539\u8fdb\uff0c\u4f46\u9ad8\u5c42\u58f0\u660e\u5f0f\u8bed\u8a00\u64cd\u4f5c\u9ad8\u590d\u6742\u6027\u7684\u6307\u9488\u7ed3\u6784\u95ee\u9898\u4ecd\u672a\u5b8c\u5168\u89e3\u51b3\u3002", "method": "\u63d0\u5347\u4e86\u03bb_{GT}\u7eaf\u51fd\u6570\u8bed\u8a00\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u5f15\u5165\u4e86\u7ebf\u6027\u8574\u542b\u4ee5\u53ca\u65b0\u7ea6\u675f\uff0c\u7528\u4ee5\u652f\u6301\u4e0d\u5b8c\u6574\u56fe\u7ed3\u6784\uff0c\u5e76\u5f3a\u5316\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u786e\u4fdd\u64cd\u4f5c\u5b89\u5168\u6027\u548c\u7cfb\u7edf\u5065\u58ee\u6027\u3002", "result": "\u65b0\u7684\u7c7b\u578b\u7cfb\u7edf\u89e3\u51b3\u4e86\u539f\u6709\u03bb_{GT}\u5728\u5904\u7406\u4e0d\u5b8c\u6574\u56fe\u548c\u4f9d\u8d56\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u65f6\u7684\u4e0d\u8db3\uff0c\u63d0\u5347\u4e86\u9759\u6001\u5b89\u5168\u4fdd\u969c\u3002", "conclusion": "\u672c\u7814\u7a76\u901a\u8fc7\u6269\u5c55\u03bb_{GT}\u7c7b\u578b\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e86\u5bf9\u590d\u6742\u6307\u9488\u7ed3\u6784\u7684\u9ad8\u5c42\u6b21\u58f0\u660e\u5f0f\u5b89\u5168\u64cd\u4f5c\uff0c\u6709\u6548\u514b\u670d\u4e86\u4e4b\u524d\u4e24\u9879\u4e3b\u8981\u96be\u9898\u3002"}}
